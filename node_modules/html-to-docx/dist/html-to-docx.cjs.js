"use strict";var ex,JSZip=(ex=require("jszip"))&&"object"==typeof ex&&"default"in ex?ex.default:ex,xmlbuilder2=require("xmlbuilder2");const namespaces_a="http://schemas.openxmlformats.org/drawingml/2006/main",namespaces_cdr="http://schemas.openxmlformats.org/drawingml/2006/chartDrawing",namespaces_dc="http://purl.org/dc/elements/1.1/",namespaces_dcmitype="http://purl.org/dc/dcmitype/",namespaces_dcterms="http://purl.org/dc/terms/",namespaces_o="urn:schemas-microsoft-com:office:office",namespaces_pic="http://schemas.openxmlformats.org/drawingml/2006/picture",namespaces_r="http://schemas.openxmlformats.org/officeDocument/2006/relationships",namespaces_v="urn:schemas-microsoft-com:vml",namespaces_ve="http://schemas.openxmlformats.org/markup-compatibility/2006",namespaces_vt="http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes",namespaces_w="http://schemas.openxmlformats.org/wordprocessingml/2006/main",namespaces_w10="urn:schemas-microsoft-com:office:word",namespaces_wp="http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing",namespaces_wne="http://schemas.microsoft.com/office/word/2006/wordml",namespaces_xsi="http://www.w3.org/2001/XMLSchema-instance",namespaces_numbering="http://schemas.openxmlformats.org/officeDocument/2006/relationships/numbering",namespaces_hyperlinks="http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink",namespaces_images="http://schemas.openxmlformats.org/officeDocument/2006/relationships/image",namespaces_styles="http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles",namespaces_headers="http://schemas.openxmlformats.org/officeDocument/2006/relationships/header",namespaces_footers="http://schemas.openxmlformats.org/officeDocument/2006/relationships/footer",namespaces_coreProperties="http://schemas.openxmlformats.org/package/2006/metadata/core-properties",namespaces_officeDocumentRelation="http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument",namespaces_corePropertiesRelation="http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties",namespaces_settingsRelation="http://schemas.openxmlformats.org/officeDocument/2006/relationships/settings",namespaces_webSettingsRelation="http://schemas.openxmlformats.org/officeDocument/2006/relationships/webSettings",namespaces_sl="http://schemas.openxmlformats.org/schemaLibrary/2006/main",rgbRegex=/rgb\((\d+),\s*([\d.]+),\s*([\d.]+)\)/i,hslRegex=/hsl\((\d+),\s*([\d.]+)%,\s*([\d.]+)%\)/i,hexRegex=/#([0-9A-F]{6})/i,hex3Regex=/#([0-9A-F])([0-9A-F])([0-9A-F])/i,rgbToHex=(red,green,blue)=>[red,green,blue].map(x=>1===(x=parseInt(x).toString(16)).length?"0"+x:x).join(""),defaultHeadingSizesInPixel={h1:32,h2:24,h3:18.72,h4:16,h5:13.28,h6:10.72},pixelRegex=/([\d.]+)px/i,percentageRegex=/([\d.]+)%/i,pointRegex=/(\d+)pt/i,cmRegex=/([\d.]+)cm/i,inchRegex=/([\d.]+)in/i,pixelToEMU=pixelValue=>Math.round(9525*pixelValue),EMUToTWIP=EMUValue=>Math.round(EMUValue/635),pointToTWIP=pointValue=>Math.round(20*pointValue),pointToHIP=pointValue=>Math.round(2*pointValue),pixelToTWIP=pixelValue=>EMUToTWIP(pixelToEMU(pixelValue)),pixelToHIP=pixelValue=>{return TWIPValue=EMUToTWIP(pixelToEMU(pixelValue)),Math.round(TWIPValue/10);var TWIPValue},inchToTWIP=inchValue=>pointToTWIP((inchValue=>Math.round(72*inchValue))(inchValue)),pixelToPoint=pixelValue=>{return HIPValue=pixelToHIP(pixelValue),Math.round(HIPValue/2);var HIPValue},pointToEIP=PointValue=>Math.round(8*PointValue),isVNode=require("virtual-dom/vnode/is-vnode"),isVText=require("virtual-dom/vnode/is-vtext"),colorNames=require("color-name"),VText=require("virtual-dom/vnode/vtext"),fixupColorCode=colorCodeString=>{if(Object.prototype.hasOwnProperty.call(colorNames,colorCodeString.toLowerCase())){const[red,green,blue]=colorNames[colorCodeString.toLowerCase()];return rgbToHex(red,green,blue)}if(rgbRegex.test(colorCodeString)){const matchedParts=colorCodeString.match(rgbRegex),red=matchedParts[1],green=matchedParts[2],blue=matchedParts[3];return rgbToHex(red,green,blue)}if(hslRegex.test(colorCodeString)){const matchedParts=colorCodeString.match(hslRegex);return((hue,saturation,luminosity)=>{let red,green,blue;if(hue/=360,luminosity/=100,0===(saturation/=100))red=green=blue=luminosity;else{const hue2rgb=(p,q,t)=>(t<0&&(t+=1),t>1&&(t-=1),t<1/6?p+6*(q-p)*t:t<.5?q:t<2/3?p+(q-p)*(2/3-t)*6:p),q=luminosity<.5?luminosity*(1+saturation):luminosity+saturation-luminosity*saturation,p=2*luminosity-q;red=hue2rgb(p,q,hue+1/3),green=hue2rgb(p,q,hue),blue=hue2rgb(p,q,hue-1/3)}return[red,green,blue].map(x=>{const hex=Math.round(255*x).toString(16);return 1===hex.length?"0"+hex:hex}).join("")})(matchedParts[1],matchedParts[2],matchedParts[3])}if(hexRegex.test(colorCodeString)){return colorCodeString.match(hexRegex)[1]}if(hex3Regex.test(colorCodeString)){const matchedParts=colorCodeString.match(hex3Regex);return((red,green,blue)=>[red,green,blue].map(x=>`${x}${x}`).join(""))(matchedParts[1],matchedParts[2],matchedParts[3])}return"000000"},buildShading=colorCode=>xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","shd").att("@w","val","clear").att("@w","fill",colorCode).up(),buildVertAlign=(type="subscript")=>xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","vertAlign").att("@w","val",type).up(),buildBold=()=>xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","b").up(),buildItalics=()=>xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","i").up(),buildUnderline=(type="single")=>xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","u").att("@w","val",type).up(),buildBorder=(borderSide="top",borderSize=0,borderSpacing=0,borderColor=fixupColorCode("black"),borderStroke="single")=>xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w",borderSide).att("@w","val",borderStroke).att("@w","sz",borderSize).att("@w","space",borderSpacing).att("@w","color",borderColor).up(),buildTextElement=text=>xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","t").att("@xml","space","preserve").txt(text).up(),buildRunProperties=attributes=>{const runPropertiesFragment=xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","rPr");return attributes&&attributes.constructor===Object&&Object.keys(attributes).forEach(key=>{switch(key){case"strong":const boldFragment=buildBold();runPropertiesFragment.import(boldFragment);break;case"i":const italicsFragment=buildItalics();runPropertiesFragment.import(italicsFragment);break;case"u":const underlineFragment=buildUnderline();runPropertiesFragment.import(underlineFragment);break;case"color":const colorFragment=(colorCode=attributes[key],xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","color").att("@w","val",colorCode).up());runPropertiesFragment.import(colorFragment);break;case"backgroundColor":const shadingFragment=buildShading(attributes[key]);runPropertiesFragment.import(shadingFragment);break;case"fontSize":const fontSizeFragment=(fontSize=attributes[key],xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","sz").att("@w","val",fontSize).up());runPropertiesFragment.import(fontSizeFragment);break;case"hyperlink":const hyperlinkStyleFragment=((type="Hyperlink")=>xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","rStyle").att("@w","val",type).up())("Hyperlink");runPropertiesFragment.import(hyperlinkStyleFragment)}var fontSize,colorCode}),runPropertiesFragment.up(),runPropertiesFragment},buildTextFormatting=vNode=>{switch(vNode.tagName){case"strong":case"b":return buildBold();case"em":case"i":return buildItalics();case"ins":case"u":return buildUnderline();case"strike":case"del":case"s":return xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","strike").att("@w","val",!0).up();case"sub":return buildVertAlign("subscript");case"sup":return buildVertAlign("subscript");case"mark":return((color="yellow")=>xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","highlight").att("@w","val",color).up())()}},buildRun=(vNode,attributes)=>{const runFragment=xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","r"),runPropertiesFragment=buildRunProperties(attributes);if(isVNode(vNode)&&["span","strong","b","em","i","u","ins","strike","del","s","sub","sup","mark","blockquote"].includes(vNode.tagName)){const textArray=[];let vNodes=[vNode];for(;vNodes.length;){const tempVNode=vNodes.shift();if(isVText(tempVNode)&&textArray.push(tempVNode.text),isVNode(tempVNode)&&["strong","b","em","i","u","ins","strike","del","s","sub","sup","mark"].includes(tempVNode.tagName)){const formattingFragment=buildTextFormatting(tempVNode);runPropertiesFragment.import(formattingFragment)}tempVNode.children&&tempVNode.children.length&&(vNodes=tempVNode.children.slice().concat(vNodes))}if(textArray.length){const combinedString=textArray.join("");vNode=new VText(combinedString)}}if(runFragment.import(runPropertiesFragment),isVText(vNode)){const textFragment=buildTextElement(vNode.text);runFragment.import(textFragment)}else if(attributes&&"picture"===attributes.type){const{type:type,inlineOrAnchored:inlineOrAnchored,...otherAttributes}=attributes,imageFragment=buildDrawing(inlineOrAnchored,type,otherAttributes);runFragment.import(imageFragment)}else if(isVNode(vNode)&&"br"===vNode.tagName){const lineBreakFragment=((type="textWrapping")=>xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","br").att("@w","type",type).up())();runFragment.import(lineBreakFragment)}return runFragment.up(),runFragment},fixupLineHeight=(lineHeight,fontSize)=>{if(isNaN(lineHeight))return 240;if(fontSize){return HIPValue=+lineHeight*fontSize,Math.round(10*HIPValue)}return 240*+lineHeight;var HIPValue},fixupFontSize=fontSizeString=>{if(pointRegex.test(fontSizeString)){const matchedParts=fontSizeString.match(pointRegex);return pointToHIP(matchedParts[1])}if(pixelRegex.test(fontSizeString)){const matchedParts=fontSizeString.match(pixelRegex);return pixelToHIP(matchedParts[1])}},buildRunOrRuns=(vNode,attributes)=>{if(isVNode(vNode)&&"span"===vNode.tagName){const runFragments=[];for(let index=0;index<vNode.children.length;index++){const childVNode=vNode.children[index],modifiedAttributes={...attributes};isVNode(vNode)&&vNode.properties&&vNode.properties.style&&(vNode.properties.style.color&&!["transparent","auto"].includes(vNode.properties.style.color)&&(modifiedAttributes.color=fixupColorCode(vNode.properties.style.color)),vNode.properties.style["background-color"]&&!["transparent","auto"].includes(vNode.properties.style["background-color"])&&(modifiedAttributes.backgroundColor=fixupColorCode(vNode.properties.style["background-color"])),vNode.properties.style["font-size"]&&(modifiedAttributes.fontSize=fixupFontSize(vNode.properties.style["font-size"]))),runFragments.push(buildRun(childVNode,modifiedAttributes))}return runFragments}return buildRun(vNode,attributes)},buildRunOrHyperLink=(vNode,attributes,docxDocumentInstance)=>{if(isVNode(vNode)&&"a"===vNode.tagName){const relationshipId=docxDocumentInstance.createDocumentRelationships(docxDocumentInstance.relationshipFilename,"hyperlink",vNode.properties&&vNode.properties.href?vNode.properties.href:""),hyperlinkFragment=xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w,r:namespaces_r}}).ele("@w","hyperlink").att("@r","id","rId"+relationshipId),modifiedAttributes={...attributes};modifiedAttributes.hyperlink=!0;const runFragments=buildRunOrRuns(vNode.children[0],modifiedAttributes);if(Array.isArray(runFragments))for(let index=0;index<runFragments.length;index++){const runFragment=runFragments[index];hyperlinkFragment.import(runFragment)}else hyperlinkFragment.import(runFragments);return hyperlinkFragment.up(),hyperlinkFragment}return buildRunOrRuns(vNode,attributes)},buildHorizontalAlignment=horizontalAlignment=>{"justify"===horizontalAlignment&&(horizontalAlignment="both");return xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","jc").att("@w","val",horizontalAlignment).up()},buildParagraphProperties=attributes=>{const paragraphPropertiesFragment=xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","pPr");if(attributes&&attributes.constructor===Object){Object.keys(attributes).forEach(key=>{switch(key){case"numbering":const{levelId:levelId,numberingId:numberingId}=attributes[key],numberingPropertiesFragment=((levelId,numberingId)=>xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","numPr").ele("@w","ilvl").att("@w","val",String(levelId)).up().ele("@w","numId").att("@w","val",String(numberingId)).up().up())(levelId,numberingId);paragraphPropertiesFragment.import(numberingPropertiesFragment),delete attributes.numbering;break;case"textAlign":const horizontalAlignmentFragment=buildHorizontalAlignment(attributes[key]);paragraphPropertiesFragment.import(horizontalAlignmentFragment),delete attributes.textAlign;break;case"backgroundColor":if("block"===attributes.display){const shadingFragment=buildShading(attributes[key]);paragraphPropertiesFragment.import(shadingFragment);const paragraphBorderFragment=(()=>{const paragraphBorderFragment=xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","pBdr"),bordersObject={top:{size:0,spacing:3,color:"FFFFFF"},left:{size:0,spacing:3,color:"FFFFFF"},bottom:{size:0,spacing:3,color:"FFFFFF"},right:{size:0,spacing:3,color:"FFFFFF"}};return Object.keys(bordersObject).forEach(borderName=>{if(bordersObject[borderName]){const{size:size,spacing:spacing,color:color}=bordersObject[borderName],borderFragment=buildBorder(borderName,size,spacing,color);paragraphBorderFragment.import(borderFragment)}}),paragraphBorderFragment.up(),paragraphBorderFragment})();paragraphPropertiesFragment.import(paragraphBorderFragment),delete attributes.backgroundColor}break;case"indentation":const indentationFragment=((left=720)=>xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","ind").att("@w","left",left).up())(attributes[key].left);paragraphPropertiesFragment.import(indentationFragment),delete attributes.indentation}});const spacingFragment=((lineSpacing,beforeSpacing,afterSpacing)=>{const spacingFragment=xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","spacing");return lineSpacing&&spacingFragment.att("@w","line",lineSpacing),beforeSpacing&&spacingFragment.att("@w","before",beforeSpacing),afterSpacing&&spacingFragment.att("@w","after",afterSpacing),spacingFragment.att("@w","lineRule","exact").up(),spacingFragment})(attributes.lineHeight,attributes.beforeSpacing,attributes.afterSpacing);delete attributes.lineHeight,delete attributes.beforeSpacing,delete attributes.afterSpacing,paragraphPropertiesFragment.import(spacingFragment)}return paragraphPropertiesFragment.up(),paragraphPropertiesFragment},computeImageDimensions=(vNode,attributes)=>{const{maximumWidth:maximumWidth,originalWidth:originalWidth,originalHeight:originalHeight}=attributes,aspectRatio=originalWidth/originalHeight,maximumWidthInEMU=(TWIPValue=maximumWidth,Math.round(635*TWIPValue));var TWIPValue;let modifiedHeight,modifiedWidth,originalWidthInEMU=pixelToEMU(originalWidth),originalHeightInEMU=pixelToEMU(originalHeight);if(originalWidthInEMU>maximumWidthInEMU&&(originalWidthInEMU=maximumWidthInEMU,originalHeightInEMU=Math.round(originalWidthInEMU/aspectRatio)),vNode.properties&&vNode.properties.style){if(vNode.properties.style.width)if("auto"!==vNode.properties.style.width){if(pixelRegex.test(vNode.properties.style.width))modifiedWidth=pixelToEMU(vNode.properties.style.width.match(pixelRegex)[1]);else if(percentageRegex.test(vNode.properties.style.width)){const percentageValue=vNode.properties.style.width.match(percentageRegex)[1];modifiedWidth=Math.round(percentageValue/100*originalWidthInEMU)}}else vNode.properties.style.height&&"auto"===vNode.properties.style.height&&(modifiedWidth=originalWidthInEMU,modifiedHeight=originalHeightInEMU);if(vNode.properties.style.height)if("auto"!==vNode.properties.style.height){if(pixelRegex.test(vNode.properties.style.height))modifiedHeight=pixelToEMU(vNode.properties.style.height.match(pixelRegex)[1]);else if(percentageRegex.test(vNode.properties.style.height)){const percentageValue=vNode.properties.style.width.match(percentageRegex)[1];modifiedHeight=Math.round(percentageValue/100*originalHeightInEMU),modifiedWidth||(modifiedWidth=Math.round(modifiedHeight*aspectRatio))}}else modifiedWidth?modifiedHeight||(modifiedHeight=Math.round(modifiedWidth/aspectRatio)):(modifiedHeight=originalHeightInEMU,modifiedWidth=originalWidthInEMU);modifiedWidth&&!modifiedHeight?modifiedHeight=Math.round(modifiedWidth/aspectRatio):modifiedHeight&&!modifiedWidth&&(modifiedWidth=Math.round(modifiedHeight*aspectRatio))}else modifiedWidth=originalWidthInEMU,modifiedHeight=originalHeightInEMU;attributes.width=modifiedWidth,attributes.height=modifiedHeight},buildParagraph=(vNode,attributes,docxDocumentInstance)=>{const paragraphFragment=xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","p"),modifiedAttributes={...attributes};isVNode(vNode)&&vNode.properties&&vNode.properties.style&&(vNode.properties.style.color&&!["transparent","auto"].includes(vNode.properties.style.color)&&(modifiedAttributes.color=fixupColorCode(vNode.properties.style.color)),vNode.properties.style["background-color"]&&!["transparent","auto"].includes(vNode.properties.style["background-color"])&&(modifiedAttributes.backgroundColor=fixupColorCode(vNode.properties.style["background-color"])),vNode.properties.style["vertical-align"]&&["top","middle","bottom"].includes(vNode.properties.style["vertical-align"])&&(modifiedAttributes.verticalAlign=vNode.properties.style["vertical-align"]),vNode.properties.style["text-align"]&&["left","right","center","justify"].includes(vNode.properties.style["text-align"])&&(modifiedAttributes.textAlign=vNode.properties.style["text-align"]),vNode.properties.style["font-weight"]&&"bold"===vNode.properties.style["font-weight"]&&(modifiedAttributes.strong=vNode.properties.style["font-weight"]),vNode.properties.style["font-size"]&&(modifiedAttributes.fontSize=fixupFontSize(vNode.properties.style["font-size"])),vNode.properties.style["line-height"]&&(modifiedAttributes.lineHeight=fixupLineHeight(vNode.properties.style["line-height"],vNode.properties.style["font-size"]?fixupFontSize(vNode.properties.style["font-size"]):null)),vNode.properties.style.display&&(modifiedAttributes.display=vNode.properties.style.display)),isVNode(vNode)&&"blockquote"===vNode.tagName&&(modifiedAttributes.indentation={left:284},modifiedAttributes.textAlign="justify");const paragraphPropertiesFragment=buildParagraphProperties(modifiedAttributes);if(paragraphFragment.import(paragraphPropertiesFragment),isVNode(vNode)&&vNode.children&&Array.isArray(vNode.children)&&vNode.children.length)if(["span","strong","b","em","i","u","ins","strike","del","s","sub","sup","mark","a"].includes(vNode.tagName)){const runOrHyperlinkFragments=buildRunOrHyperLink(vNode,modifiedAttributes,docxDocumentInstance);if(Array.isArray(runOrHyperlinkFragments))for(let iteratorIndex=0;iteratorIndex<runOrHyperlinkFragments.length;iteratorIndex++){const runOrHyperlinkFragment=runOrHyperlinkFragments[iteratorIndex];paragraphFragment.import(runOrHyperlinkFragment)}else paragraphFragment.import(runOrHyperlinkFragments)}else if("blockquote"===vNode.tagName){const runFragment=buildRun(vNode,attributes);paragraphFragment.import(runFragment)}else for(let index=0;index<vNode.children.length;index++){const childVNode=vNode.children[index],runOrHyperlinkFragments=buildRunOrHyperLink(childVNode,modifiedAttributes,docxDocumentInstance);if(Array.isArray(runOrHyperlinkFragments))for(let iteratorIndex=0;iteratorIndex<runOrHyperlinkFragments.length;iteratorIndex++){const runOrHyperlinkFragment=runOrHyperlinkFragments[iteratorIndex];paragraphFragment.import(runOrHyperlinkFragment)}else paragraphFragment.import(runOrHyperlinkFragments)}else{isVNode(vNode)&&"img"===vNode.tagName&&computeImageDimensions(vNode,modifiedAttributes);const runFragments=buildRunOrRuns(vNode,modifiedAttributes);if(Array.isArray(runFragments))for(let index=0;index<runFragments.length;index++){const runFragment=runFragments[index];paragraphFragment.import(runFragment)}else paragraphFragment.import(runFragments)}return paragraphFragment.up(),paragraphFragment},buildTableCellProperties=attributes=>{const tableCellPropertiesFragment=xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","tcPr");return attributes&&attributes.constructor===Object&&Object.keys(attributes).forEach(key=>{switch(key){case"backgroundColor":const shadingFragment=buildShading(attributes[key]);tableCellPropertiesFragment.import(shadingFragment),delete attributes.backgroundColor;break;case"verticalAlign":const verticalAlignmentFragment=(verticalAlignment=>{"middle"===verticalAlignment.toLowerCase()&&(verticalAlignment="center");return xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","vAlign").att("@w","val",verticalAlignment).up()})(attributes[key]);tableCellPropertiesFragment.import(verticalAlignmentFragment),delete attributes.verticalAlign;break;case"colSpan":const gridSpanFragment=(spanValue=attributes[key],xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","gridSpan").att("@w","val",spanValue).up());tableCellPropertiesFragment.import(gridSpanFragment),delete attributes.colSpan;break;case"tableCellBorder":const tableCellBorderFragment=(tableCellBorder=>{const tableCellBordersFragment=xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","tcBorders"),{color:color,stroke:stroke,...borders}=tableCellBorder;return Object.keys(borders).forEach(border=>{if(tableCellBorder[border]){const borderFragment=buildBorder(border,tableCellBorder[border],0,color,stroke);tableCellBordersFragment.import(borderFragment)}}),tableCellBordersFragment.up(),tableCellBordersFragment})(attributes[key]);tableCellPropertiesFragment.import(tableCellBorderFragment),delete attributes.tableCellBorder}var spanValue}),tableCellPropertiesFragment.up(),tableCellPropertiesFragment},fixupTableCellBorder=(vNode,attributes)=>{if(Object.prototype.hasOwnProperty.call(vNode.properties.style,"border"))if("none"===vNode.properties.style.border||0===vNode.properties.style.border)attributes.tableCellBorder={};else{const[borderSize,borderStroke,borderColor]=cssBorderParser(vNode.properties.style.border);attributes.tableCellBorder={top:borderSize,left:borderSize,bottom:borderSize,right:borderSize,color:borderColor,stroke:borderStroke}}if(vNode.properties.style["border-top"]&&"0"===vNode.properties.style["border-top"])attributes.tableCellBorder={...attributes.tableCellBorder,top:0};else if(vNode.properties.style["border-top"]&&"0"!==vNode.properties.style["border-top"]){const[borderSize,borderStroke,borderColor]=cssBorderParser(vNode.properties.style["border-top"]);attributes.tableCellBorder={...attributes.tableCellBorder,top:borderSize,color:borderColor,stroke:borderStroke}}if(vNode.properties.style["border-left"]&&"0"===vNode.properties.style["border-left"])attributes.tableCellBorder={...attributes.tableCellBorder,left:0};else if(vNode.properties.style["border-left"]&&"0"!==vNode.properties.style["border-left"]){const[borderSize,borderStroke,borderColor]=cssBorderParser(vNode.properties.style["border-left"]);attributes.tableCellBorder={...attributes.tableCellBorder,left:borderSize,color:borderColor,stroke:borderStroke}}if(vNode.properties.style["border-bottom"]&&"0"===vNode.properties.style["border-bottom"])attributes.tableCellBorder={...attributes.tableCellBorder,bottom:0};else if(vNode.properties.style["border-bottom"]&&"0"!==vNode.properties.style["border-bottom"]){const[borderSize,borderStroke,borderColor]=cssBorderParser(vNode.properties.style["border-bottom"]);attributes.tableCellBorder={...attributes.tableCellBorder,bottom:borderSize,color:borderColor,stroke:borderStroke}}if(vNode.properties.style["border-right"]&&"0"===vNode.properties.style["border-right"])attributes.tableCellBorder={...attributes.tableCellBorder,right:0};else if(vNode.properties.style["border-right"]&&"0"!==vNode.properties.style["border-right"]){const[borderSize,borderStroke,borderColor]=cssBorderParser(vNode.properties.style["border-right"]);attributes.tableCellBorder={...attributes.tableCellBorder,right:borderSize,color:borderColor,stroke:borderStroke}}},buildTableCell=(vNode,attributes,docxDocumentInstance)=>{const tableCellFragment=xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","tc"),modifiedAttributes={...attributes};isVNode(vNode)&&vNode.properties&&((vNode.properties.colSpan||vNode.properties.style&&vNode.properties.style["column-span"])&&(modifiedAttributes.colSpan=vNode.properties.colSpan||vNode.properties.style&&vNode.properties.style["column-span"]),vNode.properties.style&&(vNode.properties.style.color&&!["transparent","auto"].includes(vNode.properties.style.color)&&(modifiedAttributes.color=fixupColorCode(vNode.properties.style.color)),vNode.properties.style["background-color"]&&!["transparent","auto"].includes(vNode.properties.style["background-color"])&&(modifiedAttributes.backgroundColor=fixupColorCode(vNode.properties.style["background-color"])),vNode.properties.style["vertical-align"]&&["top","middle","bottom"].includes(vNode.properties.style["vertical-align"])&&(modifiedAttributes.verticalAlign=vNode.properties.style["vertical-align"])),vNode.properties.style&&fixupTableCellBorder(vNode,modifiedAttributes));const tableCellPropertiesFragment=buildTableCellProperties(modifiedAttributes);if(tableCellFragment.import(tableCellPropertiesFragment),vNode.children&&Array.isArray(vNode.children)&&vNode.children.length)for(let index=0;index<vNode.children.length;index++){const childVNode=vNode.children[index];if(isVNode(childVNode)&&"img"===childVNode.tagName){const imageFragment=buildImage(docxDocumentInstance,childVNode,modifiedAttributes.maximumWidth);imageFragment&&tableCellFragment.import(imageFragment)}else if(isVNode(childVNode)&&"figure"===childVNode.tagName){if(childVNode.children&&Array.isArray(childVNode.children)&&childVNode.children.length)for(let iteratorIndex=0;iteratorIndex<childVNode.children.length;iteratorIndex++){const grandChildVNode=childVNode.children[iteratorIndex];if("img"===grandChildVNode.tagName){const imageFragment=buildImage(docxDocumentInstance,grandChildVNode,modifiedAttributes.maximumWidth);imageFragment&&tableCellFragment.import(imageFragment)}}}else{const paragraphFragment=buildParagraph(childVNode,modifiedAttributes,docxDocumentInstance);tableCellFragment.import(paragraphFragment)}}else{const paragraphFragment=xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","p").up();tableCellFragment.import(paragraphFragment)}return tableCellFragment.up(),tableCellFragment},buildTableRowProperties=attributes=>{const tableRowPropertiesFragment=xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","trPr");return attributes&&attributes.constructor===Object&&Object.keys(attributes).forEach(key=>{switch(key){case"tableRowHeight":const tableRowHeightFragment=(tableRowHeight=attributes[key],xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","trHeight").att("@w","val",tableRowHeight).att("@w","hRule","atLeast").up());tableRowPropertiesFragment.import(tableRowHeightFragment),delete attributes.tableRowHeight;break;case"rowCantSplit":if(attributes.rowCantSplit){const cantSplitFragment=xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","cantSplit").up();tableRowPropertiesFragment.import(cantSplitFragment),delete attributes.rowCantSplit}}var tableRowHeight}),tableRowPropertiesFragment.up(),tableRowPropertiesFragment},buildTableRow=(vNode,attributes,docxDocumentInstance)=>{const tableRowFragment=xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","tr"),modifiedAttributes={...attributes};isVNode(vNode)&&vNode.properties&&((vNode.properties.style&&vNode.properties.style.height||vNode.children[0]&&isVNode(vNode.children[0])&&vNode.children[0].properties.style&&vNode.children[0].properties.style.height)&&(modifiedAttributes.tableRowHeight=(rowHeightString=>{if(pointRegex.test(rowHeightString)){const matchedParts=rowHeightString.match(pointRegex);return pointToTWIP(matchedParts[1])}if(pixelRegex.test(rowHeightString)){const matchedParts=rowHeightString.match(pixelRegex);return pixelToTWIP(matchedParts[1])}})(vNode.properties.style&&vNode.properties.style.height||(vNode.children[0]&&isVNode(vNode.children[0])&&vNode.children[0].properties.style&&vNode.children[0].properties.style.height?vNode.children[0].properties.style.height:void 0))),vNode.properties.style&&fixupTableCellBorder(vNode,modifiedAttributes));const tableRowPropertiesFragment=buildTableRowProperties(modifiedAttributes);if(tableRowFragment.import(tableRowPropertiesFragment),vNode.children&&Array.isArray(vNode.children)&&vNode.children.length){const tableColumns=vNode.children.filter(childVNode=>["td","th"].includes(childVNode.tagName)),columnWidth=docxDocumentInstance.availableDocumentSpace/tableColumns.length;for(let index=0;index<vNode.children.length;index++){const childVNode=vNode.children[index];if(["td","th"].includes(childVNode.tagName)){const tableCellFragment=buildTableCell(childVNode,{...modifiedAttributes,maximumWidth:columnWidth},docxDocumentInstance);tableRowFragment.import(tableCellFragment)}}}return tableRowFragment.up(),tableRowFragment},buildTableGridCol=gridWidth=>xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","gridCol").att("@w","w",String(gridWidth)),buildTableGrid=(vNode,attributes)=>{const tableGridFragment=xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","tblGrid");if(vNode.children&&Array.isArray(vNode.children)&&vNode.children.length){const gridColumns=vNode.children.filter(childVNode=>"col"===childVNode.tagName),gridWidth=attributes.maximumWidth/gridColumns.length;for(let index=0;index<gridColumns.length;index++){const tableGridColFragment=buildTableGridCol(gridWidth);tableGridFragment.import(tableGridColFragment)}}return tableGridFragment.up(),tableGridFragment},buildCellMargin=(side,margin)=>xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w",side).att("@w","type","dxa").att("@w","w",String(margin)).up(),buildTableProperties=attributes=>{const tablePropertiesFragment=xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","tblPr");attributes&&attributes.constructor===Object&&Object.keys(attributes).forEach(key=>{switch(key){case"tableBorder":const tableBordersFragment=(tableBorder=>{const tableBordersFragment=xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","tblBorders"),{color:color,stroke:stroke,...borders}=tableBorder;return Object.keys(borders).forEach(border=>{if(borders[border]){const borderFragment=buildBorder(border,borders[border],0,color,stroke);tableBordersFragment.import(borderFragment)}}),tableBordersFragment.up(),tableBordersFragment})(attributes[key]);tablePropertiesFragment.import(tableBordersFragment),delete attributes.tableBorder;break;case"tableCellSpacing":const tableCellSpacingFragment=((cellSpacing=0)=>xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","tblCellSpacing").att("@w","w",cellSpacing).att("@w","type","dxa").up())(attributes[key]);tablePropertiesFragment.import(tableCellSpacingFragment),delete attributes.tableCellSpacing;break;case"width":if(attributes[key]){const tableWidthFragment=(tableWidth=attributes[key],xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","tblW").att("@w","type","dxa").att("@w","w",String(tableWidth)).up());tablePropertiesFragment.import(tableWidthFragment)}delete attributes.width}var tableWidth});const tableCellMarginFragment=(margin=>{const tableCellMarFragment=xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","tblCellMar");return["top","bottom"].forEach(side=>{const marginFragment=buildCellMargin(side,margin/2);tableCellMarFragment.import(marginFragment)}),["left","right"].forEach(side=>{const marginFragment=buildCellMargin(side,margin);tableCellMarFragment.import(marginFragment)}),tableCellMarFragment})(160);tablePropertiesFragment.import(tableCellMarginFragment);const alignmentFragment=buildHorizontalAlignment("center");return tablePropertiesFragment.import(alignmentFragment),tablePropertiesFragment.up(),tablePropertiesFragment},cssBorderParser=borderString=>{let[size,stroke,color]=borderString.split(" ");if(pointRegex.test(size)){const matchedParts=size.match(pointRegex);size=pointToEIP(matchedParts[1])}else if(pixelRegex.test(size)){const matchedParts=size.match(pixelRegex);pixelValue=matchedParts[1],size=pointToEIP(pixelToPoint(pixelValue))}var pixelValue;return stroke=stroke&&["dashed","dotted","double"].includes(stroke)?stroke:"single",color=color&&fixupColorCode(color).toUpperCase(),[size,stroke,color]},buildTable=(vNode,attributes,docxDocumentInstance)=>{const tableFragment=xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","tbl"),modifiedAttributes={...attributes};if(isVNode(vNode)&&vNode.properties){const tableAttributes=vNode.properties.attributes||{},tableStyles=vNode.properties.style||{},tableBorders={},tableCellBorders={};let minimumWidth,maximumWidth,width,[borderSize,borderStrike,borderColor]=[2,"single","000000"];if(isNaN(tableAttributes.border)||(borderSize=parseInt(tableAttributes.border,10)),tableStyles.border){const[cssSize,cssStroke,cssColor]=cssBorderParser(tableStyles.border);borderSize=cssSize||borderSize,borderColor=cssColor||borderColor,borderStrike=cssStroke||borderStrike}if(tableBorders.top=borderSize,tableBorders.bottom=borderSize,tableBorders.left=borderSize,tableBorders.right=borderSize,tableBorders.stroke=borderStrike,tableBorders.color=borderColor,"collapse"===tableStyles["border-collapse"]?(tableBorders.insideV=borderSize,tableBorders.insideH=borderSize):(tableBorders.insideV=0,tableBorders.insideH=0,tableCellBorders.top=1,tableCellBorders.bottom=1,tableCellBorders.left=1,tableCellBorders.right=1),modifiedAttributes.tableBorder=tableBorders,modifiedAttributes.tableCellSpacing=0,Object.keys(tableCellBorders).length&&(modifiedAttributes.tableCellBorder=tableCellBorders),pixelRegex.test(tableStyles["min-width"]))minimumWidth=pixelToTWIP(tableStyles["min-width"].match(pixelRegex)[1]);else if(percentageRegex.test(tableStyles["min-width"])){const percentageValue=tableStyles["min-width"].match(percentageRegex)[1];minimumWidth=Math.round(percentageValue/100*attributes.maximumWidth)}if(pixelRegex.test(tableStyles["max-width"]))pixelRegex.lastIndex=0,maximumWidth=pixelToTWIP(tableStyles["max-width"].match(pixelRegex)[1]);else if(percentageRegex.test(tableStyles["max-width"])){percentageRegex.lastIndex=0;const percentageValue=tableStyles["max-width"].match(percentageRegex)[1];maximumWidth=Math.round(percentageValue/100*attributes.maximumWidth)}if(pixelRegex.test(tableStyles.width))pixelRegex.lastIndex=0,width=pixelToTWIP(tableStyles.width.match(pixelRegex)[1]);else if(percentageRegex.test(tableStyles.width)){percentageRegex.lastIndex=0;const percentageValue=tableStyles.width.match(percentageRegex)[1];width=Math.round(percentageValue/100*attributes.maximumWidth)}width?(modifiedAttributes.width=width,maximumWidth&&(modifiedAttributes.width=Math.min(modifiedAttributes.width,maximumWidth)),minimumWidth&&(modifiedAttributes.width=Math.max(modifiedAttributes.width,minimumWidth))):minimumWidth&&(modifiedAttributes.width=minimumWidth),modifiedAttributes.width&&(modifiedAttributes.width=Math.min(modifiedAttributes.width,attributes.maximumWidth))}const tablePropertiesFragment=buildTableProperties(modifiedAttributes);if(tableFragment.import(tablePropertiesFragment),vNode.children&&Array.isArray(vNode.children)&&vNode.children.length)for(let index=0;index<vNode.children.length;index++){const childVNode=vNode.children[index];if("colgroup"===childVNode.tagName){const tableGridFragment=buildTableGrid(childVNode,modifiedAttributes);tableFragment.import(tableGridFragment)}else if("thead"===childVNode.tagName)for(let iteratorIndex=0;iteratorIndex<childVNode.children.length;iteratorIndex++){const grandChildVNode=childVNode.children[iteratorIndex];if("tr"===grandChildVNode.tagName){const tableRowFragment=buildTableRow(grandChildVNode,modifiedAttributes,docxDocumentInstance);tableFragment.import(tableRowFragment)}}else if("tbody"===childVNode.tagName)for(let iteratorIndex=0;iteratorIndex<childVNode.children.length;iteratorIndex++){const grandChildVNode=childVNode.children[iteratorIndex];if("tr"===grandChildVNode.tagName){const tableRowFragment=buildTableRow(grandChildVNode,modifiedAttributes,docxDocumentInstance);tableFragment.import(tableRowFragment)}}else if("tr"===childVNode.tagName){const tableRowFragment=buildTableRow(childVNode,modifiedAttributes,docxDocumentInstance);tableFragment.import(tableRowFragment)}}return tableFragment.up(),tableFragment},buildGraphicFrameTransform=attributes=>{const graphicFrameTransformFragment=xmlbuilder2.fragment({namespaceAlias:{a:namespaces_a}}).ele("@a","xfrm"),offsetFragment=xmlbuilder2.fragment({namespaceAlias:{a:namespaces_a}}).ele("@a","off").att("x","0").att("y","0").up();graphicFrameTransformFragment.import(offsetFragment);const extentsFragment=(({width:width,height:height})=>xmlbuilder2.fragment({namespaceAlias:{a:namespaces_a}}).ele("@a","ext").att("cx",width).att("cy",height).up())(attributes);return graphicFrameTransformFragment.import(extentsFragment),graphicFrameTransformFragment.up(),graphicFrameTransformFragment},buildShapeProperties=attributes=>{const shapeProperties=xmlbuilder2.fragment({namespaceAlias:{pic:namespaces_pic}}).ele("@pic","spPr"),graphicFrameTransformFragment=buildGraphicFrameTransform(attributes);shapeProperties.import(graphicFrameTransformFragment);const presetGeometryFragment=xmlbuilder2.fragment({namespaceAlias:{a:namespaces_a}}).ele("@a","prstGeom").att("prst","rect").up();return shapeProperties.import(presetGeometryFragment),shapeProperties.up(),shapeProperties},buildStretch=()=>{const stretchFragment=xmlbuilder2.fragment({namespaceAlias:{a:namespaces_a}}).ele("@a","stretch"),fillRectFragment=xmlbuilder2.fragment({namespaceAlias:{a:namespaces_a}}).ele("@a","fillRect").up();return stretchFragment.import(fillRectFragment),stretchFragment.up(),stretchFragment},buildBinaryLargeImageOrPictureFill=relationshipId=>{const binaryLargeImageOrPictureFillFragment=xmlbuilder2.fragment({namespaceAlias:{pic:namespaces_pic}}).ele("@pic","blipFill"),binaryLargeImageOrPictureFragment=(relationshipId=>{const binaryLargeImageOrPictureFragment=xmlbuilder2.fragment({namespaceAlias:{a:namespaces_a,r:namespaces_r}}).ele("@a","blip").att("@r","embed","rId"+relationshipId).att("cstate","print");return binaryLargeImageOrPictureFragment.up(),binaryLargeImageOrPictureFragment})(relationshipId);binaryLargeImageOrPictureFillFragment.import(binaryLargeImageOrPictureFragment);const srcRectFragment=xmlbuilder2.fragment({namespaceAlias:{a:namespaces_a}}).ele("@a","srcRect").att("b","0").att("l","0").att("r","0").att("t","0").up();binaryLargeImageOrPictureFillFragment.import(srcRectFragment);const stretchFragment=buildStretch();return binaryLargeImageOrPictureFillFragment.import(stretchFragment),binaryLargeImageOrPictureFillFragment.up(),binaryLargeImageOrPictureFillFragment},buildNonVisualPictureProperties=(pictureId,pictureNameWithExtension,pictureDescription)=>{const nonVisualPicturePropertiesFragment=xmlbuilder2.fragment({namespaceAlias:{pic:namespaces_pic}}).ele("@pic","nvPicPr"),nonVisualDrawingPropertiesFragment=((pictureId,pictureNameWithExtension,pictureDescription="")=>{const nonVisualDrawingPropertiesFragment=xmlbuilder2.fragment({namespaceAlias:{pic:namespaces_pic}}).ele("@pic","cNvPr").att("id",pictureId).att("name",pictureNameWithExtension).att("descr",pictureDescription);return nonVisualDrawingPropertiesFragment.up(),nonVisualDrawingPropertiesFragment})(pictureId,pictureNameWithExtension,pictureDescription);nonVisualPicturePropertiesFragment.import(nonVisualDrawingPropertiesFragment);const nonVisualPictureDrawingPropertiesFragment=(()=>{const nonVisualPictureDrawingPropertiesFragment=xmlbuilder2.fragment({namespaceAlias:{pic:namespaces_pic}}).ele("@pic","cNvPicPr");return nonVisualPictureDrawingPropertiesFragment.up(),nonVisualPictureDrawingPropertiesFragment})();return nonVisualPicturePropertiesFragment.import(nonVisualPictureDrawingPropertiesFragment),nonVisualPicturePropertiesFragment.up(),nonVisualPicturePropertiesFragment},buildGraphicData=(graphicType,attributes)=>{const graphicDataFragment=xmlbuilder2.fragment({namespaceAlias:{a:namespaces_a}}).ele("@a","graphicData").att("uri","http://schemas.openxmlformats.org/drawingml/2006/picture");if("picture"===graphicType){const pictureFragment=(({id:id,fileNameWithExtension:fileNameWithExtension,description:description,relationshipId:relationshipId,width:width,height:height})=>{const pictureFragment=xmlbuilder2.fragment({namespaceAlias:{pic:namespaces_pic}}).ele("@pic","pic"),nonVisualPicturePropertiesFragment=buildNonVisualPictureProperties(id,fileNameWithExtension,description);pictureFragment.import(nonVisualPicturePropertiesFragment);const binaryLargeImageOrPictureFill=buildBinaryLargeImageOrPictureFill(relationshipId);pictureFragment.import(binaryLargeImageOrPictureFill);const shapeProperties=buildShapeProperties({width:width,height:height});return pictureFragment.import(shapeProperties),pictureFragment.up(),pictureFragment})(attributes);graphicDataFragment.import(pictureFragment)}return graphicDataFragment.up(),graphicDataFragment},buildGraphic=(graphicType,attributes)=>{const graphicFragment=xmlbuilder2.fragment({namespaceAlias:{a:namespaces_a}}).ele("@a","graphic"),graphicDataFragment=buildGraphicData(graphicType,attributes);return graphicFragment.import(graphicDataFragment),graphicFragment.up(),graphicFragment},buildDrawingObjectNonVisualProperties=(pictureId,pictureName)=>xmlbuilder2.fragment({namespaceAlias:{wp:namespaces_wp}}).ele("@wp","docPr").att("id",pictureId).att("name",pictureName).up(),buildEffectExtentFragment=()=>xmlbuilder2.fragment({namespaceAlias:{wp:namespaces_wp}}).ele("@wp","effectExtent").att("b","0").att("l","0").att("r","0").att("t","0").up(),buildExtent=({width:width,height:height})=>xmlbuilder2.fragment({namespaceAlias:{wp:namespaces_wp}}).ele("@wp","extent").att("cx",width).att("cy",height).up(),buildAnchoredDrawing=(graphicType,attributes)=>{const anchoredDrawingFragment=xmlbuilder2.fragment({namespaceAlias:{wp:namespaces_wp}}).ele("@wp","anchor").att("distB","0").att("distL","0").att("distR","0").att("distT","0").att("relativeHeight","0").att("behindDoc","false").att("locked","true").att("layoutInCell","true").att("allowOverlap","false").att("simplePos","false"),simplePosFragment=xmlbuilder2.fragment({namespaceAlias:{wp:namespaces_wp}}).ele("@wp","simplePos").att("x","0").att("y","0").up();anchoredDrawingFragment.import(simplePosFragment);const positionHFragment=xmlbuilder2.fragment({namespaceAlias:{wp:namespaces_wp}}).ele("@wp","positionH").att("relativeFrom","column").ele("@wp","posOffset").txt("19050").up().up();anchoredDrawingFragment.import(positionHFragment);const positionVFragment=xmlbuilder2.fragment({namespaceAlias:{wp:namespaces_wp}}).ele("@wp","positionV").att("relativeFrom","paragraph").ele("@wp","posOffset").txt("19050").up().up();anchoredDrawingFragment.import(positionVFragment);const extentFragment=buildExtent({width:attributes.width,height:attributes.height});anchoredDrawingFragment.import(extentFragment);const effectExtentFragment=buildEffectExtentFragment();anchoredDrawingFragment.import(effectExtentFragment);const wrapSquareFragment=xmlbuilder2.fragment({namespaceAlias:{wp:namespaces_wp}}).ele("@wp","wrapSquare").att("wrapText","bothSides").att("distB","228600").att("distT","228600").att("distL","228600").att("distR","228600").up();anchoredDrawingFragment.import(wrapSquareFragment);const drawingObjectNonVisualPropertiesFragment=buildDrawingObjectNonVisualProperties(attributes.id,attributes.fileNameWithExtension);anchoredDrawingFragment.import(drawingObjectNonVisualPropertiesFragment);const graphicFragment=buildGraphic(graphicType,attributes);return anchoredDrawingFragment.import(graphicFragment),anchoredDrawingFragment.up(),anchoredDrawingFragment},buildDrawing=(inlineOrAnchored=!1,graphicType,attributes)=>{const drawingFragment=xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","drawing"),inlineOrAnchoredDrawingFragment=inlineOrAnchored?((graphicType,attributes)=>{const inlineDrawingFragment=xmlbuilder2.fragment({namespaceAlias:{wp:namespaces_wp}}).ele("@wp","inline").att("distB","0").att("distL","0").att("distR","0").att("distT","0"),extentFragment=buildExtent({width:attributes.width,height:attributes.height});inlineDrawingFragment.import(extentFragment);const effectExtentFragment=buildEffectExtentFragment();inlineDrawingFragment.import(effectExtentFragment);const drawingObjectNonVisualPropertiesFragment=buildDrawingObjectNonVisualProperties(attributes.id,attributes.fileNameWithExtension);inlineDrawingFragment.import(drawingObjectNonVisualPropertiesFragment);const graphicFragment=buildGraphic(graphicType,attributes);return inlineDrawingFragment.import(graphicFragment),inlineDrawingFragment.up(),inlineDrawingFragment})(graphicType,attributes):buildAnchoredDrawing(graphicType,attributes);return drawingFragment.import(inlineOrAnchoredDrawingFragment),drawingFragment.up(),drawingFragment},VNode=require("virtual-dom/vnode/vnode"),VText$1=require("virtual-dom/vnode/vtext"),isVNode$1=require("virtual-dom/vnode/is-vnode"),isVText$1=require("virtual-dom/vnode/is-vtext"),escape=require("escape-html"),sizeOf=require("image-size"),convertHTML=require("html-to-vdom")({VNode:VNode,VText:VText$1}),buildImage=(docxDocumentInstance,vNode,maximumWidth=null)=>{let response=null;try{response=docxDocumentInstance.createMediaFile(decodeURIComponent(vNode.properties.src))}catch(error){}if(response){docxDocumentInstance.zip.folder("word").folder("media").file(response.fileNameWithExtension,Buffer.from(response.fileContent,"base64"),{createFolders:!1});const documentRelsId=docxDocumentInstance.createDocumentRelationships(docxDocumentInstance.relationshipFilename,"image","media/"+response.fileNameWithExtension,"Internal"),imageBuffer=Buffer.from(response.fileContent,"base64"),imageProperties=sizeOf(imageBuffer);return buildParagraph(vNode,{type:"picture",inlineOrAnchored:!0,relationshipId:documentRelsId,...response,maximumWidth:maximumWidth||docxDocumentInstance.availableDocumentSpace,originalWidth:imageProperties.width,originalHeight:imageProperties.height},docxDocumentInstance)}};function findXMLEquivalent(docxDocumentInstance,vNode,xmlFragment){if("div"===vNode.tagName&&("page-break"===vNode.properties.attributes.class||vNode.properties.style&&vNode.properties.style["page-break-after"])){const paragraphFragment=xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","p").ele("@w","r").ele("@w","br").att("@w","type","page").up().up().up();xmlFragment.import(paragraphFragment)}else{switch(vNode.tagName){case"h1":case"h2":case"h3":case"h4":case"h5":case"h6":const fontSize=pixelToHIP(defaultHeadingSizesInPixel[vNode.tagName]),lineHeight=fixupLineHeight(1,fontSize),headingFragment=buildParagraph(vNode,{fontSize:fontSize,lineHeight:Math.max(lineHeight,240),strong:"bold",beforeSpacing:240},docxDocumentInstance);return void xmlFragment.import(headingFragment);case"span":case"strong":case"b":case"em":case"i":case"u":case"ins":case"strike":case"del":case"s":case"sub":case"sup":case"mark":case"p":case"a":case"blockquote":const paragraphFragment=buildParagraph(vNode,{},docxDocumentInstance);return void xmlFragment.import(paragraphFragment);case"figure":if(vNode.children&&Array.isArray(vNode.children)&&vNode.children.length)for(let index=0;index<vNode.children.length;index++){const childVNode=vNode.children[index];if("table"===childVNode.tagName){const tableFragment=buildTable(childVNode,{maximumWidth:docxDocumentInstance.availableDocumentSpace,rowCantSplit:docxDocumentInstance.tableRowCantSplit},docxDocumentInstance);xmlFragment.import(tableFragment);const emptyParagraphFragment=buildParagraph(null,{});xmlFragment.import(emptyParagraphFragment)}else if("img"===childVNode.tagName){const imageFragment=buildImage(docxDocumentInstance,childVNode);imageFragment&&xmlFragment.import(imageFragment)}}return;case"table":const tableFragment=buildTable(vNode,{maximumWidth:docxDocumentInstance.availableDocumentSpace,rowCantSplit:docxDocumentInstance.tableRowCantSplit},docxDocumentInstance);xmlFragment.import(tableFragment);const emptyParagraphFragment=buildParagraph(null,{});return void xmlFragment.import(emptyParagraphFragment);case"ol":case"ul":const listElements=(vNode=>{const listElements=[];let vNodeObjects=[{node:vNode,level:0,type:vNode.tagName}];for(;vNodeObjects.length;){const tempVNodeObject=vNodeObjects.shift();if((isVText$1(tempVNodeObject.node)||isVNode$1(tempVNodeObject.node)&&!["ul","ol","li"].includes(tempVNodeObject.node.tagName))&&listElements.push({node:tempVNodeObject.node,level:tempVNodeObject.level,type:tempVNodeObject.type}),tempVNodeObject.node.children&&tempVNodeObject.node.children.length&&["ul","ol","li"].includes(tempVNodeObject.node.tagName)){vNodeObjects=tempVNodeObject.node.children.reduce((accumulator,childVNode)=>{if(["ul","ol"].includes(childVNode.tagName))accumulator.push({node:childVNode,level:tempVNodeObject.level+1,type:childVNode.tagName});else if(accumulator.length>0&&isVNode$1(accumulator[accumulator.length-1].node)&&"p"===accumulator[accumulator.length-1].node.tagName.toLowerCase())accumulator[accumulator.length-1].node.children.push(childVNode);else{const paragraphVNode=new VNode("p",null,isVText$1(childVNode)?[childVNode]:isVNode$1(childVNode)?"li"===childVNode.tagName.toLowerCase()?[...childVNode.children]:[childVNode]:[]);accumulator.push({node:isVNode$1(childVNode)?"li"===childVNode.tagName.toLowerCase()?childVNode:"p"!==childVNode.tagName.toLowerCase()?paragraphVNode:childVNode:paragraphVNode,level:tempVNodeObject.level,type:tempVNodeObject.type})}return accumulator},[]).concat(vNodeObjects)}}return listElements})(vNode),numberingId=docxDocumentInstance.createNumbering(listElements);for(let index=0;index<listElements.length;index++){const listElement=listElements[index],paragraphFragment=buildParagraph(listElement.node,{numbering:{levelId:listElement.level,numberingId:numberingId}},docxDocumentInstance);xmlFragment.import(paragraphFragment)}return;case"img":const imageFragment=buildImage(docxDocumentInstance,vNode);return void(imageFragment&&xmlFragment.import(imageFragment));case"br":const linebreakFragment=buildParagraph(null,{});return void xmlFragment.import(linebreakFragment)}if(vNode.children&&Array.isArray(vNode.children)&&vNode.children.length)for(let index=0;index<vNode.children.length;index++){convertVTreeToXML(docxDocumentInstance,vNode.children[index],xmlFragment)}}}function convertVTreeToXML(docxDocumentInstance,vTree,xmlFragment){if(!vTree)return"";if(Array.isArray(vTree)&&vTree.length)for(let index=0;index<vTree.length;index++){convertVTreeToXML(docxDocumentInstance,vTree[index],xmlFragment)}else isVNode$1(vTree)?findXMLEquivalent(docxDocumentInstance,vTree,xmlFragment):isVText$1(vTree)&&buildTextElement(xmlFragment,escape(String(vTree.text)));return xmlFragment}const documentRelsXML=`\n  <?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n\n  <Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">\n    <Relationship Id="rId1" Type="${namespaces_numbering}" Target="numbering.xml"/>\n    <Relationship Id="rId2" Type="${namespaces_styles}" Target="styles.xml"/>\n    <Relationship Id="rId3" Type="${namespaces_settingsRelation}" Target="settings.xml"/>\n    <Relationship Id="rId4" Type="${namespaces_webSettingsRelation}" Target="webSettings.xml"/>\n  </Relationships>\n`,relsXML=`\n    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n\n    <Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">\n        <Relationship Id="rId1" Type="${namespaces_officeDocumentRelation}" Target="word/document.xml"/>\n        <Relationship Id="rId2" Type="${namespaces_corePropertiesRelation}" Target="docProps/core.xml"/>\n    </Relationships>\n`,fontTableXML=`\n    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n\n    <w:fonts\n      xmlns:r="${namespaces_r}"\n      xmlns:w="${namespaces_w}"\n      >\n        <w:font w:name="Calibri">\n            <w:panose1 w:val="020F0502020204030204"/>\n            <w:charset w:val="00"/>\n            <w:family w:val="swiss"/>\n            <w:pitch w:val="variable"/>\n            <w:sig w:usb0="E4002EFF" w:usb1="C000247B" w:usb2="00000009" w:usb3="00000000" w:csb0="000001FF" w:csb1="00000000"/>\n        </w:font>\n        <w:font w:name="Times New Roman">\n            <w:panose1 w:val="02020603050405020304"/>\n            <w:charset w:val="00"/>\n            <w:family w:val="roman"/>\n            <w:pitch w:val="variable"/>\n            <w:sig w:usb0="E0002EFF" w:usb1="C000785B" w:usb2="00000009" w:usb3="00000000" w:csb0="000001FF" w:csb1="00000000"/>\n        </w:font>\n        <w:font w:name="Calibri Light">\n            <w:panose1 w:val="020F0302020204030204"/>\n            <w:charset w:val="00"/>\n            <w:family w:val="swiss"/>\n            <w:pitch w:val="variable"/>\n            <w:sig w:usb0="E4002EFF" w:usb1="C000247B" w:usb2="00000009" w:usb3="00000000" w:csb0="000001FF" w:csb1="00000000"/>\n        </w:font>\n    </w:fonts>\n`,settingsXML=`\n    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n\n    <w:settings xmlns:w="${namespaces_w}" xmlns:o="${namespaces_o}" xmlns:r="${namespaces_r}" xmlns:v="${namespaces_v}" xmlns:w10="${namespaces_w10}" xmlns:sl="${namespaces_sl}">\n        <w:zoom w:percent="100"/>\n        <w:defaultTabStop w:val="720"/>\n        <w:decimalSymbol w:val="."/>\n        <w:listSeparator w:val=","/>\n    </w:settings>\n`,webSettingsXML=`\n    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n\n    <w:webSettings xmlns:w="${namespaces_w}" xmlns:r="${namespaces_r}">\n    </w:webSettings>\n`,crypto=require("crypto"),landscapeMargins={top:1800,right:1440,bottom:1800,left:1440,header:720,footer:720,gutter:0},portraitMargins={top:1440,right:1800,bottom:1440,left:1800,header:720,footer:720,gutter:0};class DocxDocument{constructor({zip:zip,htmlString:htmlString,orientation:orientation,margins:margins,title:title,subject:subject,creator:creator,keywords:keywords,description:description,lastModifiedBy:lastModifiedBy,revision:revision,createdAt:createdAt,modifiedAt:modifiedAt,headerType:headerType,header:header,footerType:footerType,footer:footer,font:font,fontSize:fontSize,complexScriptFontSize:complexScriptFontSize,table:table,pageNumber:pageNumber,skipFirstHeaderFooter:skipFirstHeaderFooter}){this.zip=zip,this.htmlString=htmlString,this.orientation=orientation,this.width="landscape"===orientation?15840:12240,this.height="landscape"===orientation?12240:15840,this.margins=margins&&Object.keys(margins).length?margins:"landscape"===orientation?landscapeMargins:portraitMargins,this.availableDocumentSpace=this.width-this.margins.left-this.margins.right,this.title=title||"",this.subject=subject||"",this.creator=creator||"html-to-docx",this.keywords=keywords||["html-to-docx"],this.description=description||"",this.lastModifiedBy=lastModifiedBy||"html-to-docx",this.revision=revision||1,this.createdAt=createdAt||new Date,this.modifiedAt=modifiedAt||new Date,this.headerType=headerType||"default",this.header=header||!1,this.footerType=footerType||"default",this.footer=footer||!1,this.font=font||"Times New Roman",this.fontSize=fontSize||22,this.complexScriptFontSize=complexScriptFontSize||22,this.tableRowCantSplit=table&&table.row&&table.row.cantSplit||!1,this.pageNumber=pageNumber||!1,this.skipFirstHeaderFooter=skipFirstHeaderFooter||!1,this.lastNumberingId=0,this.lastMediaId=0,this.lastHeaderId=0,this.lastFooterId=0,this.stylesObjects=[],this.numberingObjects=[],this.relationshipFilename="document",this.relationships=[{fileName:"document",lastRelsId:4,rels:[]}],this.mediaFiles=[],this.headerObjects=[],this.footerObjects=[],this.documentXML=null,this.generateContentTypesXML=this.generateContentTypesXML.bind(this),this.generateCoreXML=this.generateCoreXML.bind(this),this.generateDocumentXML=this.generateDocumentXML.bind(this),this.generateSettingsXML=this.generateSettingsXML.bind(this),this.generateWebSettingsXML=this.generateWebSettingsXML.bind(this),this.generateStylesXML=this.generateStylesXML.bind(this),this.generateFontTableXML=this.generateFontTableXML.bind(this),this.generateNumberingXML=this.generateNumberingXML.bind(this),this.generateRelsXML=this.generateRelsXML.bind(this),this.createMediaFile=this.createMediaFile.bind(this),this.createDocumentRelationships=this.createDocumentRelationships.bind(this),this.generateHeaderXML=this.generateHeaderXML.bind(this),this.generateFooterXML=this.generateFooterXML.bind(this)}generateContentTypesXML(){const contentTypesXML$1=xmlbuilder2.create({encoding:"UTF-8",standalone:!0},'\n    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n\n    <Types xmlns="http://schemas.openxmlformats.org/package/2006/content-types">\n        <Default Extension="rels" ContentType="application/vnd.openxmlformats-package.relationships+xml" />\n        <Default Extension="jpeg" ContentType="image/jpeg"/>\n        <Default Extension="png" ContentType="image/png"/>\n        <Default Extension="xml" ContentType="application/xml"/>\n        <Override PartName="/_rels/.rels" ContentType="application/vnd.openxmlformats-package.relationships+xml"/>\n        <Override PartName="/word/_rels/document.xml.rels" ContentType="application/vnd.openxmlformats-package.relationships+xml"/>\n        <Override PartName="/word/document.xml" ContentType="application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml"/>\n        <Override PartName="/word/styles.xml" ContentType="application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml"/>\n        <Override PartName="/word/numbering.xml" ContentType="application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml"/>\n        <Override PartName="/word/fontTable.xml" ContentType="application/vnd.openxmlformats-officedocument.wordprocessingml.fontTable+xml"/>\n        <Override PartName="/docProps/core.xml" ContentType="application/vnd.openxmlformats-package.core-properties+xml"/>\n        <Override PartName="/word/settings.xml" ContentType="application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml"/>\n        <Override PartName="/word/webSettings.xml" ContentType="application/vnd.openxmlformats-officedocument.wordprocessingml.webSettings+xml"/>\n    </Types>\n');return this.headerObjects&&Array.isArray(this.headerObjects)&&this.headerObjects.length&&this.headerObjects.forEach(({headerId:headerId})=>{const contentTypesFragment=xmlbuilder2.fragment({defaultNamespace:{ele:"http://schemas.openxmlformats.org/package/2006/content-types"}}).ele("Override").att("PartName",`/word/header${headerId}.xml`).att("ContentType","application/vnd.openxmlformats-officedocument.wordprocessingml.header+xml").up();contentTypesXML$1.root().import(contentTypesFragment)}),this.footerObjects&&Array.isArray(this.footerObjects)&&this.footerObjects.length&&this.footerObjects.forEach(({footerId:footerId})=>{const contentTypesFragment=xmlbuilder2.fragment({defaultNamespace:{ele:"http://schemas.openxmlformats.org/package/2006/content-types"}}).ele("Override").att("PartName",`/word/footer${footerId}.xml`).att("ContentType","application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml").up();contentTypesXML$1.root().import(contentTypesFragment)}),contentTypesXML$1.toString({prettyPrint:!0})}generateCoreXML(){return xmlbuilder2.create({encoding:"UTF-8",standalone:!0},((title="",subject="",creator="html-to-docx",keywords=["html-to-docx"],description="",lastModifiedBy="html-to-docx",revision=1,createdAt=new Date,modifiedAt=new Date)=>`\n        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n\n        <cp:coreProperties\n          xmlns:cp="${namespaces_coreProperties}"\n          xmlns:dc="${namespaces_dc}"\n          xmlns:dcterms="${namespaces_dcterms}"\n          xmlns:dcmitype="${namespaces_dcmitype}"\n          xmlns:xsi="${namespaces_xsi}"\n          >\n            <dc:title>${title}</dc:title>\n            <dc:subject>${subject}</dc:subject>\n            <dc:creator>${creator}</dc:creator>\n            ${keywords&&Array.isArray(keywords)?`<cp:keywords>${keywords.join(", ")}</cp:keywords>`:""}\n            <dc:description>${description}</dc:description>\n            <cp:lastModifiedBy>${lastModifiedBy}</cp:lastModifiedBy>\n            <cp:revision>${revision}</cp:revision>\n            <dcterms:created xsi:type="dcterms:W3CDTF">${createdAt instanceof Date?createdAt.toISOString():(new Date).toISOString()}</dcterms:created>\n            <dcterms:modified xsi:type="dcterms:W3CDTF">${modifiedAt instanceof Date?modifiedAt.toISOString():(new Date).toISOString()}</dcterms:modified>\n        </cp:coreProperties>\n    `)(this.title,this.subject,this.creator,this.keywords,this.description,this.lastModifiedBy,this.revision,this.createdAt,this.modifiedAt)).toString({prettyPrint:!0})}generateDocumentXML(){const documentXML=xmlbuilder2.create({encoding:"UTF-8",standalone:!0},(width=this.width,height=this.height,orientation=this.orientation,margins=this.margins,`\n  <?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n\n    <w:document\n        xmlns:a="${namespaces_a}"\n        xmlns:cdr="${namespaces_cdr}"\n        xmlns:o="${namespaces_o}"\n        xmlns:pic="${namespaces_pic}"\n        xmlns:r="${namespaces_r}"\n        xmlns:v="${namespaces_v}"\n        xmlns:ve="${namespaces_ve}"\n        xmlns:vt="${namespaces_vt}"\n        xmlns:w="${namespaces_w}"\n        xmlns:w10="${namespaces_w10}"\n        xmlns:wp="${namespaces_wp}"\n        xmlns:wne="${namespaces_wne}"\n        >\n        <w:body>\n            <w:sectPr>\n                <w:pgSz w:w="${width}" w:h="${height}" w:orient="${orientation}" />\n                <w:pgMar w:top="${margins.top}"\n                        w:right="${margins.right}"\n                        w:bottom="${margins.bottom}"\n                        w:left="${margins.left}"\n                        w:header="${margins.header}"\n                        w:footer="${margins.footer}"\n                        w:gutter="${margins.gutter}"/>\n            </w:sectPr>\n        </w:body>\n    </w:document>\n  `));var width,height,orientation,margins;if(documentXML.root().first().import(this.documentXML),this.header&&this.headerObjects&&Array.isArray(this.headerObjects)&&this.headerObjects.length){const headerXmlFragment=xmlbuilder2.fragment();this.headerObjects.forEach(({relationshipId:relationshipId,type:type})=>{const headerFragment=xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w,r:namespaces_r}}).ele("@w","headerReference").att("@r","id","rId"+relationshipId).att("@w","type",type).up();headerXmlFragment.import(headerFragment)}),documentXML.root().first().first().import(headerXmlFragment)}if(this.footer&&this.footerObjects&&Array.isArray(this.footerObjects)&&this.footerObjects.length){const footerXmlFragment=xmlbuilder2.fragment();this.footerObjects.forEach(({relationshipId:relationshipId,type:type})=>{const footerFragment=xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w,r:namespaces_r}}).ele("@w","footerReference").att("@r","id","rId"+relationshipId).att("@w","type",type).up();footerXmlFragment.import(footerFragment)}),documentXML.root().first().first().import(footerXmlFragment)}if((this.header||this.footer)&&this.skipFirstHeaderFooter){const titlePageFragment=xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","titlePg");documentXML.root().first().first().import(titlePageFragment)}return documentXML.toString({prettyPrint:!0})}generateSettingsXML(){return xmlbuilder2.create({encoding:"UTF-8",standalone:!0},settingsXML).toString({prettyPrint:!0})}generateWebSettingsXML(){return xmlbuilder2.create({encoding:"UTF-8",standalone:!0},webSettingsXML).toString({prettyPrint:!0})}generateStylesXML(){return xmlbuilder2.create({encoding:"UTF-8",standalone:!0},((font="Times New Roman",fontSize=22,complexScriptFontSize=22)=>`\n    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n\n    <w:styles\n      xmlns:w="${namespaces_w}"\n      xmlns:r="${namespaces_r}" >\n        <w:docDefaults>\n          <w:rPrDefault>\n            <w:rPr>\n              <w:rFonts w:ascii="${font}" w:eastAsiaTheme="minorHAnsi" w:hAnsiTheme="minorHAnsi" w:cstheme="minorBidi" />\n              <w:sz w:val="${fontSize}"/>\n              <w:szCs w:val="${complexScriptFontSize}"/>\n              <w:lang w:val="en-US" w:eastAsia="en-US" w:bidi="ar-SA"/>\n            </w:rPr>\n          </w:rPrDefault>\n          <w:pPrDefault>\n            <w:pPr>\n              <w:spacing w:after="120" w:line="240" w:lineRule="atLeast"/>\n            </w:pPr>\n          </w:pPrDefault>\n        </w:docDefaults>\n        <w:style w:type="character" w:styleId="Hyperlink">\n          <w:name w:val="Hyperlink"/>\n          <w:rPr>\n            <w:color w:val="0000FF"/>\n            <w:u w:val="single"/>\n          </w:rPr>\n        </w:style>\n    </w:styles>\n  `)(this.font,this.fontSize,this.complexScriptFontSize)).toString({prettyPrint:!0})}generateFontTableXML(){return xmlbuilder2.create({encoding:"UTF-8",standalone:!0},fontTableXML).toString({prettyPrint:!0})}generateNumberingXML(){const numberingXML=xmlbuilder2.create({encoding:"UTF-8",standalone:!0},`\n        <?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n\n        <w:numbering\n        xmlns:w="${namespaces_w}"\n        xmlns:ve="${namespaces_ve}"\n        xmlns:o="${namespaces_o}"\n        xmlns:r="${namespaces_r}"\n        xmlns:v="${namespaces_v}"\n        xmlns:wp="${namespaces_wp}"\n        xmlns:w10="${namespaces_w10}"\n        xmlns:wne="${namespaces_wne}">\n        </w:numbering>\n    `),abstractNumberingFragments=xmlbuilder2.fragment(),numberingFragments=xmlbuilder2.fragment();return this.numberingObjects.forEach(({numberingId:numberingId,listElements:listElements})=>{const abstractNumberingFragment=xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","abstractNum").att("@w","abstractNumId",String(numberingId)).ele("@w","multiLevelType").att("@w","val","hybridMultilevel").up();listElements.filter((value,index,self)=>self.findIndex(v=>v.level===value.level)===index).forEach(({level:level,type:type})=>{const levelFragment=xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","lvl").att("@w","ilvl",level).ele("@w","start").att("@w","val","1").up().ele("@w","numFmt").att("@w","val","ol"===type?"decimal":"bullet").up().ele("@w","lvlText").att("@w","val","ol"===type?"%"+(level+1):"").up().ele("@w","lvlJc").att("@w","val","left").up().ele("@w","pPr").ele("@w","tabs").ele("@w","tab").att("@w","val","num").att("@w","pos",720*(level+1)).up().up().ele("@w","ind").att("@w","left",720*(level+1)).att("@w","hanging",360).up().up().up();if("ul"===type){const runPropertiesFragment=xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","rPr").ele("@w","rFonts").att("@w","ascii","Wingdings").att("@w","hAnsi","Wingdings").att("@w","hint","default").up().up();levelFragment.last().import(runPropertiesFragment)}abstractNumberingFragment.import(levelFragment)}),abstractNumberingFragment.up();const numberingFragment=xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","num").att("@w","numId",String(numberingId)).ele("@w","abstractNumId").att("@w","val",String(numberingId)).up().up();abstractNumberingFragments.import(abstractNumberingFragment),numberingFragments.import(numberingFragment)}),numberingXML.root().import(abstractNumberingFragments),numberingXML.root().import(numberingFragments),numberingXML.toString({prettyPrint:!0})}appendRelationships(xmlFragment,relationships){relationships.forEach(({relationshipId:relationshipId,type:type,target:target,targetMode:targetMode})=>{const relationshipFragment=xmlbuilder2.fragment({defaultNamespace:{ele:"http://schemas.openxmlformats.org/package/2006/relationships"}}).ele("Relationship").att("Id","rId"+relationshipId).att("Type",type).att("Target",target).att("TargetMode",targetMode).up();xmlFragment.import(relationshipFragment)})}generateRelsXML(){return this.relationships.map(({fileName:fileName,rels:rels})=>{let xmlFragment;return xmlFragment="document"===fileName?xmlbuilder2.create({encoding:"UTF-8",standalone:!0},documentRelsXML):xmlbuilder2.create({encoding:"UTF-8",standalone:!0},'\n    <?xml version="1.0" encoding="UTF-8" standalone="yes"?>\n\n    <Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">\n    </Relationships>\n'),this.appendRelationships(xmlFragment.root(),rels),{fileName:fileName,xmlString:xmlFragment.toString({prettyPrint:!0})}})}createNumbering(listElements){return this.lastNumberingId+=1,this.numberingObjects.push({numberingId:this.lastNumberingId,listElements:listElements}),this.lastNumberingId}createMediaFile(base64String){const matches=base64String.match(/^data:([A-Za-z-+\/]+);base64,(.+)$/);if(3!==matches.length)throw new Error("Invalid base64 string");const base64FileContent=matches[2],fileExtension="octet-stream"===matches[1].match(/\/(.*?)$/)[1]?"png":matches[1].match(/\/(.*?)$/)[1],fileNameWithExtension=`image-${crypto.createHash("sha1").update(crypto.randomBytes(20)).digest("hex")}.${fileExtension}`;return this.lastMediaId+=1,{id:this.lastMediaId,fileContent:base64FileContent,fileNameWithExtension:fileNameWithExtension}}createDocumentRelationships(fileName="document",type,target,targetMode="External"){let relationshipType,relationshipObject=this.relationships.find(relationship=>relationship.fileName===fileName),lastRelsId=1;switch(relationshipObject?(lastRelsId=relationshipObject.lastRelsId+1,relationshipObject.lastRelsId=lastRelsId):(relationshipObject={fileName:fileName,lastRelsId:lastRelsId,rels:[]},this.relationships.push(relationshipObject)),type){case"hyperlink":relationshipType=namespaces_hyperlinks;break;case"image":relationshipType=namespaces_images;break;case"header":relationshipType=namespaces_headers;break;case"footer":relationshipType=namespaces_footers}return relationshipObject.rels.push({relationshipId:lastRelsId,type:relationshipType,target:target,targetMode:targetMode}),lastRelsId}generateHeaderXML(vTree){const headerXML=xmlbuilder2.create({encoding:"UTF-8",standalone:!0,namespaceAlias:{w:namespaces_w,ve:namespaces_ve,o:namespaces_o,r:namespaces_r,v:namespaces_v,wp:namespaces_wp,w10:namespaces_w10}}).ele("@w","hdr"),XMLFragment=xmlbuilder2.fragment();return convertVTreeToXML(this,vTree,XMLFragment),headerXML.root().import(XMLFragment),this.lastHeaderId+=1,{headerId:this.lastHeaderId,headerXML:headerXML}}generateFooterXML(vTree){const footerXML=xmlbuilder2.create({encoding:"UTF-8",standalone:!0,namespaceAlias:{w:namespaces_w,ve:namespaces_ve,o:namespaces_o,r:namespaces_r,v:namespaces_v,wp:namespaces_wp,w10:namespaces_w10}}).ele("@w","ftr"),XMLFragment=xmlbuilder2.fragment();if(convertVTreeToXML(this,vTree,XMLFragment),"p"===XMLFragment.first().node.tagName&&this.pageNumber){const fieldSimpleFragment=xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}}).ele("@w","fldSimple").att("@w","instr","PAGE").ele("@w","r").up().up();XMLFragment.first().import(fieldSimpleFragment)}return footerXML.root().import(XMLFragment),this.lastFooterId+=1,{footerId:this.lastFooterId,footerXML:footerXML}}}const VNode$1=require("virtual-dom/vnode/vnode"),VText$2=require("virtual-dom/vnode/vtext"),convertHTML$1=require("html-to-vdom")({VNode:VNode$1,VText:VText$2}),defaultDocumentOptions={orientation:"portrait",margins:{top:1440,right:1800,bottom:1440,left:1800,header:720,footer:720,gutter:0},title:"",subject:"",creator:"html-to-docx",keywords:["html-to-docx"],description:"",lastModifiedBy:"html-to-docx",revision:1,createdAt:new Date,modifiedAt:new Date,headerType:"default",header:!1,footerType:"default",footer:!1,font:"Times New Roman",fontSize:22,complexScriptFontSize:22,table:{row:{cantSplit:!1}},pageNumber:!1,skipFirstHeaderFooter:!1},fixupMargins=margins=>{let normalizedMargins={};return"object"==typeof margins&&null!==margins?Object.keys(margins).forEach(key=>{if(pixelRegex.test(margins[key])){const matchedParts=margins[key].match(pixelRegex);normalizedMargins[key]=pixelToTWIP(matchedParts[1])}else if(cmRegex.test(margins[key])){const matchedParts=margins[key].match(cmRegex);normalizedMargins[key]=(cmValue=matchedParts[1],inchToTWIP((cmValue=>.3937008*cmValue)(cmValue)))}else if(inchRegex.test(margins[key])){const matchedParts=margins[key].match(inchRegex);normalizedMargins[key]=inchToTWIP(matchedParts[1])}else margins[key]?normalizedMargins[key]=margins[key]:normalizedMargins[key]=defaultDocumentOptions.margins[key];var cmValue}):normalizedMargins=null,normalizedMargins},normalizeDocumentOptions=documentOptions=>{const normalizedDocumentOptions={...documentOptions};return Object.keys(documentOptions).forEach(key=>{switch(key){case"margins":normalizedDocumentOptions.margins=fixupMargins(documentOptions[key]);break;case"fontSize":case"complexScriptFontSize":normalizedDocumentOptions[key]=(fontSize=>{let normalizedFontSize;if(pointRegex.test(fontSize)){const matchedParts=fontSize.match(pointRegex);normalizedFontSize=pointToHIP(matchedParts[1])}else normalizedFontSize=fontSize||null;return normalizedFontSize})(documentOptions[key])}}),normalizedDocumentOptions};function addFilesToContainer(zip,htmlString,suppliedDocumentOptions,headerHTMLString,footerHTMLString){const normalizedDocumentOptions=normalizeDocumentOptions(suppliedDocumentOptions),documentOptions=(options=defaultDocumentOptions,patch=normalizedDocumentOptions,{...options,...patch});var options,patch;documentOptions.header&&!headerHTMLString&&(headerHTMLString="<p></p>"),documentOptions.footer&&!footerHTMLString&&(footerHTMLString="<p></p>");const docxDocument=new DocxDocument({zip:zip,htmlString:htmlString,...documentOptions});var docxDocumentInstance;if(docxDocument.documentXML=convertVTreeToXML(docxDocumentInstance=docxDocument,convertHTML(docxDocumentInstance.htmlString),xmlbuilder2.fragment({namespaceAlias:{w:namespaces_w}})),zip.folder("_rels").file(".rels",xmlbuilder2.create({encoding:"UTF-8",standalone:!0},relsXML).toString({prettyPrint:!0}),{createFolders:!1}),zip.folder("docProps").file("core.xml",docxDocument.generateCoreXML(),{createFolders:!1}),docxDocument.header&&headerHTMLString){const vTree=convertHTML$1(headerHTMLString);docxDocument.relationshipFilename="header1";const{headerId:headerId,headerXML:headerXML}=docxDocument.generateHeaderXML(vTree);docxDocument.relationshipFilename="document";const relationshipId=docxDocument.createDocumentRelationships(docxDocument.relationshipFilename,"header",`header${headerId}.xml`,"Internal");zip.folder("word").file(`header${headerId}.xml`,headerXML.toString({prettyPrint:!0}),{createFolders:!1}),docxDocument.headerObjects.push({headerId:headerId,relationshipId:relationshipId,type:docxDocument.headerType})}if(docxDocument.footer&&footerHTMLString){const vTree=convertHTML$1(footerHTMLString);docxDocument.relationshipFilename="footer1";const{footerId:footerId,footerXML:footerXML}=docxDocument.generateFooterXML(vTree);docxDocument.relationshipFilename="document";const relationshipId=docxDocument.createDocumentRelationships(docxDocument.relationshipFilename,"footer",`footer${footerId}.xml`,"Internal");zip.folder("word").file(`footer${footerId}.xml`,footerXML.toString({prettyPrint:!0}),{createFolders:!1}),docxDocument.footerObjects.push({footerId:footerId,relationshipId:relationshipId,type:docxDocument.footerType})}zip.folder("word").file("document.xml",docxDocument.generateDocumentXML(),{createFolders:!1}).file("fontTable.xml",docxDocument.generateFontTableXML(),{createFolders:!1}).file("styles.xml",docxDocument.generateStylesXML(),{createFolders:!1}).file("numbering.xml",docxDocument.generateNumberingXML(),{createFolders:!1}).file("settings.xml",docxDocument.generateSettingsXML(),{createFolders:!1}).file("webSettings.xml",docxDocument.generateWebSettingsXML(),{createFolders:!1});const relationshipXMLs=docxDocument.generateRelsXML();return relationshipXMLs&&Array.isArray(relationshipXMLs)&&relationshipXMLs.forEach(({fileName:fileName,xmlString:xmlString})=>{zip.folder("word").folder("_rels").file(fileName+".xml.rels",xmlString,{createFolders:!1})}),zip.file("[Content_Types].xml",docxDocument.generateContentTypesXML(),{createFolders:!1}),zip}const{minify:minify}=require("html-minifier"),minifyHTMLString=htmlString=>{if(!("string"==typeof htmlString||htmlString instanceof String))return null;try{return minify(htmlString,{caseSensitive:!0,collapseWhitespace:!0,html5:!1,keepClosingSlash:!0})}catch(error){return null}};module.exports=async function(htmlString,headerHTMLString,documentOptions={},footerHTMLString){const zip=new JSZip;let contentHTML=htmlString,headerHTML=headerHTMLString,footerHTML=footerHTMLString;htmlString&&(contentHTML=minifyHTMLString(contentHTML)),headerHTMLString&&(headerHTML=minifyHTMLString(headerHTML)),footerHTMLString&&(footerHTML=minifyHTMLString(footerHTML)),addFilesToContainer(zip,contentHTML,documentOptions,headerHTML,footerHTML);const buffer=await zip.generateAsync({type:"arraybuffer"});if(Object.prototype.hasOwnProperty.call(global,"Blob"))return new Blob([buffer],{type:"application/vnd.openxmlformats-officedocument.wordprocessingml.document"});if(Object.prototype.hasOwnProperty.call(global,"Buffer"))return Buffer.from(new Uint8Array(buffer));throw new Error("Add blob support using a polyfill eg https://github.com/bjornstar/blob-polyfill")};
//# sourceMappingURL=html-to-docx.cjs.js.map
