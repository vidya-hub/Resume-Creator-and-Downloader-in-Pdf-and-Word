{"version":3,"file":"html-to-docx.cjs.js","sources":["../src/schemas/content-types.js","../src/helpers/namespaces.js","../src/utils/color-conversion.js","../src/utils/unit-conversion.js","../src/helpers/xml-builder.js","../src/helpers/render-document-file.js","../src/schemas/core.js","../src/schemas/document-rels.js","../src/schemas/rels.js","../src/schemas/font-table.js","../src/schemas/settings.js","../src/schemas/web-settings.js","../src/docx-document.js","../template/document.template.js","../src/schemas/styles.js","../src/schemas/numbering.js","../src/schemas/generic-rels.js","../src/html-to-docx.js","../index.js"],"sourcesContent":["const contentTypesXML = `\n    <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n\n    <Types xmlns=\"http://schemas.openxmlformats.org/package/2006/content-types\">\n        <Default Extension=\"rels\" ContentType=\"application/vnd.openxmlformats-package.relationships+xml\" />\n        <Default Extension=\"jpeg\" ContentType=\"image/jpeg\"/>\n        <Default Extension=\"png\" ContentType=\"image/png\"/>\n        <Default Extension=\"xml\" ContentType=\"application/xml\"/>\n        <Override PartName=\"/_rels/.rels\" ContentType=\"application/vnd.openxmlformats-package.relationships+xml\"/>\n        <Override PartName=\"/word/_rels/document.xml.rels\" ContentType=\"application/vnd.openxmlformats-package.relationships+xml\"/>\n        <Override PartName=\"/word/document.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml\"/>\n        <Override PartName=\"/word/styles.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml\"/>\n        <Override PartName=\"/word/numbering.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml\"/>\n        <Override PartName=\"/word/fontTable.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.wordprocessingml.fontTable+xml\"/>\n        <Override PartName=\"/docProps/core.xml\" ContentType=\"application/vnd.openxmlformats-package.core-properties+xml\"/>\n        <Override PartName=\"/word/settings.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml\"/>\n        <Override PartName=\"/word/webSettings.xml\" ContentType=\"application/vnd.openxmlformats-officedocument.wordprocessingml.webSettings+xml\"/>\n    </Types>\n`;\n\nexport default contentTypesXML;\n","const namespaces = {\n  a: 'http://schemas.openxmlformats.org/drawingml/2006/main',\n  b: 'http://schemas.openxmlformats.org/officeDocument/2006/bibliography',\n  cdr: 'http://schemas.openxmlformats.org/drawingml/2006/chartDrawing',\n  dc: 'http://purl.org/dc/elements/1.1/',\n  dcmitype: 'http://purl.org/dc/dcmitype/',\n  dcterms: 'http://purl.org/dc/terms/',\n  o: 'urn:schemas-microsoft-com:office:office',\n  pic: 'http://schemas.openxmlformats.org/drawingml/2006/picture',\n  r: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships',\n  v: 'urn:schemas-microsoft-com:vml',\n  ve: 'http://schemas.openxmlformats.org/markup-compatibility/2006',\n  vt: 'http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes',\n  w: 'http://schemas.openxmlformats.org/wordprocessingml/2006/main',\n  w10: 'urn:schemas-microsoft-com:office:word',\n  wp: 'http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing',\n  wne: 'http://schemas.microsoft.com/office/word/2006/wordml',\n  xsd: 'http://www.w3.org/2001/XMLSchema',\n  xsi: 'http://www.w3.org/2001/XMLSchema-instance',\n  numbering: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/numbering',\n  hyperlinks: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink',\n  images: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/image',\n  styles: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles',\n  headers: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/header',\n  footers: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/footer',\n  coreProperties: 'http://schemas.openxmlformats.org/package/2006/metadata/core-properties',\n  officeDocumentRelation:\n    'http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument',\n  corePropertiesRelation:\n    'http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties',\n  settingsRelation: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/settings',\n  webSettingsRelation:\n    'http://schemas.openxmlformats.org/officeDocument/2006/relationships/webSettings',\n  sl: 'http://schemas.openxmlformats.org/schemaLibrary/2006/main',\n};\n\nexport default namespaces;\n","/* eslint-disable no-param-reassign */\n\nexport const rgbRegex = /rgb\\((\\d+),\\s*([\\d.]+),\\s*([\\d.]+)\\)/i;\nexport const hslRegex = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/i;\nexport const hexRegex = /#([0-9A-F]{6})/i;\nexport const hex3Regex = /#([0-9A-F])([0-9A-F])([0-9A-F])/i;\n\n// eslint-disable-next-line import/prefer-default-export\nexport const rgbToHex = (red, green, blue) => {\n  const hexColorCode = [red, green, blue]\n    .map((x) => {\n      // eslint-disable-next-line radix, no-param-reassign\n      x = parseInt(x).toString(16);\n      return x.length === 1 ? `0${x}` : x;\n    })\n    .join('');\n\n  return hexColorCode;\n};\n\nexport const hslToHex = (hue, saturation, luminosity) => {\n  hue /= 360;\n  saturation /= 100;\n  luminosity /= 100;\n  // eslint-disable-next-line one-var\n  let red, green, blue;\n  if (saturation === 0) {\n    // eslint-disable-next-line no-multi-assign\n    red = green = blue = luminosity; // achromatic\n  } else {\n    const hue2rgb = (p, q, t) => {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    };\n    const q =\n      luminosity < 0.5\n        ? luminosity * (1 + saturation)\n        : luminosity + saturation - luminosity * saturation;\n    const p = 2 * luminosity - q;\n    red = hue2rgb(p, q, hue + 1 / 3);\n    green = hue2rgb(p, q, hue);\n    blue = hue2rgb(p, q, hue - 1 / 3);\n  }\n  return [red, green, blue]\n    .map((x) => {\n      const hex = Math.round(x * 255).toString(16);\n      return hex.length === 1 ? `0${hex}` : hex;\n    })\n    .join('');\n};\n\nexport const hex3ToHex = (red, green, blue) => {\n  const hexColorCode = [red, green, blue].map((x) => `${x}${x}`).join('');\n\n  return hexColorCode;\n};\n","export const defaultHeadingSizesInPixel = {\n  h1: 32,\n  h2: 24,\n  h3: 18.72,\n  h4: 16,\n  h5: 13.28,\n  h6: 10.72,\n};\n\nexport const pixelRegex = /([\\d.]+)px/i;\nexport const percentageRegex = /([\\d.]+)%/i;\nexport const pointRegex = /(\\d+)pt/i;\nexport const cmRegex = /([\\d.]+)cm/i;\nexport const inchRegex = /([\\d.]+)in/i;\n\nexport const pixelToEMU = (pixelValue) => {\n  return Math.round(pixelValue * 9525);\n};\n\nexport const EMUToPixel = (EMUValue) => {\n  return Math.round(EMUValue / 9525);\n};\n\nexport const TWIPToEMU = (TWIPValue) => {\n  return Math.round(TWIPValue * 635);\n};\n\nexport const EMUToTWIP = (EMUValue) => {\n  return Math.round(EMUValue / 635);\n};\n\nexport const pointToTWIP = (pointValue) => {\n  return Math.round(pointValue * 20);\n};\n\nexport const TWIPToPoint = (TWIPValue) => {\n  return Math.round(TWIPValue / 20);\n};\n\nexport const pointToHIP = (pointValue) => {\n  return Math.round(pointValue * 2);\n};\n\nexport const HIPToPoint = (HIPValue) => {\n  return Math.round(HIPValue / 2);\n};\n\nexport const HIPToTWIP = (HIPValue) => {\n  return Math.round(HIPValue * 10);\n};\n\nexport const TWIPToHIP = (TWIPValue) => {\n  return Math.round(TWIPValue / 10);\n};\n\nexport const pixelToTWIP = (pixelValue) => {\n  return EMUToTWIP(pixelToEMU(pixelValue));\n};\n\nexport const TWIPToPixel = (TWIPValue) => {\n  return EMUToPixel(TWIPToEMU(TWIPValue));\n};\n\nexport const pixelToHIP = (pixelValue) => {\n  return TWIPToHIP(EMUToTWIP(pixelToEMU(pixelValue)));\n};\n\nexport const HIPToPixel = (HIPValue) => {\n  return EMUToPixel(TWIPToEMU(HIPToTWIP(HIPValue)));\n};\n\nexport const inchToPoint = (inchValue) => {\n  return Math.round(inchValue * 72);\n};\n\nexport const inchToTWIP = (inchValue) => {\n  return pointToTWIP(inchToPoint(inchValue));\n};\n\nexport const cmToInch = (cmValue) => {\n  return cmValue * 0.3937008;\n};\n\nexport const cmToTWIP = (cmValue) => {\n  return inchToTWIP(cmToInch(cmValue));\n};\n\nexport const pixelToPoint = (pixelValue) => {\n  return HIPToPoint(pixelToHIP(pixelValue));\n};\n\nexport const pointToPixel = (pointValue) => {\n  return HIPToPixel(pointToHIP(pointValue));\n};\n\nexport const EIPToPoint = (EIPValue) => {\n  return Math.round(EIPValue / 8);\n};\n\nexport const pointToEIP = (PointValue) => {\n  return Math.round(PointValue * 8);\n};\n\nexport const pixelToEIP = (pixelValue) => {\n  return pointToEIP(pixelToPoint(pixelValue));\n};\n\nexport const EIPToPixel = (EIPValue) => {\n  return pointToPixel(EIPToPoint(EIPValue));\n};\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-case-declarations */\n/* eslint-disable no-plusplus */\n/* eslint-disable no-else-return */\nimport { fragment } from 'xmlbuilder2';\n\n// eslint-disable-next-line import/no-named-default\nimport { default as namespaces } from './namespaces';\nimport {\n  rgbToHex,\n  hslToHex,\n  hslRegex,\n  rgbRegex,\n  hexRegex,\n  hex3Regex,\n  hex3ToHex,\n} from '../utils/color-conversion';\nimport {\n  pixelToEMU,\n  pixelRegex,\n  TWIPToEMU,\n  percentageRegex,\n  pointRegex,\n  pointToHIP,\n  HIPToTWIP,\n  pointToTWIP,\n  pixelToHIP,\n  pixelToTWIP,\n  pixelToEIP,\n  pointToEIP,\n} from '../utils/unit-conversion';\n// FIXME: remove the cyclic dependency\n// eslint-disable-next-line import/no-cycle\nimport { buildImage } from './render-document-file';\n\nconst isVNode = require('virtual-dom/vnode/is-vnode');\nconst isVText = require('virtual-dom/vnode/is-vtext');\nconst colorNames = require('color-name');\nconst VText = require('virtual-dom/vnode/vtext');\n\n// eslint-disable-next-line consistent-return\nconst fixupColorCode = (colorCodeString) => {\n  if (Object.prototype.hasOwnProperty.call(colorNames, colorCodeString.toLowerCase())) {\n    const [red, green, blue] = colorNames[colorCodeString.toLowerCase()];\n\n    return rgbToHex(red, green, blue);\n  } else if (rgbRegex.test(colorCodeString)) {\n    const matchedParts = colorCodeString.match(rgbRegex);\n    const red = matchedParts[1];\n    const green = matchedParts[2];\n    const blue = matchedParts[3];\n\n    return rgbToHex(red, green, blue);\n  } else if (hslRegex.test(colorCodeString)) {\n    const matchedParts = colorCodeString.match(hslRegex);\n    const hue = matchedParts[1];\n    const saturation = matchedParts[2];\n    const luminosity = matchedParts[3];\n\n    return hslToHex(hue, saturation, luminosity);\n  } else if (hexRegex.test(colorCodeString)) {\n    const matchedParts = colorCodeString.match(hexRegex);\n\n    return matchedParts[1];\n  } else if (hex3Regex.test(colorCodeString)) {\n    const matchedParts = colorCodeString.match(hex3Regex);\n    const red = matchedParts[1];\n    const green = matchedParts[2];\n    const blue = matchedParts[3];\n\n    return hex3ToHex(red, green, blue);\n  } else {\n    return '000000';\n  }\n};\n\nconst buildRunStyleFragment = (type = 'Hyperlink') => {\n  const runStyleFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  })\n    .ele('@w', 'rStyle')\n    .att('@w', 'val', type)\n    .up();\n\n  return runStyleFragment;\n};\n\nconst buildTableRowHeight = (tableRowHeight) => {\n  const tableRowHeightFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  })\n    .ele('@w', 'trHeight')\n    .att('@w', 'val', tableRowHeight)\n    .att('@w', 'hRule', 'atLeast')\n    .up();\n\n  return tableRowHeightFragment;\n};\n\nconst buildVerticalAlignment = (verticalAlignment) => {\n  if (verticalAlignment.toLowerCase() === 'middle') {\n    verticalAlignment = 'center';\n  }\n\n  const verticalAlignmentFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  })\n    .ele('@w', 'vAlign')\n    .att('@w', 'val', verticalAlignment)\n    .up();\n\n  return verticalAlignmentFragment;\n};\n\nconst buildColor = (colorCode) => {\n  const colorFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  })\n    .ele('@w', 'color')\n    .att('@w', 'val', colorCode)\n    .up();\n\n  return colorFragment;\n};\n\nconst buildFontSize = (fontSize) => {\n  const fontSizeFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  })\n    .ele('@w', 'sz')\n    .att('@w', 'val', fontSize)\n    .up();\n\n  return fontSizeFragment;\n};\n\nconst buildShading = (colorCode) => {\n  const shadingFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  })\n    .ele('@w', 'shd')\n    .att('@w', 'val', 'clear')\n    .att('@w', 'fill', colorCode)\n    .up();\n\n  return shadingFragment;\n};\n\nconst buildHighlight = (color = 'yellow') => {\n  const highlightFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  })\n    .ele('@w', 'highlight')\n    .att('@w', 'val', color)\n    .up();\n\n  return highlightFragment;\n};\n\nconst buildVertAlign = (type = 'subscript') => {\n  const vertAlignFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  })\n    .ele('@w', 'vertAlign')\n    .att('@w', 'val', type)\n    .up();\n\n  return vertAlignFragment;\n};\n\nconst buildStrike = () => {\n  const strikeFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  })\n    .ele('@w', 'strike')\n    .att('@w', 'val', true)\n    .up();\n\n  return strikeFragment;\n};\n\nconst buildBold = () => {\n  const boldFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  })\n    .ele('@w', 'b')\n    .up();\n\n  return boldFragment;\n};\n\nconst buildItalics = () => {\n  const italicsFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  })\n    .ele('@w', 'i')\n    .up();\n\n  return italicsFragment;\n};\n\nconst buildUnderline = (type = 'single') => {\n  const underlineFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  })\n    .ele('@w', 'u')\n    .att('@w', 'val', type)\n    .up();\n\n  return underlineFragment;\n};\n\nconst buildLineBreak = (type = 'textWrapping') => {\n  const lineBreakFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  })\n    .ele('@w', 'br')\n    .att('@w', 'type', type)\n    .up();\n\n  return lineBreakFragment;\n};\n\nconst buildBorder = (\n  borderSide = 'top',\n  borderSize = 0,\n  borderSpacing = 0,\n  borderColor = fixupColorCode('black'),\n  borderStroke = 'single'\n) => {\n  const borderFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  })\n    .ele('@w', borderSide)\n    .att('@w', 'val', borderStroke)\n    .att('@w', 'sz', borderSize)\n    .att('@w', 'space', borderSpacing)\n    .att('@w', 'color', borderColor)\n    .up();\n\n  return borderFragment;\n};\n\nconst buildTextElement = (text) => {\n  const textFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  })\n    .ele('@w', 't')\n    .att('@xml', 'space', 'preserve')\n    .txt(text)\n    .up();\n\n  return textFragment;\n};\n\nconst buildRunProperties = (attributes) => {\n  const runPropertiesFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  }).ele('@w', 'rPr');\n  if (attributes && attributes.constructor === Object) {\n    Object.keys(attributes).forEach((key) => {\n      // eslint-disable-next-line default-case\n      switch (key) {\n        case 'strong':\n          const boldFragment = buildBold();\n          runPropertiesFragment.import(boldFragment);\n          break;\n        case 'i':\n          const italicsFragment = buildItalics();\n          runPropertiesFragment.import(italicsFragment);\n          break;\n        case 'u':\n          const underlineFragment = buildUnderline();\n          runPropertiesFragment.import(underlineFragment);\n          break;\n        case 'color':\n          const colorFragment = buildColor(attributes[key]);\n          runPropertiesFragment.import(colorFragment);\n          break;\n        case 'backgroundColor':\n          const shadingFragment = buildShading(attributes[key]);\n          runPropertiesFragment.import(shadingFragment);\n          break;\n        case 'fontSize':\n          const fontSizeFragment = buildFontSize(attributes[key]);\n          runPropertiesFragment.import(fontSizeFragment);\n          break;\n        case 'hyperlink':\n          const hyperlinkStyleFragment = buildRunStyleFragment('Hyperlink');\n          runPropertiesFragment.import(hyperlinkStyleFragment);\n          break;\n      }\n    });\n  }\n  runPropertiesFragment.up();\n\n  return runPropertiesFragment;\n};\n\n// eslint-disable-next-line consistent-return\nconst buildTextFormatting = (vNode) => {\n  // eslint-disable-next-line default-case\n  switch (vNode.tagName) {\n    case 'strong':\n    case 'b':\n      const boldFragment = buildBold();\n      return boldFragment;\n    case 'em':\n    case 'i':\n      const italicsFragment = buildItalics();\n      return italicsFragment;\n    case 'ins':\n    case 'u':\n      const underlineFragment = buildUnderline();\n      return underlineFragment;\n    case 'strike':\n    case 'del':\n    case 's':\n      const strikeFragment = buildStrike();\n      return strikeFragment;\n    case 'sub':\n      const subscriptFragment = buildVertAlign('subscript');\n      return subscriptFragment;\n    case 'sup':\n      const superscriptFragment = buildVertAlign('subscript');\n      return superscriptFragment;\n    case 'mark':\n      const highlightFragment = buildHighlight();\n      return highlightFragment;\n  }\n};\n\nconst buildRun = (vNode, attributes) => {\n  const runFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  }).ele('@w', 'r');\n  const runPropertiesFragment = buildRunProperties(attributes);\n\n  if (\n    isVNode(vNode) &&\n    [\n      'span',\n      'strong',\n      'b',\n      'em',\n      'i',\n      'u',\n      'ins',\n      'strike',\n      'del',\n      's',\n      'sub',\n      'sup',\n      'mark',\n      'blockquote',\n    ].includes(vNode.tagName)\n  ) {\n    const textArray = [];\n\n    let vNodes = [vNode];\n    while (vNodes.length) {\n      const tempVNode = vNodes.shift();\n      if (isVText(tempVNode)) {\n        textArray.push(tempVNode.text);\n      }\n      if (\n        isVNode(tempVNode) &&\n        ['strong', 'b', 'em', 'i', 'u', 'ins', 'strike', 'del', 's', 'sub', 'sup', 'mark'].includes(\n          tempVNode.tagName\n        )\n      ) {\n        const formattingFragment = buildTextFormatting(tempVNode);\n        runPropertiesFragment.import(formattingFragment);\n      }\n\n      if (tempVNode.children && tempVNode.children.length) {\n        vNodes = tempVNode.children.slice().concat(vNodes);\n      }\n    }\n    if (textArray.length) {\n      const combinedString = textArray.join('');\n      // eslint-disable-next-line no-param-reassign\n      vNode = new VText(combinedString);\n    }\n  }\n\n  runFragment.import(runPropertiesFragment);\n  if (isVText(vNode)) {\n    const textFragment = buildTextElement(vNode.text);\n    runFragment.import(textFragment);\n  } else if (attributes && attributes.type === 'picture') {\n    const { type, inlineOrAnchored, ...otherAttributes } = attributes;\n    // eslint-disable-next-line no-use-before-define\n    const imageFragment = buildDrawing(inlineOrAnchored, type, otherAttributes);\n    runFragment.import(imageFragment);\n  } else if (isVNode(vNode) && vNode.tagName === 'br') {\n    const lineBreakFragment = buildLineBreak();\n    runFragment.import(lineBreakFragment);\n  }\n  runFragment.up();\n\n  return runFragment;\n};\n\n// eslint-disable-next-line consistent-return\nconst fixupLineHeight = (lineHeight, fontSize) => {\n  // FIXME: If line height is anything other than a number\n  // eslint-disable-next-line no-restricted-globals\n  if (!isNaN(lineHeight)) {\n    if (fontSize) {\n      const actualLineHeight = +lineHeight * fontSize;\n\n      return HIPToTWIP(actualLineHeight);\n    } else {\n      // 240 TWIP or 12 point is default line height\n      return +lineHeight * 240;\n    }\n  } else {\n    // 240 TWIP or 12 point is default line height\n    return 240;\n  }\n};\n\n// eslint-disable-next-line consistent-return\nconst fixupFontSize = (fontSizeString) => {\n  if (pointRegex.test(fontSizeString)) {\n    const matchedParts = fontSizeString.match(pointRegex);\n    // convert point to half point\n    return pointToHIP(matchedParts[1]);\n  } else if (pixelRegex.test(fontSizeString)) {\n    const matchedParts = fontSizeString.match(pixelRegex);\n    // convert pixels to half point\n    return pixelToHIP(matchedParts[1]);\n  }\n};\n\n// eslint-disable-next-line consistent-return\nconst fixupRowHeight = (rowHeightString) => {\n  if (pointRegex.test(rowHeightString)) {\n    const matchedParts = rowHeightString.match(pointRegex);\n    // convert point to half point\n    return pointToTWIP(matchedParts[1]);\n  } else if (pixelRegex.test(rowHeightString)) {\n    const matchedParts = rowHeightString.match(pixelRegex);\n    // convert pixels to half point\n    return pixelToTWIP(matchedParts[1]);\n  }\n};\n\nconst buildRunOrRuns = (vNode, attributes) => {\n  if (isVNode(vNode) && vNode.tagName === 'span') {\n    const runFragments = [];\n\n    for (let index = 0; index < vNode.children.length; index++) {\n      const childVNode = vNode.children[index];\n      const modifiedAttributes = { ...attributes };\n      if (isVNode(vNode) && vNode.properties && vNode.properties.style) {\n        if (\n          vNode.properties.style.color &&\n          !['transparent', 'auto'].includes(vNode.properties.style.color)\n        ) {\n          modifiedAttributes.color = fixupColorCode(vNode.properties.style.color);\n        }\n        if (\n          vNode.properties.style['background-color'] &&\n          !['transparent', 'auto'].includes(vNode.properties.style['background-color'])\n        ) {\n          modifiedAttributes.backgroundColor = fixupColorCode(\n            vNode.properties.style['background-color']\n          );\n        }\n        if (vNode.properties.style['font-size']) {\n          modifiedAttributes.fontSize = fixupFontSize(vNode.properties.style['font-size']);\n        }\n      }\n      runFragments.push(buildRun(childVNode, modifiedAttributes));\n    }\n\n    return runFragments;\n  } else {\n    const runFragment = buildRun(vNode, attributes);\n\n    return runFragment;\n  }\n};\n\nconst buildRunOrHyperLink = (vNode, attributes, docxDocumentInstance) => {\n  if (isVNode(vNode) && vNode.tagName === 'a') {\n    const relationshipId = docxDocumentInstance.createDocumentRelationships(\n      docxDocumentInstance.relationshipFilename,\n      'hyperlink',\n      vNode.properties && vNode.properties.href ? vNode.properties.href : ''\n    );\n    const hyperlinkFragment = fragment({\n      namespaceAlias: { w: namespaces.w, r: namespaces.r },\n    })\n      .ele('@w', 'hyperlink')\n      .att('@r', 'id', `rId${relationshipId}`);\n\n    const modifiedAttributes = { ...attributes };\n    modifiedAttributes.hyperlink = true;\n\n    const runFragments = buildRunOrRuns(vNode.children[0], modifiedAttributes);\n    if (Array.isArray(runFragments)) {\n      for (let index = 0; index < runFragments.length; index++) {\n        const runFragment = runFragments[index];\n\n        hyperlinkFragment.import(runFragment);\n      }\n    } else {\n      hyperlinkFragment.import(runFragments);\n    }\n    hyperlinkFragment.up();\n\n    return hyperlinkFragment;\n  }\n  const runFragments = buildRunOrRuns(vNode, attributes);\n\n  return runFragments;\n};\n\nconst buildNumberingProperties = (levelId, numberingId) => {\n  const numberingPropertiesFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  })\n    .ele('@w', 'numPr')\n    .ele('@w', 'ilvl')\n    .att('@w', 'val', String(levelId))\n    .up()\n    .ele('@w', 'numId')\n    .att('@w', 'val', String(numberingId))\n    .up()\n    .up();\n\n  return numberingPropertiesFragment;\n};\n\nconst buildNumberingInstances = () => {\n  const numberingInstancesFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  })\n    .ele('@w', 'num')\n    .ele('@w', 'abstractNumId')\n    .up()\n    .up();\n\n  return numberingInstancesFragment;\n};\n\nconst buildSpacing = (lineSpacing, beforeSpacing, afterSpacing) => {\n  const spacingFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  }).ele('@w', 'spacing');\n\n  if (lineSpacing) {\n    spacingFragment.att('@w', 'line', lineSpacing);\n  }\n  if (beforeSpacing) {\n    spacingFragment.att('@w', 'before', beforeSpacing);\n  }\n  if (afterSpacing) {\n    spacingFragment.att('@w', 'after', afterSpacing);\n  }\n\n  spacingFragment.att('@w', 'lineRule', 'exact').up();\n\n  return spacingFragment;\n};\n\nconst buildIndentation = (left = 720) => {\n  const indentationFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  })\n    .ele('@w', 'ind')\n    .att('@w', 'left', left)\n    .up();\n\n  return indentationFragment;\n};\n\nconst buildHorizontalAlignment = (horizontalAlignment) => {\n  if (horizontalAlignment === 'justify') {\n    horizontalAlignment = 'both';\n  }\n  const horizontalAlignmentFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  })\n    .ele('@w', 'jc')\n    .att('@w', 'val', horizontalAlignment)\n    .up();\n\n  return horizontalAlignmentFragment;\n};\n\nconst buildParagraphBorder = () => {\n  const paragraphBorderFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  }).ele('@w', 'pBdr');\n  const bordersObject = {\n    top: {\n      size: 0,\n      spacing: 3,\n      color: 'FFFFFF',\n    },\n    left: {\n      size: 0,\n      spacing: 3,\n      color: 'FFFFFF',\n    },\n    bottom: {\n      size: 0,\n      spacing: 3,\n      color: 'FFFFFF',\n    },\n    right: {\n      size: 0,\n      spacing: 3,\n      color: 'FFFFFF',\n    },\n  };\n\n  Object.keys(bordersObject).forEach((borderName) => {\n    if (bordersObject[borderName]) {\n      const { size, spacing, color } = bordersObject[borderName];\n\n      const borderFragment = buildBorder(borderName, size, spacing, color);\n      paragraphBorderFragment.import(borderFragment);\n    }\n  });\n\n  paragraphBorderFragment.up();\n\n  return paragraphBorderFragment;\n};\n\nconst buildParagraphProperties = (attributes) => {\n  const paragraphPropertiesFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  }).ele('@w', 'pPr');\n  if (attributes && attributes.constructor === Object) {\n    Object.keys(attributes).forEach((key) => {\n      // eslint-disable-next-line default-case\n      switch (key) {\n        case 'numbering':\n          const { levelId, numberingId } = attributes[key];\n          const numberingPropertiesFragment = buildNumberingProperties(levelId, numberingId);\n          paragraphPropertiesFragment.import(numberingPropertiesFragment);\n          // Delete used property\n          // eslint-disable-next-line no-param-reassign\n          delete attributes.numbering;\n          break;\n        case 'textAlign':\n          const horizontalAlignmentFragment = buildHorizontalAlignment(attributes[key]);\n          paragraphPropertiesFragment.import(horizontalAlignmentFragment);\n          // Delete used property\n          // eslint-disable-next-line no-param-reassign\n          delete attributes.textAlign;\n          break;\n        case 'backgroundColor':\n          // Add shading to Paragraph Properties only if display is block\n          // Essentially if background color needs to be across the row\n          if (attributes.display === 'block') {\n            const shadingFragment = buildShading(attributes[key]);\n            paragraphPropertiesFragment.import(shadingFragment);\n            // FIXME: Inner padding in case of shaded paragraphs.\n            const paragraphBorderFragment = buildParagraphBorder();\n            paragraphPropertiesFragment.import(paragraphBorderFragment);\n            // Delete used property\n            // eslint-disable-next-line no-param-reassign\n            delete attributes.backgroundColor;\n          }\n          break;\n        case 'indentation':\n          const indentationFragment = buildIndentation(attributes[key].left);\n          paragraphPropertiesFragment.import(indentationFragment);\n          // Delete used property\n          // eslint-disable-next-line no-param-reassign\n          delete attributes.indentation;\n          break;\n      }\n    });\n\n    const spacingFragment = buildSpacing(\n      attributes.lineHeight,\n      attributes.beforeSpacing,\n      attributes.afterSpacing\n    );\n    // Delete used properties\n    // eslint-disable-next-line no-param-reassign\n    delete attributes.lineHeight;\n    // eslint-disable-next-line no-param-reassign\n    delete attributes.beforeSpacing;\n    // eslint-disable-next-line no-param-reassign\n    delete attributes.afterSpacing;\n\n    paragraphPropertiesFragment.import(spacingFragment);\n  }\n  paragraphPropertiesFragment.up();\n\n  return paragraphPropertiesFragment;\n};\n\nconst computeImageDimensions = (vNode, attributes) => {\n  const { maximumWidth, originalWidth, originalHeight } = attributes;\n  const aspectRatio = originalWidth / originalHeight;\n  const maximumWidthInEMU = TWIPToEMU(maximumWidth);\n  let originalWidthInEMU = pixelToEMU(originalWidth);\n  let originalHeightInEMU = pixelToEMU(originalHeight);\n  if (originalWidthInEMU > maximumWidthInEMU) {\n    originalWidthInEMU = maximumWidthInEMU;\n    originalHeightInEMU = Math.round(originalWidthInEMU / aspectRatio);\n  }\n  let modifiedHeight;\n  let modifiedWidth;\n\n  if (vNode.properties && vNode.properties.style) {\n    if (vNode.properties.style.width) {\n      if (vNode.properties.style.width !== 'auto') {\n        if (pixelRegex.test(vNode.properties.style.width)) {\n          modifiedWidth = pixelToEMU(vNode.properties.style.width.match(pixelRegex)[1]);\n        } else if (percentageRegex.test(vNode.properties.style.width)) {\n          const percentageValue = vNode.properties.style.width.match(percentageRegex)[1];\n\n          modifiedWidth = Math.round((percentageValue / 100) * originalWidthInEMU);\n        }\n      } else {\n        // eslint-disable-next-line no-lonely-if\n        if (vNode.properties.style.height && vNode.properties.style.height === 'auto') {\n          modifiedWidth = originalWidthInEMU;\n          modifiedHeight = originalHeightInEMU;\n        }\n      }\n    }\n    if (vNode.properties.style.height) {\n      if (vNode.properties.style.height !== 'auto') {\n        if (pixelRegex.test(vNode.properties.style.height)) {\n          modifiedHeight = pixelToEMU(vNode.properties.style.height.match(pixelRegex)[1]);\n        } else if (percentageRegex.test(vNode.properties.style.height)) {\n          const percentageValue = vNode.properties.style.width.match(percentageRegex)[1];\n\n          modifiedHeight = Math.round((percentageValue / 100) * originalHeightInEMU);\n          if (!modifiedWidth) {\n            modifiedWidth = Math.round(modifiedHeight * aspectRatio);\n          }\n        }\n      } else {\n        // eslint-disable-next-line no-lonely-if\n        if (modifiedWidth) {\n          if (!modifiedHeight) {\n            modifiedHeight = Math.round(modifiedWidth / aspectRatio);\n          }\n        } else {\n          modifiedHeight = originalHeightInEMU;\n          modifiedWidth = originalWidthInEMU;\n        }\n      }\n    }\n    if (modifiedWidth && !modifiedHeight) {\n      modifiedHeight = Math.round(modifiedWidth / aspectRatio);\n    } else if (modifiedHeight && !modifiedWidth) {\n      modifiedWidth = Math.round(modifiedHeight * aspectRatio);\n    }\n  } else {\n    modifiedWidth = originalWidthInEMU;\n    modifiedHeight = originalHeightInEMU;\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  attributes.width = modifiedWidth;\n  // eslint-disable-next-line no-param-reassign\n  attributes.height = modifiedHeight;\n};\n\nconst buildParagraph = (vNode, attributes, docxDocumentInstance) => {\n  const paragraphFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  }).ele('@w', 'p');\n  const modifiedAttributes = { ...attributes };\n  if (isVNode(vNode) && vNode.properties && vNode.properties.style) {\n    if (\n      vNode.properties.style.color &&\n      !['transparent', 'auto'].includes(vNode.properties.style.color)\n    ) {\n      modifiedAttributes.color = fixupColorCode(vNode.properties.style.color);\n    }\n    if (\n      vNode.properties.style['background-color'] &&\n      !['transparent', 'auto'].includes(vNode.properties.style['background-color'])\n    ) {\n      modifiedAttributes.backgroundColor = fixupColorCode(\n        vNode.properties.style['background-color']\n      );\n    }\n    if (\n      vNode.properties.style['vertical-align'] &&\n      ['top', 'middle', 'bottom'].includes(vNode.properties.style['vertical-align'])\n    ) {\n      modifiedAttributes.verticalAlign = vNode.properties.style['vertical-align'];\n    }\n    if (\n      vNode.properties.style['text-align'] &&\n      ['left', 'right', 'center', 'justify'].includes(vNode.properties.style['text-align'])\n    ) {\n      modifiedAttributes.textAlign = vNode.properties.style['text-align'];\n    }\n    // FIXME: remove bold check when other font weights are handled.\n    if (vNode.properties.style['font-weight'] && vNode.properties.style['font-weight'] === 'bold') {\n      modifiedAttributes.strong = vNode.properties.style['font-weight'];\n    }\n    if (vNode.properties.style['font-size']) {\n      modifiedAttributes.fontSize = fixupFontSize(vNode.properties.style['font-size']);\n    }\n    if (vNode.properties.style['line-height']) {\n      modifiedAttributes.lineHeight = fixupLineHeight(\n        vNode.properties.style['line-height'],\n        vNode.properties.style['font-size']\n          ? fixupFontSize(vNode.properties.style['font-size'])\n          : null\n      );\n    }\n    if (vNode.properties.style.display) {\n      modifiedAttributes.display = vNode.properties.style.display;\n    }\n  }\n  if (isVNode(vNode) && vNode.tagName === 'blockquote') {\n    modifiedAttributes.indentation = { left: 284 };\n    modifiedAttributes.textAlign = 'justify';\n  }\n  const paragraphPropertiesFragment = buildParagraphProperties(modifiedAttributes);\n  paragraphFragment.import(paragraphPropertiesFragment);\n  if (isVNode(vNode) && vNode.children && Array.isArray(vNode.children) && vNode.children.length) {\n    if (\n      [\n        'span',\n        'strong',\n        'b',\n        'em',\n        'i',\n        'u',\n        'ins',\n        'strike',\n        'del',\n        's',\n        'sub',\n        'sup',\n        'mark',\n        'a',\n      ].includes(vNode.tagName)\n    ) {\n      const runOrHyperlinkFragments = buildRunOrHyperLink(\n        vNode,\n        modifiedAttributes,\n        docxDocumentInstance\n      );\n      if (Array.isArray(runOrHyperlinkFragments)) {\n        for (\n          let iteratorIndex = 0;\n          iteratorIndex < runOrHyperlinkFragments.length;\n          iteratorIndex++\n        ) {\n          const runOrHyperlinkFragment = runOrHyperlinkFragments[iteratorIndex];\n\n          paragraphFragment.import(runOrHyperlinkFragment);\n        }\n      } else {\n        paragraphFragment.import(runOrHyperlinkFragments);\n      }\n    } else if (vNode.tagName === 'blockquote') {\n      const runFragment = buildRun(vNode, attributes);\n      paragraphFragment.import(runFragment);\n    } else {\n      for (let index = 0; index < vNode.children.length; index++) {\n        const childVNode = vNode.children[index];\n        const runOrHyperlinkFragments = buildRunOrHyperLink(\n          childVNode,\n          modifiedAttributes,\n          docxDocumentInstance\n        );\n        if (Array.isArray(runOrHyperlinkFragments)) {\n          for (\n            let iteratorIndex = 0;\n            iteratorIndex < runOrHyperlinkFragments.length;\n            iteratorIndex++\n          ) {\n            const runOrHyperlinkFragment = runOrHyperlinkFragments[iteratorIndex];\n\n            paragraphFragment.import(runOrHyperlinkFragment);\n          }\n        } else {\n          paragraphFragment.import(runOrHyperlinkFragments);\n        }\n      }\n    }\n  } else {\n    // In case paragraphs has to be rendered where vText is present. Eg. table-cell\n    // Or in case the vNode is something like img\n    if (isVNode(vNode) && vNode.tagName === 'img') {\n      computeImageDimensions(vNode, modifiedAttributes);\n    }\n    const runFragments = buildRunOrRuns(vNode, modifiedAttributes);\n    if (Array.isArray(runFragments)) {\n      for (let index = 0; index < runFragments.length; index++) {\n        const runFragment = runFragments[index];\n\n        paragraphFragment.import(runFragment);\n      }\n    } else {\n      paragraphFragment.import(runFragments);\n    }\n  }\n  paragraphFragment.up();\n\n  return paragraphFragment;\n};\n\nconst buildGridSpanFragment = (spanValue) => {\n  const gridSpanFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  })\n    .ele('@w', 'gridSpan')\n    .att('@w', 'val', spanValue)\n    .up();\n\n  return gridSpanFragment;\n};\n\nconst buildTableCellSpacing = (cellSpacing = 0) => {\n  const tableCellSpacingFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  })\n    .ele('@w', 'tblCellSpacing')\n    .att('@w', 'w', cellSpacing)\n    .att('@w', 'type', 'dxa')\n    .up();\n\n  return tableCellSpacingFragment;\n};\n\nconst buildTableCellBorders = (tableCellBorder) => {\n  const tableCellBordersFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  }).ele('@w', 'tcBorders');\n\n  const { color, stroke, ...borders } = tableCellBorder;\n  Object.keys(borders).forEach((border) => {\n    if (tableCellBorder[border]) {\n      const borderFragment = buildBorder(border, tableCellBorder[border], 0, color, stroke);\n      tableCellBordersFragment.import(borderFragment);\n    }\n  });\n\n  tableCellBordersFragment.up();\n\n  return tableCellBordersFragment;\n};\n\nconst buildTableCellProperties = (attributes) => {\n  const tableCellPropertiesFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  }).ele('@w', 'tcPr');\n  if (attributes && attributes.constructor === Object) {\n    Object.keys(attributes).forEach((key) => {\n      // eslint-disable-next-line default-case\n      switch (key) {\n        case 'backgroundColor':\n          const shadingFragment = buildShading(attributes[key]);\n          tableCellPropertiesFragment.import(shadingFragment);\n          // Delete used property\n          // eslint-disable-next-line no-param-reassign\n          delete attributes.backgroundColor;\n          break;\n        case 'verticalAlign':\n          const verticalAlignmentFragment = buildVerticalAlignment(attributes[key]);\n          tableCellPropertiesFragment.import(verticalAlignmentFragment);\n          // Delete used property\n          // eslint-disable-next-line no-param-reassign\n          delete attributes.verticalAlign;\n          break;\n        case 'colSpan':\n          const gridSpanFragment = buildGridSpanFragment(attributes[key]);\n          tableCellPropertiesFragment.import(gridSpanFragment);\n          // Delete used property\n          // eslint-disable-next-line no-param-reassign\n          delete attributes.colSpan;\n          break;\n        case 'tableCellBorder':\n          const tableCellBorderFragment = buildTableCellBorders(attributes[key]);\n          tableCellPropertiesFragment.import(tableCellBorderFragment);\n\n          // Delete used property\n          // eslint-disable-next-line no-param-reassign\n          delete attributes.tableCellBorder;\n          break;\n      }\n    });\n  }\n  tableCellPropertiesFragment.up();\n\n  return tableCellPropertiesFragment;\n};\n\nconst fixupTableCellBorder = (vNode, attributes) => {\n  if (Object.prototype.hasOwnProperty.call(vNode.properties.style, 'border')) {\n    if (vNode.properties.style.border === 'none' || vNode.properties.style.border === 0) {\n      attributes.tableCellBorder = {};\n    } else {\n      // eslint-disable-next-line no-use-before-define\n      const [borderSize, borderStroke, borderColor] = cssBorderParser(\n        vNode.properties.style.border\n      );\n\n      attributes.tableCellBorder = {\n        top: borderSize,\n        left: borderSize,\n        bottom: borderSize,\n        right: borderSize,\n        color: borderColor,\n        stroke: borderStroke,\n      };\n    }\n  }\n  if (vNode.properties.style['border-top'] && vNode.properties.style['border-top'] === '0') {\n    attributes.tableCellBorder = {\n      ...attributes.tableCellBorder,\n      top: 0,\n    };\n  } else if (vNode.properties.style['border-top'] && vNode.properties.style['border-top'] !== '0') {\n    // eslint-disable-next-line no-use-before-define\n    const [borderSize, borderStroke, borderColor] = cssBorderParser(\n      vNode.properties.style['border-top']\n    );\n    attributes.tableCellBorder = {\n      ...attributes.tableCellBorder,\n      top: borderSize,\n      color: borderColor,\n      stroke: borderStroke,\n    };\n  }\n  if (vNode.properties.style['border-left'] && vNode.properties.style['border-left'] === '0') {\n    attributes.tableCellBorder = {\n      ...attributes.tableCellBorder,\n      left: 0,\n    };\n  } else if (\n    vNode.properties.style['border-left'] &&\n    vNode.properties.style['border-left'] !== '0'\n  ) {\n    // eslint-disable-next-line no-use-before-define\n    const [borderSize, borderStroke, borderColor] = cssBorderParser(\n      vNode.properties.style['border-left']\n    );\n    attributes.tableCellBorder = {\n      ...attributes.tableCellBorder,\n      left: borderSize,\n      color: borderColor,\n      stroke: borderStroke,\n    };\n  }\n  if (vNode.properties.style['border-bottom'] && vNode.properties.style['border-bottom'] === '0') {\n    attributes.tableCellBorder = {\n      ...attributes.tableCellBorder,\n      bottom: 0,\n    };\n  } else if (\n    vNode.properties.style['border-bottom'] &&\n    vNode.properties.style['border-bottom'] !== '0'\n  ) {\n    // eslint-disable-next-line no-use-before-define\n    const [borderSize, borderStroke, borderColor] = cssBorderParser(\n      vNode.properties.style['border-bottom']\n    );\n    attributes.tableCellBorder = {\n      ...attributes.tableCellBorder,\n      bottom: borderSize,\n      color: borderColor,\n      stroke: borderStroke,\n    };\n  }\n  if (vNode.properties.style['border-right'] && vNode.properties.style['border-right'] === '0') {\n    attributes.tableCellBorder = {\n      ...attributes.tableCellBorder,\n      right: 0,\n    };\n  } else if (\n    vNode.properties.style['border-right'] &&\n    vNode.properties.style['border-right'] !== '0'\n  ) {\n    // eslint-disable-next-line no-use-before-define\n    const [borderSize, borderStroke, borderColor] = cssBorderParser(\n      vNode.properties.style['border-right']\n    );\n    attributes.tableCellBorder = {\n      ...attributes.tableCellBorder,\n      right: borderSize,\n      color: borderColor,\n      stroke: borderStroke,\n    };\n  }\n};\n\nconst buildTableCell = (vNode, attributes, docxDocumentInstance) => {\n  const tableCellFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  }).ele('@w', 'tc');\n  const modifiedAttributes = { ...attributes };\n  if (isVNode(vNode) && vNode.properties) {\n    if (\n      vNode.properties.colSpan ||\n      (vNode.properties.style && vNode.properties.style['column-span'])\n    ) {\n      modifiedAttributes.colSpan =\n        vNode.properties.colSpan ||\n        (vNode.properties.style && vNode.properties.style['column-span']);\n    }\n    if (vNode.properties.style) {\n      if (\n        vNode.properties.style.color &&\n        !['transparent', 'auto'].includes(vNode.properties.style.color)\n      ) {\n        modifiedAttributes.color = fixupColorCode(vNode.properties.style.color);\n      }\n      if (\n        vNode.properties.style['background-color'] &&\n        !['transparent', 'auto'].includes(vNode.properties.style['background-color'])\n      ) {\n        modifiedAttributes.backgroundColor = fixupColorCode(\n          vNode.properties.style['background-color']\n        );\n      }\n      if (\n        vNode.properties.style['vertical-align'] &&\n        ['top', 'middle', 'bottom'].includes(vNode.properties.style['vertical-align'])\n      ) {\n        modifiedAttributes.verticalAlign = vNode.properties.style['vertical-align'];\n      }\n    }\n    if (vNode.properties.style) {\n      fixupTableCellBorder(vNode, modifiedAttributes);\n    }\n  }\n  const tableCellPropertiesFragment = buildTableCellProperties(modifiedAttributes);\n  tableCellFragment.import(tableCellPropertiesFragment);\n  if (vNode.children && Array.isArray(vNode.children) && vNode.children.length) {\n    for (let index = 0; index < vNode.children.length; index++) {\n      const childVNode = vNode.children[index];\n      if (isVNode(childVNode) && childVNode.tagName === 'img') {\n        const imageFragment = buildImage(\n          docxDocumentInstance,\n          childVNode,\n          modifiedAttributes.maximumWidth\n        );\n        if (imageFragment) {\n          tableCellFragment.import(imageFragment);\n        }\n      } else if (isVNode(childVNode) && childVNode.tagName === 'figure') {\n        if (\n          childVNode.children &&\n          Array.isArray(childVNode.children) &&\n          childVNode.children.length\n        ) {\n          // eslint-disable-next-line no-plusplus\n          for (let iteratorIndex = 0; iteratorIndex < childVNode.children.length; iteratorIndex++) {\n            const grandChildVNode = childVNode.children[iteratorIndex];\n            if (grandChildVNode.tagName === 'img') {\n              const imageFragment = buildImage(\n                docxDocumentInstance,\n                grandChildVNode,\n                modifiedAttributes.maximumWidth\n              );\n              if (imageFragment) {\n                tableCellFragment.import(imageFragment);\n              }\n            }\n          }\n        }\n      } else {\n        const paragraphFragment = buildParagraph(\n          childVNode,\n          modifiedAttributes,\n          docxDocumentInstance\n        );\n        tableCellFragment.import(paragraphFragment);\n      }\n    }\n  } else {\n    // TODO: Figure out why building with buildParagraph() isn't working\n    const paragraphFragment = fragment({\n      namespaceAlias: { w: namespaces.w },\n    })\n      .ele('@w', 'p')\n      .up();\n    tableCellFragment.import(paragraphFragment);\n  }\n  tableCellFragment.up();\n\n  return tableCellFragment;\n};\n\nconst buildTableRowProperties = (attributes) => {\n  const tableRowPropertiesFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  }).ele('@w', 'trPr');\n  if (attributes && attributes.constructor === Object) {\n    Object.keys(attributes).forEach((key) => {\n      // eslint-disable-next-line default-case\n      switch (key) {\n        case 'tableRowHeight':\n          const tableRowHeightFragment = buildTableRowHeight(attributes[key]);\n          tableRowPropertiesFragment.import(tableRowHeightFragment);\n          // Delete used property\n          // eslint-disable-next-line no-param-reassign\n          delete attributes.tableRowHeight;\n          break;\n        case 'rowCantSplit':\n          if (attributes.rowCantSplit) {\n            const cantSplitFragment = fragment({\n              namespaceAlias: { w: namespaces.w },\n            })\n              .ele('@w', 'cantSplit')\n              .up();\n            tableRowPropertiesFragment.import(cantSplitFragment);\n            // Delete used property\n            // eslint-disable-next-line no-param-reassign\n            delete attributes.rowCantSplit;\n          }\n          break;\n      }\n    });\n  }\n  tableRowPropertiesFragment.up();\n  return tableRowPropertiesFragment;\n};\n\nconst buildTableRow = (vNode, attributes, docxDocumentInstance) => {\n  const tableRowFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  }).ele('@w', 'tr');\n  const modifiedAttributes = { ...attributes };\n  if (isVNode(vNode) && vNode.properties) {\n    // FIXME: find a better way to get row height from cell style\n    if (\n      (vNode.properties.style && vNode.properties.style.height) ||\n      (vNode.children[0] &&\n        isVNode(vNode.children[0]) &&\n        vNode.children[0].properties.style &&\n        vNode.children[0].properties.style.height)\n    ) {\n      modifiedAttributes.tableRowHeight = fixupRowHeight(\n        (vNode.properties.style && vNode.properties.style.height) ||\n          (vNode.children[0] &&\n          isVNode(vNode.children[0]) &&\n          vNode.children[0].properties.style &&\n          vNode.children[0].properties.style.height\n            ? vNode.children[0].properties.style.height\n            : undefined)\n      );\n    }\n    if (vNode.properties.style) {\n      fixupTableCellBorder(vNode, modifiedAttributes);\n    }\n  }\n  const tableRowPropertiesFragment = buildTableRowProperties(modifiedAttributes);\n  tableRowFragment.import(tableRowPropertiesFragment);\n  if (vNode.children && Array.isArray(vNode.children) && vNode.children.length) {\n    const tableColumns = vNode.children.filter((childVNode) =>\n      ['td', 'th'].includes(childVNode.tagName)\n    );\n    const columnWidth = docxDocumentInstance.availableDocumentSpace / tableColumns.length;\n\n    for (let index = 0; index < vNode.children.length; index++) {\n      const childVNode = vNode.children[index];\n      if (['td', 'th'].includes(childVNode.tagName)) {\n        const tableCellFragment = buildTableCell(\n          childVNode,\n          { ...modifiedAttributes, maximumWidth: columnWidth },\n          docxDocumentInstance\n        );\n        tableRowFragment.import(tableCellFragment);\n      }\n    }\n  }\n  tableRowFragment.up();\n\n  return tableRowFragment;\n};\n\nconst buildTableGridCol = (gridWidth) => {\n  const tableGridColFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  })\n    .ele('@w', 'gridCol')\n    .att('@w', 'w', String(gridWidth));\n\n  return tableGridColFragment;\n};\n\nconst buildTableGrid = (vNode, attributes) => {\n  const tableGridFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  }).ele('@w', 'tblGrid');\n  if (vNode.children && Array.isArray(vNode.children) && vNode.children.length) {\n    const gridColumns = vNode.children.filter((childVNode) => childVNode.tagName === 'col');\n    const gridWidth = attributes.maximumWidth / gridColumns.length;\n\n    for (let index = 0; index < gridColumns.length; index++) {\n      const tableGridColFragment = buildTableGridCol(gridWidth);\n      tableGridFragment.import(tableGridColFragment);\n    }\n  }\n  tableGridFragment.up();\n\n  return tableGridFragment;\n};\n\nconst buildTableBorders = (tableBorder) => {\n  const tableBordersFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  }).ele('@w', 'tblBorders');\n\n  const { color, stroke, ...borders } = tableBorder;\n\n  Object.keys(borders).forEach((border) => {\n    if (borders[border]) {\n      const borderFragment = buildBorder(border, borders[border], 0, color, stroke);\n      tableBordersFragment.import(borderFragment);\n    }\n  });\n\n  tableBordersFragment.up();\n\n  return tableBordersFragment;\n};\n\nconst buildTableWidth = (tableWidth) => {\n  const tableWidthFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  })\n    .ele('@w', 'tblW')\n    .att('@w', 'type', 'dxa')\n    .att('@w', 'w', String(tableWidth))\n    .up();\n\n  return tableWidthFragment;\n};\n\nconst buildCellMargin = (side, margin) => {\n  const marginFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  })\n    .ele('@w', side)\n    .att('@w', 'type', 'dxa')\n    .att('@w', 'w', String(margin))\n    .up();\n\n  return marginFragment;\n};\n\nconst buildTableCellMargins = (margin) => {\n  const tableCellMarFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  }).ele('@w', 'tblCellMar');\n\n  ['top', 'bottom'].forEach((side) => {\n    const marginFragment = buildCellMargin(side, margin / 2);\n    tableCellMarFragment.import(marginFragment);\n  });\n  ['left', 'right'].forEach((side) => {\n    const marginFragment = buildCellMargin(side, margin);\n    tableCellMarFragment.import(marginFragment);\n  });\n\n  return tableCellMarFragment;\n};\n\nconst buildTableProperties = (attributes) => {\n  const tablePropertiesFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  }).ele('@w', 'tblPr');\n\n  if (attributes && attributes.constructor === Object) {\n    Object.keys(attributes).forEach((key) => {\n      // eslint-disable-next-line default-case\n      switch (key) {\n        case 'tableBorder':\n          const tableBordersFragment = buildTableBorders(attributes[key]);\n          tablePropertiesFragment.import(tableBordersFragment);\n          // Delete used property\n          // eslint-disable-next-line no-param-reassign\n          delete attributes.tableBorder;\n          break;\n        case 'tableCellSpacing':\n          const tableCellSpacingFragment = buildTableCellSpacing(attributes[key]);\n          tablePropertiesFragment.import(tableCellSpacingFragment);\n          // Delete used property\n          // eslint-disable-next-line no-param-reassign\n          delete attributes.tableCellSpacing;\n          break;\n        case 'width':\n          if (attributes[key]) {\n            const tableWidthFragment = buildTableWidth(attributes[key]);\n            tablePropertiesFragment.import(tableWidthFragment);\n          }\n          // Delete used property\n          // eslint-disable-next-line no-param-reassign\n          delete attributes.width;\n          break;\n      }\n    });\n  }\n  const tableCellMarginFragment = buildTableCellMargins(160);\n  tablePropertiesFragment.import(tableCellMarginFragment);\n\n  // by default, all tables are center aligned.\n  const alignmentFragment = buildHorizontalAlignment('center');\n  tablePropertiesFragment.import(alignmentFragment);\n\n  tablePropertiesFragment.up();\n\n  return tablePropertiesFragment;\n};\n\nconst cssBorderParser = (borderString) => {\n  let [size, stroke, color] = borderString.split(' ');\n\n  if (pointRegex.test(size)) {\n    const matchedParts = size.match(pointRegex);\n    // convert point to eighth of a point\n    size = pointToEIP(matchedParts[1]);\n  } else if (pixelRegex.test(size)) {\n    const matchedParts = size.match(pixelRegex);\n    // convert pixels to eighth of a point\n    size = pixelToEIP(matchedParts[1]);\n  }\n  stroke = stroke && ['dashed', 'dotted', 'double'].includes(stroke) ? stroke : 'single';\n\n  color = color && fixupColorCode(color).toUpperCase();\n\n  return [size, stroke, color];\n};\n\nconst buildTable = (vNode, attributes, docxDocumentInstance) => {\n  const tableFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  }).ele('@w', 'tbl');\n  const modifiedAttributes = { ...attributes };\n  if (isVNode(vNode) && vNode.properties) {\n    const tableAttributes = vNode.properties.attributes || {};\n    const tableStyles = vNode.properties.style || {};\n    const tableBorders = {};\n    const tableCellBorders = {};\n    let [borderSize, borderStrike, borderColor] = [2, 'single', '000000'];\n\n    // eslint-disable-next-line no-restricted-globals\n    if (!isNaN(tableAttributes.border)) {\n      borderSize = parseInt(tableAttributes.border, 10);\n    }\n\n    // css style overrides table border properties\n    if (tableStyles.border) {\n      const [cssSize, cssStroke, cssColor] = cssBorderParser(tableStyles.border);\n      borderSize = cssSize || borderSize;\n      borderColor = cssColor || borderColor;\n      borderStrike = cssStroke || borderStrike;\n    }\n\n    tableBorders.top = borderSize;\n    tableBorders.bottom = borderSize;\n    tableBorders.left = borderSize;\n    tableBorders.right = borderSize;\n    tableBorders.stroke = borderStrike;\n    tableBorders.color = borderColor;\n\n    if (tableStyles['border-collapse'] === 'collapse') {\n      tableBorders.insideV = borderSize;\n      tableBorders.insideH = borderSize;\n    } else {\n      tableBorders.insideV = 0;\n      tableBorders.insideH = 0;\n      tableCellBorders.top = 1;\n      tableCellBorders.bottom = 1;\n      tableCellBorders.left = 1;\n      tableCellBorders.right = 1;\n    }\n\n    modifiedAttributes.tableBorder = tableBorders;\n    modifiedAttributes.tableCellSpacing = 0;\n\n    if (Object.keys(tableCellBorders).length) {\n      modifiedAttributes.tableCellBorder = tableCellBorders;\n    }\n\n    let minimumWidth;\n    let maximumWidth;\n    let width;\n    // Calculate minimum width of table\n    if (pixelRegex.test(tableStyles['min-width'])) {\n      minimumWidth = pixelToTWIP(tableStyles['min-width'].match(pixelRegex)[1]);\n    } else if (percentageRegex.test(tableStyles['min-width'])) {\n      const percentageValue = tableStyles['min-width'].match(percentageRegex)[1];\n      minimumWidth = Math.round((percentageValue / 100) * attributes.maximumWidth);\n    }\n\n    // Calculate maximum width of table\n    if (pixelRegex.test(tableStyles['max-width'])) {\n      pixelRegex.lastIndex = 0;\n      maximumWidth = pixelToTWIP(tableStyles['max-width'].match(pixelRegex)[1]);\n    } else if (percentageRegex.test(tableStyles['max-width'])) {\n      percentageRegex.lastIndex = 0;\n      const percentageValue = tableStyles['max-width'].match(percentageRegex)[1];\n      maximumWidth = Math.round((percentageValue / 100) * attributes.maximumWidth);\n    }\n\n    // Calculate specified width of table\n    if (pixelRegex.test(tableStyles.width)) {\n      pixelRegex.lastIndex = 0;\n      width = pixelToTWIP(tableStyles.width.match(pixelRegex)[1]);\n    } else if (percentageRegex.test(tableStyles.width)) {\n      percentageRegex.lastIndex = 0;\n      const percentageValue = tableStyles.width.match(percentageRegex)[1];\n      width = Math.round((percentageValue / 100) * attributes.maximumWidth);\n    }\n\n    // If width isn't supplied, we should have min-width as the width.\n    if (width) {\n      modifiedAttributes.width = width;\n      if (maximumWidth) {\n        modifiedAttributes.width = Math.min(modifiedAttributes.width, maximumWidth);\n      }\n      if (minimumWidth) {\n        modifiedAttributes.width = Math.max(modifiedAttributes.width, minimumWidth);\n      }\n    } else if (minimumWidth) {\n      modifiedAttributes.width = minimumWidth;\n    }\n    if (modifiedAttributes.width) {\n      modifiedAttributes.width = Math.min(modifiedAttributes.width, attributes.maximumWidth);\n    }\n  }\n  const tablePropertiesFragment = buildTableProperties(modifiedAttributes);\n  tableFragment.import(tablePropertiesFragment);\n  if (vNode.children && Array.isArray(vNode.children) && vNode.children.length) {\n    for (let index = 0; index < vNode.children.length; index++) {\n      const childVNode = vNode.children[index];\n      if (childVNode.tagName === 'colgroup') {\n        const tableGridFragment = buildTableGrid(childVNode, modifiedAttributes);\n        tableFragment.import(tableGridFragment);\n      } else if (childVNode.tagName === 'thead') {\n        for (let iteratorIndex = 0; iteratorIndex < childVNode.children.length; iteratorIndex++) {\n          const grandChildVNode = childVNode.children[iteratorIndex];\n          if (grandChildVNode.tagName === 'tr') {\n            const tableRowFragment = buildTableRow(\n              grandChildVNode,\n              modifiedAttributes,\n              docxDocumentInstance\n            );\n            tableFragment.import(tableRowFragment);\n          }\n        }\n      } else if (childVNode.tagName === 'tbody') {\n        for (let iteratorIndex = 0; iteratorIndex < childVNode.children.length; iteratorIndex++) {\n          const grandChildVNode = childVNode.children[iteratorIndex];\n          if (grandChildVNode.tagName === 'tr') {\n            const tableRowFragment = buildTableRow(\n              grandChildVNode,\n              modifiedAttributes,\n              docxDocumentInstance\n            );\n            tableFragment.import(tableRowFragment);\n          }\n        }\n      } else if (childVNode.tagName === 'tr') {\n        const tableRowFragment = buildTableRow(\n          childVNode,\n          modifiedAttributes,\n          docxDocumentInstance\n        );\n        tableFragment.import(tableRowFragment);\n      }\n    }\n  }\n  tableFragment.up();\n\n  return tableFragment;\n};\n\nconst buildPresetGeometry = () => {\n  const presetGeometryFragment = fragment({\n    namespaceAlias: { a: namespaces.a },\n  })\n    .ele('@a', 'prstGeom')\n    .att('prst', 'rect')\n    .up();\n\n  return presetGeometryFragment;\n};\n\nconst buildExtents = ({ width, height }) => {\n  const extentsFragment = fragment({\n    namespaceAlias: { a: namespaces.a },\n  })\n    .ele('@a', 'ext')\n    .att('cx', width)\n    .att('cy', height)\n    .up();\n\n  return extentsFragment;\n};\n\nconst buildOffset = () => {\n  const offsetFragment = fragment({\n    namespaceAlias: { a: namespaces.a },\n  })\n    .ele('@a', 'off')\n    .att('x', '0')\n    .att('y', '0')\n    .up();\n\n  return offsetFragment;\n};\n\nconst buildGraphicFrameTransform = (attributes) => {\n  const graphicFrameTransformFragment = fragment({\n    namespaceAlias: { a: namespaces.a },\n  }).ele('@a', 'xfrm');\n\n  const offsetFragment = buildOffset();\n  graphicFrameTransformFragment.import(offsetFragment);\n  const extentsFragment = buildExtents(attributes);\n  graphicFrameTransformFragment.import(extentsFragment);\n\n  graphicFrameTransformFragment.up();\n\n  return graphicFrameTransformFragment;\n};\n\nconst buildShapeProperties = (attributes) => {\n  const shapeProperties = fragment({\n    namespaceAlias: { pic: namespaces.pic },\n  }).ele('@pic', 'spPr');\n\n  const graphicFrameTransformFragment = buildGraphicFrameTransform(attributes);\n  shapeProperties.import(graphicFrameTransformFragment);\n  const presetGeometryFragment = buildPresetGeometry();\n  shapeProperties.import(presetGeometryFragment);\n\n  shapeProperties.up();\n\n  return shapeProperties;\n};\n\nconst buildFillRect = () => {\n  const fillRectFragment = fragment({\n    namespaceAlias: { a: namespaces.a },\n  })\n    .ele('@a', 'fillRect')\n    .up();\n\n  return fillRectFragment;\n};\n\nconst buildStretch = () => {\n  const stretchFragment = fragment({\n    namespaceAlias: { a: namespaces.a },\n  }).ele('@a', 'stretch');\n\n  const fillRectFragment = buildFillRect();\n  stretchFragment.import(fillRectFragment);\n\n  stretchFragment.up();\n\n  return stretchFragment;\n};\n\nconst buildSrcRectFragment = () => {\n  const srcRectFragment = fragment({\n    namespaceAlias: { a: namespaces.a },\n  })\n    .ele('@a', 'srcRect')\n    .att('b', '0')\n    .att('l', '0')\n    .att('r', '0')\n    .att('t', '0')\n    .up();\n\n  return srcRectFragment;\n};\n\nconst buildBinaryLargeImageOrPicture = (relationshipId) => {\n  const binaryLargeImageOrPictureFragment = fragment({\n    namespaceAlias: { a: namespaces.a, r: namespaces.r },\n  })\n    .ele('@a', 'blip')\n    .att('@r', 'embed', `rId${relationshipId}`)\n    // FIXME: possible values 'email', 'none', 'print', 'hqprint', 'screen'\n    .att('cstate', 'print');\n\n  binaryLargeImageOrPictureFragment.up();\n\n  return binaryLargeImageOrPictureFragment;\n};\n\nconst buildBinaryLargeImageOrPictureFill = (relationshipId) => {\n  const binaryLargeImageOrPictureFillFragment = fragment({\n    namespaceAlias: { pic: namespaces.pic },\n  }).ele('@pic', 'blipFill');\n  const binaryLargeImageOrPictureFragment = buildBinaryLargeImageOrPicture(relationshipId);\n  binaryLargeImageOrPictureFillFragment.import(binaryLargeImageOrPictureFragment);\n  const srcRectFragment = buildSrcRectFragment();\n  binaryLargeImageOrPictureFillFragment.import(srcRectFragment);\n  const stretchFragment = buildStretch();\n  binaryLargeImageOrPictureFillFragment.import(stretchFragment);\n\n  binaryLargeImageOrPictureFillFragment.up();\n\n  return binaryLargeImageOrPictureFillFragment;\n};\n\nconst buildNonVisualPictureDrawingProperties = () => {\n  const nonVisualPictureDrawingPropertiesFragment = fragment({\n    namespaceAlias: { pic: namespaces.pic },\n  }).ele('@pic', 'cNvPicPr');\n\n  nonVisualPictureDrawingPropertiesFragment.up();\n\n  return nonVisualPictureDrawingPropertiesFragment;\n};\n\nconst buildNonVisualDrawingProperties = (\n  pictureId,\n  pictureNameWithExtension,\n  pictureDescription = ''\n) => {\n  const nonVisualDrawingPropertiesFragment = fragment({\n    namespaceAlias: { pic: namespaces.pic },\n  })\n    .ele('@pic', 'cNvPr')\n    .att('id', pictureId)\n    .att('name', pictureNameWithExtension)\n    .att('descr', pictureDescription);\n\n  nonVisualDrawingPropertiesFragment.up();\n\n  return nonVisualDrawingPropertiesFragment;\n};\n\nconst buildNonVisualPictureProperties = (\n  pictureId,\n  pictureNameWithExtension,\n  pictureDescription\n) => {\n  const nonVisualPicturePropertiesFragment = fragment({\n    namespaceAlias: { pic: namespaces.pic },\n  }).ele('@pic', 'nvPicPr');\n  // TODO: Handle picture attributes\n  const nonVisualDrawingPropertiesFragment = buildNonVisualDrawingProperties(\n    pictureId,\n    pictureNameWithExtension,\n    pictureDescription\n  );\n  nonVisualPicturePropertiesFragment.import(nonVisualDrawingPropertiesFragment);\n  const nonVisualPictureDrawingPropertiesFragment = buildNonVisualPictureDrawingProperties();\n  nonVisualPicturePropertiesFragment.import(nonVisualPictureDrawingPropertiesFragment);\n  nonVisualPicturePropertiesFragment.up();\n\n  return nonVisualPicturePropertiesFragment;\n};\n\nconst buildPicture = ({\n  id,\n  fileNameWithExtension,\n  description,\n  relationshipId,\n  width,\n  height,\n}) => {\n  const pictureFragment = fragment({\n    namespaceAlias: { pic: namespaces.pic },\n  }).ele('@pic', 'pic');\n  const nonVisualPicturePropertiesFragment = buildNonVisualPictureProperties(\n    id,\n    fileNameWithExtension,\n    description\n  );\n  pictureFragment.import(nonVisualPicturePropertiesFragment);\n  const binaryLargeImageOrPictureFill = buildBinaryLargeImageOrPictureFill(relationshipId);\n  pictureFragment.import(binaryLargeImageOrPictureFill);\n  const shapeProperties = buildShapeProperties({ width, height });\n  pictureFragment.import(shapeProperties);\n  pictureFragment.up();\n\n  return pictureFragment;\n};\n\nconst buildGraphicData = (graphicType, attributes) => {\n  const graphicDataFragment = fragment({\n    namespaceAlias: { a: namespaces.a },\n  })\n    .ele('@a', 'graphicData')\n    .att('uri', 'http://schemas.openxmlformats.org/drawingml/2006/picture');\n  if (graphicType === 'picture') {\n    const pictureFragment = buildPicture(attributes);\n    graphicDataFragment.import(pictureFragment);\n  }\n  graphicDataFragment.up();\n\n  return graphicDataFragment;\n};\n\nconst buildGraphic = (graphicType, attributes) => {\n  const graphicFragment = fragment({\n    namespaceAlias: { a: namespaces.a },\n  }).ele('@a', 'graphic');\n  // TODO: Handle drawing type\n  const graphicDataFragment = buildGraphicData(graphicType, attributes);\n  graphicFragment.import(graphicDataFragment);\n  graphicFragment.up();\n\n  return graphicFragment;\n};\n\nconst buildDrawingObjectNonVisualProperties = (pictureId, pictureName) => {\n  const drawingObjectNonVisualPropertiesFragment = fragment({\n    namespaceAlias: { wp: namespaces.wp },\n  })\n    .ele('@wp', 'docPr')\n    .att('id', pictureId)\n    .att('name', pictureName)\n    .up();\n\n  return drawingObjectNonVisualPropertiesFragment;\n};\n\nconst buildWrapSquare = () => {\n  const wrapSquareFragment = fragment({\n    namespaceAlias: { wp: namespaces.wp },\n  })\n    .ele('@wp', 'wrapSquare')\n    .att('wrapText', 'bothSides')\n    .att('distB', '228600')\n    .att('distT', '228600')\n    .att('distL', '228600')\n    .att('distR', '228600')\n    .up();\n\n  return wrapSquareFragment;\n};\n\n// eslint-disable-next-line no-unused-vars\nconst buildWrapNone = () => {\n  const wrapNoneFragment = fragment({\n    namespaceAlias: { wp: namespaces.wp },\n  })\n    .ele('@wp', 'wrapNone')\n    .up();\n\n  return wrapNoneFragment;\n};\n\nconst buildEffectExtentFragment = () => {\n  const effectExtentFragment = fragment({\n    namespaceAlias: { wp: namespaces.wp },\n  })\n    .ele('@wp', 'effectExtent')\n    .att('b', '0')\n    .att('l', '0')\n    .att('r', '0')\n    .att('t', '0')\n    .up();\n\n  return effectExtentFragment;\n};\n\nconst buildExtent = ({ width, height }) => {\n  const extentFragment = fragment({\n    namespaceAlias: { wp: namespaces.wp },\n  })\n    .ele('@wp', 'extent')\n    .att('cx', width)\n    .att('cy', height)\n    .up();\n\n  return extentFragment;\n};\n\nconst buildPositionV = () => {\n  const positionVFragment = fragment({\n    namespaceAlias: { wp: namespaces.wp },\n  })\n    .ele('@wp', 'positionV')\n    .att('relativeFrom', 'paragraph')\n    .ele('@wp', 'posOffset')\n    .txt('19050')\n    .up()\n    .up();\n\n  return positionVFragment;\n};\n\nconst buildPositionH = () => {\n  const positionHFragment = fragment({\n    namespaceAlias: { wp: namespaces.wp },\n  })\n    .ele('@wp', 'positionH')\n    .att('relativeFrom', 'column')\n    .ele('@wp', 'posOffset')\n    .txt('19050')\n    .up()\n    .up();\n\n  return positionHFragment;\n};\n\nconst buildSimplePos = () => {\n  const simplePosFragment = fragment({\n    namespaceAlias: { wp: namespaces.wp },\n  })\n    .ele('@wp', 'simplePos')\n    .att('x', '0')\n    .att('y', '0')\n    .up();\n\n  return simplePosFragment;\n};\n\nconst buildAnchoredDrawing = (graphicType, attributes) => {\n  const anchoredDrawingFragment = fragment({\n    namespaceAlias: { wp: namespaces.wp },\n  })\n    .ele('@wp', 'anchor')\n    .att('distB', '0')\n    .att('distL', '0')\n    .att('distR', '0')\n    .att('distT', '0')\n    .att('relativeHeight', '0')\n    .att('behindDoc', 'false')\n    .att('locked', 'true')\n    .att('layoutInCell', 'true')\n    .att('allowOverlap', 'false')\n    .att('simplePos', 'false');\n  // Even though simplePos isnt supported by Word 2007 simplePos is required.\n  const simplePosFragment = buildSimplePos();\n  anchoredDrawingFragment.import(simplePosFragment);\n  const positionHFragment = buildPositionH();\n  anchoredDrawingFragment.import(positionHFragment);\n  const positionVFragment = buildPositionV();\n  anchoredDrawingFragment.import(positionVFragment);\n  const extentFragment = buildExtent({ width: attributes.width, height: attributes.height });\n  anchoredDrawingFragment.import(extentFragment);\n  const effectExtentFragment = buildEffectExtentFragment();\n  anchoredDrawingFragment.import(effectExtentFragment);\n  const wrapSquareFragment = buildWrapSquare();\n  anchoredDrawingFragment.import(wrapSquareFragment);\n  const drawingObjectNonVisualPropertiesFragment = buildDrawingObjectNonVisualProperties(\n    attributes.id,\n    attributes.fileNameWithExtension\n  );\n  anchoredDrawingFragment.import(drawingObjectNonVisualPropertiesFragment);\n  const graphicFragment = buildGraphic(graphicType, attributes);\n  anchoredDrawingFragment.import(graphicFragment);\n\n  anchoredDrawingFragment.up();\n\n  return anchoredDrawingFragment;\n};\n\nconst buildInlineDrawing = (graphicType, attributes) => {\n  const inlineDrawingFragment = fragment({\n    namespaceAlias: { wp: namespaces.wp },\n  })\n    .ele('@wp', 'inline')\n    .att('distB', '0')\n    .att('distL', '0')\n    .att('distR', '0')\n    .att('distT', '0');\n\n  const extentFragment = buildExtent({ width: attributes.width, height: attributes.height });\n  inlineDrawingFragment.import(extentFragment);\n  const effectExtentFragment = buildEffectExtentFragment();\n  inlineDrawingFragment.import(effectExtentFragment);\n  const drawingObjectNonVisualPropertiesFragment = buildDrawingObjectNonVisualProperties(\n    attributes.id,\n    attributes.fileNameWithExtension\n  );\n  inlineDrawingFragment.import(drawingObjectNonVisualPropertiesFragment);\n  const graphicFragment = buildGraphic(graphicType, attributes);\n  inlineDrawingFragment.import(graphicFragment);\n\n  inlineDrawingFragment.up();\n\n  return inlineDrawingFragment;\n};\n\nconst buildDrawing = (inlineOrAnchored = false, graphicType, attributes) => {\n  const drawingFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  }).ele('@w', 'drawing');\n  const inlineOrAnchoredDrawingFragment = inlineOrAnchored\n    ? buildInlineDrawing(graphicType, attributes)\n    : buildAnchoredDrawing(graphicType, attributes);\n  drawingFragment.import(inlineOrAnchoredDrawingFragment);\n  drawingFragment.up();\n\n  return drawingFragment;\n};\n\nexport {\n  buildParagraph,\n  buildTable,\n  buildNumberingInstances,\n  buildLineBreak,\n  buildIndentation,\n  buildTextElement,\n  buildBold,\n  buildItalics,\n  buildUnderline,\n  buildDrawing,\n  fixupLineHeight,\n};\n","/* eslint-disable no-case-declarations */\nimport { fragment } from 'xmlbuilder2';\n\n// FIXME: remove the cyclic dependency\n// eslint-disable-next-line import/no-cycle\nimport * as xmlBuilder from './xml-builder';\nimport namespaces from './namespaces';\nimport { pixelToHIP, defaultHeadingSizesInPixel } from '../utils/unit-conversion';\n\nconst VNode = require('virtual-dom/vnode/vnode');\nconst VText = require('virtual-dom/vnode/vtext');\nconst isVNode = require('virtual-dom/vnode/is-vnode');\nconst isVText = require('virtual-dom/vnode/is-vtext');\nconst escape = require('escape-html');\nconst sizeOf = require('image-size');\n\nconst convertHTML = require('html-to-vdom')({\n  VNode,\n  VText,\n});\n\n// eslint-disable-next-line consistent-return\nexport const buildImage = (docxDocumentInstance, vNode, maximumWidth = null) => {\n  let response = null;\n  try {\n    // libtidy encodes the image src\n    response = docxDocumentInstance.createMediaFile(decodeURIComponent(vNode.properties.src));\n  } catch (error) {\n    // NOOP\n  }\n  if (response) {\n    docxDocumentInstance.zip\n      .folder('word')\n      .folder('media')\n      .file(response.fileNameWithExtension, Buffer.from(response.fileContent, 'base64'), {\n        createFolders: false,\n      });\n\n    const documentRelsId = docxDocumentInstance.createDocumentRelationships(\n      docxDocumentInstance.relationshipFilename,\n      'image',\n      `media/${response.fileNameWithExtension}`,\n      'Internal'\n    );\n\n    const imageBuffer = Buffer.from(response.fileContent, 'base64');\n    const imageProperties = sizeOf(imageBuffer);\n\n    const imageFragment = xmlBuilder.buildParagraph(\n      vNode,\n      {\n        type: 'picture',\n        inlineOrAnchored: true,\n        relationshipId: documentRelsId,\n        ...response,\n        maximumWidth: maximumWidth || docxDocumentInstance.availableDocumentSpace,\n        originalWidth: imageProperties.width,\n        originalHeight: imageProperties.height,\n      },\n      docxDocumentInstance\n    );\n\n    return imageFragment;\n  }\n};\n\nexport const buildList = (vNode) => {\n  const listElements = [];\n\n  let vNodeObjects = [{ node: vNode, level: 0, type: vNode.tagName }];\n  while (vNodeObjects.length) {\n    const tempVNodeObject = vNodeObjects.shift();\n    if (\n      isVText(tempVNodeObject.node) ||\n      (isVNode(tempVNodeObject.node) && !['ul', 'ol', 'li'].includes(tempVNodeObject.node.tagName))\n    ) {\n      listElements.push({\n        node: tempVNodeObject.node,\n        level: tempVNodeObject.level,\n        type: tempVNodeObject.type,\n      });\n    }\n\n    if (\n      tempVNodeObject.node.children &&\n      tempVNodeObject.node.children.length &&\n      ['ul', 'ol', 'li'].includes(tempVNodeObject.node.tagName)\n    ) {\n      const tempVNodeObjects = tempVNodeObject.node.children.reduce((accumulator, childVNode) => {\n        if (['ul', 'ol'].includes(childVNode.tagName)) {\n          accumulator.push({\n            node: childVNode,\n            level: tempVNodeObject.level + 1,\n            type: childVNode.tagName,\n          });\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (\n            accumulator.length > 0 &&\n            isVNode(accumulator[accumulator.length - 1].node) &&\n            accumulator[accumulator.length - 1].node.tagName.toLowerCase() === 'p'\n          ) {\n            accumulator[accumulator.length - 1].node.children.push(childVNode);\n          } else {\n            const paragraphVNode = new VNode(\n              'p',\n              null,\n              // eslint-disable-next-line no-nested-ternary\n              isVText(childVNode)\n                ? [childVNode]\n                : // eslint-disable-next-line no-nested-ternary\n                isVNode(childVNode)\n                ? childVNode.tagName.toLowerCase() === 'li'\n                  ? [...childVNode.children]\n                  : [childVNode]\n                : []\n            );\n            accumulator.push({\n              // eslint-disable-next-line prettier/prettier, no-nested-ternary\n              node: isVNode(childVNode)\n                ? // eslint-disable-next-line prettier/prettier, no-nested-ternary\n                  childVNode.tagName.toLowerCase() === 'li'\n                  ? childVNode\n                  : childVNode.tagName.toLowerCase() !== 'p'\n                  ? paragraphVNode\n                  : childVNode\n                : // eslint-disable-next-line prettier/prettier\n                  paragraphVNode,\n              level: tempVNodeObject.level,\n              type: tempVNodeObject.type,\n            });\n          }\n        }\n\n        return accumulator;\n      }, []);\n      vNodeObjects = tempVNodeObjects.concat(vNodeObjects);\n    }\n  }\n\n  return listElements;\n};\n\nfunction findXMLEquivalent(docxDocumentInstance, vNode, xmlFragment) {\n  if (\n    vNode.tagName === 'div' &&\n    (vNode.properties.attributes.class === 'page-break' ||\n      (vNode.properties.style && vNode.properties.style['page-break-after']))\n  ) {\n    const paragraphFragment = fragment({\n      namespaceAlias: { w: namespaces.w },\n    })\n      .ele('@w', 'p')\n      .ele('@w', 'r')\n      .ele('@w', 'br')\n      .att('@w', 'type', 'page')\n      .up()\n      .up()\n      .up();\n\n    xmlFragment.import(paragraphFragment);\n    return;\n  }\n\n  switch (vNode.tagName) {\n    case 'h1':\n    case 'h2':\n    case 'h3':\n    case 'h4':\n    case 'h5':\n    case 'h6':\n      const fontSize = pixelToHIP(defaultHeadingSizesInPixel[vNode.tagName]);\n      const lineHeight = xmlBuilder.fixupLineHeight(1, fontSize);\n      const headingFragment = xmlBuilder.buildParagraph(\n        vNode,\n        {\n          fontSize,\n          lineHeight: Math.max(lineHeight, 240),\n          strong: 'bold',\n          beforeSpacing: 240,\n        },\n        docxDocumentInstance\n      );\n      xmlFragment.import(headingFragment);\n      return;\n    case 'span':\n    case 'strong':\n    case 'b':\n    case 'em':\n    case 'i':\n    case 'u':\n    case 'ins':\n    case 'strike':\n    case 'del':\n    case 's':\n    case 'sub':\n    case 'sup':\n    case 'mark':\n    case 'p':\n    case 'a':\n    case 'blockquote':\n      const paragraphFragment = xmlBuilder.buildParagraph(vNode, {}, docxDocumentInstance);\n      xmlFragment.import(paragraphFragment);\n      return;\n    case 'figure':\n      if (vNode.children && Array.isArray(vNode.children) && vNode.children.length) {\n        // eslint-disable-next-line no-plusplus\n        for (let index = 0; index < vNode.children.length; index++) {\n          const childVNode = vNode.children[index];\n          if (childVNode.tagName === 'table') {\n            const tableFragment = xmlBuilder.buildTable(\n              childVNode,\n              {\n                maximumWidth: docxDocumentInstance.availableDocumentSpace,\n                rowCantSplit: docxDocumentInstance.tableRowCantSplit,\n              },\n              docxDocumentInstance\n            );\n            xmlFragment.import(tableFragment);\n            // Adding empty paragraph for space after table\n            const emptyParagraphFragment = xmlBuilder.buildParagraph(null, {});\n            xmlFragment.import(emptyParagraphFragment);\n          } else if (childVNode.tagName === 'img') {\n            const imageFragment = buildImage(docxDocumentInstance, childVNode);\n            if (imageFragment) {\n              xmlFragment.import(imageFragment);\n            }\n          }\n        }\n      }\n      return;\n    case 'table':\n      const tableFragment = xmlBuilder.buildTable(\n        vNode,\n        {\n          maximumWidth: docxDocumentInstance.availableDocumentSpace,\n          rowCantSplit: docxDocumentInstance.tableRowCantSplit,\n        },\n        docxDocumentInstance\n      );\n      xmlFragment.import(tableFragment);\n      // Adding empty paragraph for space after table\n      const emptyParagraphFragment = xmlBuilder.buildParagraph(null, {});\n      xmlFragment.import(emptyParagraphFragment);\n      return;\n    case 'ol':\n    case 'ul':\n      const listElements = buildList(vNode);\n      const numberingId = docxDocumentInstance.createNumbering(listElements);\n      // eslint-disable-next-line no-plusplus\n      for (let index = 0; index < listElements.length; index++) {\n        const listElement = listElements[index];\n        // eslint-disable-next-line no-shadow\n        const paragraphFragment = xmlBuilder.buildParagraph(\n          listElement.node,\n          {\n            numbering: { levelId: listElement.level, numberingId },\n          },\n          docxDocumentInstance\n        );\n        xmlFragment.import(paragraphFragment);\n      }\n      return;\n    case 'img':\n      const imageFragment = buildImage(docxDocumentInstance, vNode);\n      if (imageFragment) {\n        xmlFragment.import(imageFragment);\n      }\n      return;\n    case 'br':\n      const linebreakFragment = xmlBuilder.buildParagraph(null, {});\n      xmlFragment.import(linebreakFragment);\n      return;\n    default:\n      break;\n  }\n  if (vNode.children && Array.isArray(vNode.children) && vNode.children.length) {\n    // eslint-disable-next-line no-plusplus\n    for (let index = 0; index < vNode.children.length; index++) {\n      const childVNode = vNode.children[index];\n      // eslint-disable-next-line no-use-before-define\n      convertVTreeToXML(docxDocumentInstance, childVNode, xmlFragment);\n    }\n  }\n}\n\n// eslint-disable-next-line consistent-return\nexport function convertVTreeToXML(docxDocumentInstance, vTree, xmlFragment) {\n  if (!vTree) {\n    // eslint-disable-next-line no-useless-return\n    return '';\n  }\n  if (Array.isArray(vTree) && vTree.length) {\n    // eslint-disable-next-line no-plusplus\n    for (let index = 0; index < vTree.length; index++) {\n      const vNode = vTree[index];\n      convertVTreeToXML(docxDocumentInstance, vNode, xmlFragment);\n    }\n  } else if (isVNode(vTree)) {\n    findXMLEquivalent(docxDocumentInstance, vTree, xmlFragment);\n  } else if (isVText(vTree)) {\n    xmlBuilder.buildTextElement(xmlFragment, escape(String(vTree.text)));\n  }\n  return xmlFragment;\n}\n\nfunction renderDocumentFile(docxDocumentInstance) {\n  const vTree = convertHTML(docxDocumentInstance.htmlString);\n\n  const xmlFragment = fragment({\n    namespaceAlias: { w: namespaces.w },\n  });\n\n  const populatedXmlFragment = convertVTreeToXML(docxDocumentInstance, vTree, xmlFragment);\n\n  return populatedXmlFragment;\n}\n\nexport default renderDocumentFile;\n","import { namespaces } from '../helpers';\n\nconst generateCoreXML = (\n  title = '',\n  subject = '',\n  creator = 'html-to-docx',\n  keywords = ['html-to-docx'],\n  description = '',\n  lastModifiedBy = 'html-to-docx',\n  revision = 1,\n  createdAt = new Date(),\n  modifiedAt = new Date()\n) => {\n  return `\n        <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n\n        <cp:coreProperties\n          xmlns:cp=\"${namespaces.coreProperties}\"\n          xmlns:dc=\"${namespaces.dc}\"\n          xmlns:dcterms=\"${namespaces.dcterms}\"\n          xmlns:dcmitype=\"${namespaces.dcmitype}\"\n          xmlns:xsi=\"${namespaces.xsi}\"\n          >\n            <dc:title>${title}</dc:title>\n            <dc:subject>${subject}</dc:subject>\n            <dc:creator>${creator}</dc:creator>\n            ${\n              keywords && Array.isArray(keywords)\n                ? `<cp:keywords>${keywords.join(', ')}</cp:keywords>`\n                : ''\n            }\n            <dc:description>${description}</dc:description>\n            <cp:lastModifiedBy>${lastModifiedBy}</cp:lastModifiedBy>\n            <cp:revision>${revision}</cp:revision>\n            <dcterms:created xsi:type=\"dcterms:W3CDTF\">${\n              createdAt instanceof Date ? createdAt.toISOString() : new Date().toISOString()\n            }</dcterms:created>\n            <dcterms:modified xsi:type=\"dcterms:W3CDTF\">${\n              modifiedAt instanceof Date ? modifiedAt.toISOString() : new Date().toISOString()\n            }</dcterms:modified>\n        </cp:coreProperties>\n    `;\n};\n\nexport default generateCoreXML;\n","import { namespaces } from '../helpers';\n\nconst documentRelsXML = `\n  <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n\n  <Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">\n    <Relationship Id=\"rId1\" Type=\"${namespaces.numbering}\" Target=\"numbering.xml\"/>\n    <Relationship Id=\"rId2\" Type=\"${namespaces.styles}\" Target=\"styles.xml\"/>\n    <Relationship Id=\"rId3\" Type=\"${namespaces.settingsRelation}\" Target=\"settings.xml\"/>\n    <Relationship Id=\"rId4\" Type=\"${namespaces.webSettingsRelation}\" Target=\"webSettings.xml\"/>\n  </Relationships>\n`;\n\nexport default documentRelsXML;\n","import { namespaces } from '../helpers';\n\nconst relsXML = `\n    <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n\n    <Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">\n        <Relationship Id=\"rId1\" Type=\"${namespaces.officeDocumentRelation}\" Target=\"word/document.xml\"/>\n        <Relationship Id=\"rId2\" Type=\"${namespaces.corePropertiesRelation}\" Target=\"docProps/core.xml\"/>\n    </Relationships>\n`;\n\nexport default relsXML;\n","import { namespaces } from '../helpers';\n\nconst fontTableXML = `\n    <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n\n    <w:fonts\n      xmlns:r=\"${namespaces.r}\"\n      xmlns:w=\"${namespaces.w}\"\n      >\n        <w:font w:name=\"Calibri\">\n            <w:panose1 w:val=\"020F0502020204030204\"/>\n            <w:charset w:val=\"00\"/>\n            <w:family w:val=\"swiss\"/>\n            <w:pitch w:val=\"variable\"/>\n            <w:sig w:usb0=\"E4002EFF\" w:usb1=\"C000247B\" w:usb2=\"00000009\" w:usb3=\"00000000\" w:csb0=\"000001FF\" w:csb1=\"00000000\"/>\n        </w:font>\n        <w:font w:name=\"Times New Roman\">\n            <w:panose1 w:val=\"02020603050405020304\"/>\n            <w:charset w:val=\"00\"/>\n            <w:family w:val=\"roman\"/>\n            <w:pitch w:val=\"variable\"/>\n            <w:sig w:usb0=\"E0002EFF\" w:usb1=\"C000785B\" w:usb2=\"00000009\" w:usb3=\"00000000\" w:csb0=\"000001FF\" w:csb1=\"00000000\"/>\n        </w:font>\n        <w:font w:name=\"Calibri Light\">\n            <w:panose1 w:val=\"020F0302020204030204\"/>\n            <w:charset w:val=\"00\"/>\n            <w:family w:val=\"swiss\"/>\n            <w:pitch w:val=\"variable\"/>\n            <w:sig w:usb0=\"E4002EFF\" w:usb1=\"C000247B\" w:usb2=\"00000009\" w:usb3=\"00000000\" w:csb0=\"000001FF\" w:csb1=\"00000000\"/>\n        </w:font>\n    </w:fonts>\n`;\n\nexport default fontTableXML;\n","import { namespaces } from '../helpers';\n\nconst settingsXML = `\n    <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n\n    <w:settings xmlns:w=\"${namespaces.w}\" xmlns:o=\"${namespaces.o}\" xmlns:r=\"${namespaces.r}\" xmlns:v=\"${namespaces.v}\" xmlns:w10=\"${namespaces.w10}\" xmlns:sl=\"${namespaces.sl}\">\n        <w:zoom w:percent=\"100\"/>\n        <w:defaultTabStop w:val=\"720\"/>\n        <w:decimalSymbol w:val=\".\"/>\n        <w:listSeparator w:val=\",\"/>\n    </w:settings>\n`;\n\nexport default settingsXML;\n","import { namespaces } from '../helpers';\n\nconst webSettingsXML = `\n    <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n\n    <w:webSettings xmlns:w=\"${namespaces.w}\" xmlns:r=\"${namespaces.r}\">\n    </w:webSettings>\n`;\n\nexport default webSettingsXML;\n","import { create, fragment } from 'xmlbuilder2';\n\nimport {\n  generateCoreXML,\n  generateStylesXML,\n  generateNumberingXMLTemplate,\n  documentRelsXML as documentRelsXMLString,\n  settingsXML as settingsXMLString,\n  webSettingsXML as webSettingsXMLString,\n  contentTypesXML as contentTypesXMLString,\n  fontTableXML as fontTableXMLString,\n  genericRelsXML as genericRelsXMLString,\n} from './schemas';\nimport { convertVTreeToXML, namespaces } from './helpers';\nimport generateDocumentTemplate from '../template/document.template';\n\nconst crypto = require('crypto');\n\nconst landscapeMargins = {\n  top: 1800,\n  right: 1440,\n  bottom: 1800,\n  left: 1440,\n  header: 720,\n  footer: 720,\n  gutter: 0,\n};\n\nconst portraitMargins = {\n  top: 1440,\n  right: 1800,\n  bottom: 1440,\n  left: 1800,\n  header: 720,\n  footer: 720,\n  gutter: 0,\n};\n\nclass DocxDocument {\n  constructor({\n    zip,\n    htmlString,\n    orientation,\n    margins,\n    title,\n    subject,\n    creator,\n    keywords,\n    description,\n    lastModifiedBy,\n    revision,\n    createdAt,\n    modifiedAt,\n    headerType,\n    header,\n    footerType,\n    footer,\n    font,\n    fontSize,\n    complexScriptFontSize,\n    table,\n    pageNumber,\n    skipFirstHeaderFooter,\n  }) {\n    this.zip = zip;\n    this.htmlString = htmlString;\n    this.orientation = orientation;\n    this.width = orientation === 'landscape' ? 15840 : 12240;\n    this.height = orientation === 'landscape' ? 12240 : 15840;\n    this.margins =\n      // eslint-disable-next-line no-nested-ternary\n      margins && Object.keys(margins).length\n        ? margins\n        : orientation === 'landscape'\n        ? landscapeMargins\n        : portraitMargins;\n    this.availableDocumentSpace = this.width - this.margins.left - this.margins.right;\n    this.title = title || '';\n    this.subject = subject || '';\n    this.creator = creator || 'html-to-docx';\n    this.keywords = keywords || ['html-to-docx'];\n    this.description = description || '';\n    this.lastModifiedBy = lastModifiedBy || 'html-to-docx';\n    this.revision = revision || 1;\n    this.createdAt = createdAt || new Date();\n    this.modifiedAt = modifiedAt || new Date();\n    this.headerType = headerType || 'default';\n    this.header = header || false;\n    this.footerType = footerType || 'default';\n    this.footer = footer || false;\n    this.font = font || 'Times New Roman';\n    this.fontSize = fontSize || 22;\n    this.complexScriptFontSize = complexScriptFontSize || 22;\n    this.tableRowCantSplit = (table && table.row && table.row.cantSplit) || false;\n    this.pageNumber = pageNumber || false;\n    this.skipFirstHeaderFooter = skipFirstHeaderFooter || false;\n\n    this.lastNumberingId = 0;\n    this.lastMediaId = 0;\n    this.lastHeaderId = 0;\n    this.lastFooterId = 0;\n    this.stylesObjects = [];\n    this.numberingObjects = [];\n    this.relationshipFilename = 'document';\n    this.relationships = [{ fileName: 'document', lastRelsId: 4, rels: [] }];\n    this.mediaFiles = [];\n    this.headerObjects = [];\n    this.footerObjects = [];\n    this.documentXML = null;\n\n    this.generateContentTypesXML = this.generateContentTypesXML.bind(this);\n    this.generateCoreXML = this.generateCoreXML.bind(this);\n    this.generateDocumentXML = this.generateDocumentXML.bind(this);\n    this.generateSettingsXML = this.generateSettingsXML.bind(this);\n    this.generateWebSettingsXML = this.generateWebSettingsXML.bind(this);\n    this.generateStylesXML = this.generateStylesXML.bind(this);\n    this.generateFontTableXML = this.generateFontTableXML.bind(this);\n    this.generateNumberingXML = this.generateNumberingXML.bind(this);\n    this.generateRelsXML = this.generateRelsXML.bind(this);\n    this.createMediaFile = this.createMediaFile.bind(this);\n    this.createDocumentRelationships = this.createDocumentRelationships.bind(this);\n    this.generateHeaderXML = this.generateHeaderXML.bind(this);\n    this.generateFooterXML = this.generateFooterXML.bind(this);\n  }\n\n  generateContentTypesXML() {\n    const contentTypesXML = create({ encoding: 'UTF-8', standalone: true }, contentTypesXMLString);\n\n    if (this.headerObjects && Array.isArray(this.headerObjects) && this.headerObjects.length) {\n      this.headerObjects.forEach(\n        // eslint-disable-next-line array-callback-return\n        ({ headerId }) => {\n          const contentTypesFragment = fragment({\n            defaultNamespace: {\n              ele: 'http://schemas.openxmlformats.org/package/2006/content-types',\n            },\n          })\n            .ele('Override')\n            .att('PartName', `/word/header${headerId}.xml`)\n            .att(\n              'ContentType',\n              'application/vnd.openxmlformats-officedocument.wordprocessingml.header+xml'\n            )\n            .up();\n          contentTypesXML.root().import(contentTypesFragment);\n        }\n      );\n    }\n    if (this.footerObjects && Array.isArray(this.footerObjects) && this.footerObjects.length) {\n      this.footerObjects.forEach(\n        // eslint-disable-next-line array-callback-return\n        ({ footerId }) => {\n          const contentTypesFragment = fragment({\n            defaultNamespace: {\n              ele: 'http://schemas.openxmlformats.org/package/2006/content-types',\n            },\n          })\n            .ele('Override')\n            .att('PartName', `/word/footer${footerId}.xml`)\n            .att(\n              'ContentType',\n              'application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml'\n            )\n            .up();\n          contentTypesXML.root().import(contentTypesFragment);\n        }\n      );\n    }\n\n    return contentTypesXML.toString({ prettyPrint: true });\n  }\n\n  generateCoreXML() {\n    const coreXML = create(\n      { encoding: 'UTF-8', standalone: true },\n      generateCoreXML(\n        this.title,\n        this.subject,\n        this.creator,\n        this.keywords,\n        this.description,\n        this.lastModifiedBy,\n        this.revision,\n        this.createdAt,\n        this.modifiedAt\n      )\n    );\n\n    return coreXML.toString({ prettyPrint: true });\n  }\n\n  generateDocumentXML() {\n    const documentXML = create(\n      { encoding: 'UTF-8', standalone: true },\n      generateDocumentTemplate(this.width, this.height, this.orientation, this.margins)\n    );\n    documentXML.root().first().import(this.documentXML);\n\n    if (\n      this.header &&\n      this.headerObjects &&\n      Array.isArray(this.headerObjects) &&\n      this.headerObjects.length\n    ) {\n      const headerXmlFragment = fragment();\n\n      this.headerObjects.forEach(\n        // eslint-disable-next-line array-callback-return\n        ({ relationshipId, type }) => {\n          const headerFragment = fragment({\n            namespaceAlias: {\n              w: namespaces.w,\n              r: namespaces.r,\n            },\n          })\n            .ele('@w', 'headerReference')\n            .att('@r', 'id', `rId${relationshipId}`)\n            .att('@w', 'type', type)\n            .up();\n          headerXmlFragment.import(headerFragment);\n        }\n      );\n\n      documentXML.root().first().first().import(headerXmlFragment);\n    }\n    if (\n      this.footer &&\n      this.footerObjects &&\n      Array.isArray(this.footerObjects) &&\n      this.footerObjects.length\n    ) {\n      const footerXmlFragment = fragment();\n\n      this.footerObjects.forEach(\n        // eslint-disable-next-line array-callback-return\n        ({ relationshipId, type }) => {\n          const footerFragment = fragment({\n            namespaceAlias: {\n              w: namespaces.w,\n              r: namespaces.r,\n            },\n          })\n            .ele('@w', 'footerReference')\n            .att('@r', 'id', `rId${relationshipId}`)\n            .att('@w', 'type', type)\n            .up();\n          footerXmlFragment.import(footerFragment);\n        }\n      );\n\n      documentXML.root().first().first().import(footerXmlFragment);\n    }\n    if ((this.header || this.footer) && this.skipFirstHeaderFooter) {\n      const titlePageFragment = fragment({\n        namespaceAlias: {\n          w: namespaces.w,\n        },\n      }).ele('@w', 'titlePg');\n\n      documentXML.root().first().first().import(titlePageFragment);\n    }\n\n    return documentXML.toString({ prettyPrint: true });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  generateSettingsXML() {\n    const settingsXML = create({ encoding: 'UTF-8', standalone: true }, settingsXMLString);\n\n    return settingsXML.toString({ prettyPrint: true });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  generateWebSettingsXML() {\n    const webSettingsXML = create({ encoding: 'UTF-8', standalone: true }, webSettingsXMLString);\n\n    return webSettingsXML.toString({ prettyPrint: true });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  generateStylesXML() {\n    const stylesXML = create(\n      { encoding: 'UTF-8', standalone: true },\n      generateStylesXML(this.font, this.fontSize, this.complexScriptFontSize)\n    );\n\n    return stylesXML.toString({ prettyPrint: true });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  generateFontTableXML() {\n    const fontTableXML = create({ encoding: 'UTF-8', standalone: true }, fontTableXMLString);\n\n    return fontTableXML.toString({ prettyPrint: true });\n  }\n\n  generateNumberingXML() {\n    const numberingXML = create(\n      { encoding: 'UTF-8', standalone: true },\n      generateNumberingXMLTemplate()\n    );\n\n    const abstractNumberingFragments = fragment();\n    const numberingFragments = fragment();\n\n    this.numberingObjects.forEach(\n      // eslint-disable-next-line array-callback-return\n      ({ numberingId, listElements }) => {\n        const abstractNumberingFragment = fragment({\n          namespaceAlias: { w: namespaces.w },\n        })\n          .ele('@w', 'abstractNum')\n          .att('@w', 'abstractNumId', String(numberingId))\n          .ele('@w', 'multiLevelType')\n          .att('@w', 'val', 'hybridMultilevel')\n          .up();\n\n        listElements\n          .filter((value, index, self) => {\n            return self.findIndex((v) => v.level === value.level) === index;\n          })\n          .forEach(({ level, type }) => {\n            const levelFragment = fragment({\n              namespaceAlias: { w: namespaces.w },\n            })\n              .ele('@w', 'lvl')\n              .att('@w', 'ilvl', level)\n              .ele('@w', 'start')\n              .att('@w', 'val', '1')\n              .up()\n              .ele('@w', 'numFmt')\n              .att('@w', 'val', type === 'ol' ? 'decimal' : 'bullet')\n              .up()\n              .ele('@w', 'lvlText')\n              .att('@w', 'val', type === 'ol' ? `%${level + 1}` : '')\n              .up()\n              .ele('@w', 'lvlJc')\n              .att('@w', 'val', 'left')\n              .up()\n              .ele('@w', 'pPr')\n              .ele('@w', 'tabs')\n              .ele('@w', 'tab')\n              .att('@w', 'val', 'num')\n              .att('@w', 'pos', (level + 1) * 720)\n              .up()\n              .up()\n              .ele('@w', 'ind')\n              .att('@w', 'left', (level + 1) * 720)\n              .att('@w', 'hanging', 360)\n              .up()\n              .up()\n              .up();\n\n            if (type === 'ul') {\n              const runPropertiesFragment = fragment({\n                namespaceAlias: { w: namespaces.w },\n              })\n                .ele('@w', 'rPr')\n                .ele('@w', 'rFonts')\n                .att('@w', 'ascii', 'Wingdings')\n                .att('@w', 'hAnsi', 'Wingdings')\n                .att('@w', 'hint', 'default')\n                .up()\n                .up();\n\n              levelFragment.last().import(runPropertiesFragment);\n            }\n\n            abstractNumberingFragment.import(levelFragment);\n          });\n\n        abstractNumberingFragment.up();\n\n        const numberingFragment = fragment({\n          namespaceAlias: { w: namespaces.w },\n        })\n          .ele('@w', 'num')\n          .att('@w', 'numId', String(numberingId))\n          .ele('@w', 'abstractNumId')\n          .att('@w', 'val', String(numberingId))\n          .up()\n          .up();\n\n        abstractNumberingFragments.import(abstractNumberingFragment);\n        numberingFragments.import(numberingFragment);\n      }\n    );\n\n    numberingXML.root().import(abstractNumberingFragments);\n    numberingXML.root().import(numberingFragments);\n\n    return numberingXML.toString({ prettyPrint: true });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  appendRelationships(xmlFragment, relationships) {\n    relationships.forEach(\n      // eslint-disable-next-line array-callback-return\n      ({ relationshipId, type, target, targetMode }) => {\n        const relationshipFragment = fragment({\n          defaultNamespace: { ele: 'http://schemas.openxmlformats.org/package/2006/relationships' },\n        })\n          .ele('Relationship')\n          .att('Id', `rId${relationshipId}`)\n          .att('Type', type)\n          .att('Target', target)\n          .att('TargetMode', targetMode)\n          .up();\n\n        xmlFragment.import(relationshipFragment);\n      }\n    );\n  }\n\n  generateRelsXML() {\n    const relationshipXMLStrings = this.relationships.map(({ fileName, rels }) => {\n      let xmlFragment;\n      if (fileName === 'document') {\n        xmlFragment = create({ encoding: 'UTF-8', standalone: true }, documentRelsXMLString);\n      } else {\n        xmlFragment = create({ encoding: 'UTF-8', standalone: true }, genericRelsXMLString);\n      }\n      this.appendRelationships(xmlFragment.root(), rels);\n\n      return {\n        fileName,\n        xmlString: xmlFragment.toString({ prettyPrint: true }),\n      };\n    });\n\n    return relationshipXMLStrings;\n  }\n\n  createNumbering(listElements) {\n    this.lastNumberingId += 1;\n    this.numberingObjects.push({ numberingId: this.lastNumberingId, listElements });\n\n    return this.lastNumberingId;\n  }\n\n  createMediaFile(base64String) {\n    // eslint-disable-next-line no-useless-escape\n    const matches = base64String.match(/^data:([A-Za-z-+\\/]+);base64,(.+)$/);\n    if (matches.length !== 3) {\n      throw new Error('Invalid base64 string');\n    }\n\n    const base64FileContent = matches[2];\n    // matches array contains file type in base64 format - image/jpeg and base64 stringified data\n    const fileExtension =\n      matches[1].match(/\\/(.*?)$/)[1] === 'octet-stream' ? 'png' : matches[1].match(/\\/(.*?)$/)[1];\n    const SHA1String = crypto.createHash('sha1').update(crypto.randomBytes(20)).digest('hex');\n\n    const fileNameWithExtension = `image-${SHA1String}.${fileExtension}`;\n\n    this.lastMediaId += 1;\n\n    return { id: this.lastMediaId, fileContent: base64FileContent, fileNameWithExtension };\n  }\n\n  createDocumentRelationships(fileName = 'document', type, target, targetMode = 'External') {\n    let relationshipObject = this.relationships.find(\n      (relationship) => relationship.fileName === fileName\n    );\n    let lastRelsId = 1;\n    if (relationshipObject) {\n      lastRelsId = relationshipObject.lastRelsId + 1;\n      relationshipObject.lastRelsId = lastRelsId;\n    } else {\n      relationshipObject = { fileName, lastRelsId, rels: [] };\n      this.relationships.push(relationshipObject);\n    }\n    let relationshipType;\n    switch (type) {\n      case 'hyperlink':\n        relationshipType = namespaces.hyperlinks;\n        break;\n      case 'image':\n        relationshipType = namespaces.images;\n        break;\n      case 'header':\n        relationshipType = namespaces.headers;\n        break;\n      case 'footer':\n        relationshipType = namespaces.footers;\n        break;\n      default:\n        break;\n    }\n\n    relationshipObject.rels.push({\n      relationshipId: lastRelsId,\n      type: relationshipType,\n      target,\n      targetMode,\n    });\n\n    return lastRelsId;\n  }\n\n  generateHeaderXML(vTree) {\n    const headerXML = create({\n      encoding: 'UTF-8',\n      standalone: true,\n      namespaceAlias: {\n        w: namespaces.w,\n        ve: namespaces.ve,\n        o: namespaces.o,\n        r: namespaces.r,\n        v: namespaces.v,\n        wp: namespaces.wp,\n        w10: namespaces.w10,\n      },\n    }).ele('@w', 'hdr');\n\n    const XMLFragment = fragment();\n    convertVTreeToXML(this, vTree, XMLFragment);\n    headerXML.root().import(XMLFragment);\n\n    this.lastHeaderId += 1;\n\n    return { headerId: this.lastHeaderId, headerXML };\n  }\n\n  generateFooterXML(vTree) {\n    const footerXML = create({\n      encoding: 'UTF-8',\n      standalone: true,\n      namespaceAlias: {\n        w: namespaces.w,\n        ve: namespaces.ve,\n        o: namespaces.o,\n        r: namespaces.r,\n        v: namespaces.v,\n        wp: namespaces.wp,\n        w10: namespaces.w10,\n      },\n    }).ele('@w', 'ftr');\n\n    const XMLFragment = fragment();\n    convertVTreeToXML(this, vTree, XMLFragment);\n    if (XMLFragment.first().node.tagName === 'p' && this.pageNumber) {\n      const fieldSimpleFragment = fragment({\n        namespaceAlias: {\n          w: namespaces.w,\n        },\n      })\n        .ele('@w', 'fldSimple')\n        .att('@w', 'instr', 'PAGE')\n        .ele('@w', 'r')\n        .up()\n        .up();\n      XMLFragment.first().import(fieldSimpleFragment);\n    }\n    footerXML.root().import(XMLFragment);\n\n    this.lastFooterId += 1;\n\n    return { footerId: this.lastFooterId, footerXML };\n  }\n}\n\nexport default DocxDocument;\n","import { namespaces } from '../src/helpers';\n\nconst generateDocumentTemplate = (width, height, orientation, margins) => {\n  return `\n  <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n\n    <w:document\n        xmlns:a=\"${namespaces.a}\"\n        xmlns:cdr=\"${namespaces.cdr}\"\n        xmlns:o=\"${namespaces.o}\"\n        xmlns:pic=\"${namespaces.pic}\"\n        xmlns:r=\"${namespaces.r}\"\n        xmlns:v=\"${namespaces.v}\"\n        xmlns:ve=\"${namespaces.ve}\"\n        xmlns:vt=\"${namespaces.vt}\"\n        xmlns:w=\"${namespaces.w}\"\n        xmlns:w10=\"${namespaces.w10}\"\n        xmlns:wp=\"${namespaces.wp}\"\n        xmlns:wne=\"${namespaces.wne}\"\n        >\n        <w:body>\n            <w:sectPr>\n                <w:pgSz w:w=\"${width}\" w:h=\"${height}\" w:orient=\"${orientation}\" />\n                <w:pgMar w:top=\"${margins.top}\"\n                        w:right=\"${margins.right}\"\n                        w:bottom=\"${margins.bottom}\"\n                        w:left=\"${margins.left}\"\n                        w:header=\"${margins.header}\"\n                        w:footer=\"${margins.footer}\"\n                        w:gutter=\"${margins.gutter}\"/>\n            </w:sectPr>\n        </w:body>\n    </w:document>\n  `;\n};\n\nexport default generateDocumentTemplate;\n","import { namespaces } from '../helpers';\n\nconst generateStylesXML = (font = 'Times New Roman', fontSize = 22, complexScriptFontSize = 22) => {\n  return `\n    <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n\n    <w:styles\n      xmlns:w=\"${namespaces.w}\"\n      xmlns:r=\"${namespaces.r}\" >\n        <w:docDefaults>\n          <w:rPrDefault>\n            <w:rPr>\n              <w:rFonts w:ascii=\"${font}\" w:eastAsiaTheme=\"minorHAnsi\" w:hAnsiTheme=\"minorHAnsi\" w:cstheme=\"minorBidi\" />\n              <w:sz w:val=\"${fontSize}\"/>\n              <w:szCs w:val=\"${complexScriptFontSize}\"/>\n              <w:lang w:val=\"en-US\" w:eastAsia=\"en-US\" w:bidi=\"ar-SA\"/>\n            </w:rPr>\n          </w:rPrDefault>\n          <w:pPrDefault>\n            <w:pPr>\n              <w:spacing w:after=\"120\" w:line=\"240\" w:lineRule=\"atLeast\"/>\n            </w:pPr>\n          </w:pPrDefault>\n        </w:docDefaults>\n        <w:style w:type=\"character\" w:styleId=\"Hyperlink\">\n          <w:name w:val=\"Hyperlink\"/>\n          <w:rPr>\n            <w:color w:val=\"0000FF\"/>\n            <w:u w:val=\"single\"/>\n          </w:rPr>\n        </w:style>\n    </w:styles>\n  `;\n};\n\nexport default generateStylesXML;\n","import { namespaces } from '../helpers';\n\nconst generateNumberingXMLTemplate = () => {\n  return `\n        <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n\n        <w:numbering\n        xmlns:w=\"${namespaces.w}\"\n        xmlns:ve=\"${namespaces.ve}\"\n        xmlns:o=\"${namespaces.o}\"\n        xmlns:r=\"${namespaces.r}\"\n        xmlns:v=\"${namespaces.v}\"\n        xmlns:wp=\"${namespaces.wp}\"\n        xmlns:w10=\"${namespaces.w10}\"\n        xmlns:wne=\"${namespaces.wne}\">\n        </w:numbering>\n    `;\n};\n\nexport default generateNumberingXMLTemplate;\n","const genericRelsXML = `\n    <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n\n    <Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">\n    </Relationships>\n`;\n\nexport default genericRelsXML;\n","import { create } from 'xmlbuilder2';\n\nimport { relsXML } from './schemas';\nimport DocxDocument from './docx-document';\nimport { renderDocumentFile } from './helpers';\nimport {\n  pixelRegex,\n  pixelToTWIP,\n  cmRegex,\n  cmToTWIP,\n  inchRegex,\n  inchToTWIP,\n  pointRegex,\n  pointToHIP,\n} from './utils/unit-conversion';\n\nconst VNode = require('virtual-dom/vnode/vnode');\nconst VText = require('virtual-dom/vnode/vtext');\nconst convertHTML = require('html-to-vdom')({\n  VNode,\n  VText,\n});\n\nconst defaultDocumentOptions = {\n  orientation: 'portrait',\n  margins: {\n    top: 1440,\n    right: 1800,\n    bottom: 1440,\n    left: 1800,\n    header: 720,\n    footer: 720,\n    gutter: 0,\n  },\n  title: '',\n  subject: '',\n  creator: 'html-to-docx',\n  keywords: ['html-to-docx'],\n  description: '',\n  lastModifiedBy: 'html-to-docx',\n  revision: 1,\n  createdAt: new Date(),\n  modifiedAt: new Date(),\n  headerType: 'default',\n  header: false,\n  footerType: 'default',\n  footer: false,\n  font: 'Times New Roman',\n  fontSize: 22,\n  complexScriptFontSize: 22,\n  table: {\n    row: {\n      cantSplit: false,\n    },\n  },\n  pageNumber: false,\n  skipFirstHeaderFooter: false,\n};\n\nconst mergeOptions = (options, patch) => ({ ...options, ...patch });\n\nconst fixupFontSize = (fontSize) => {\n  let normalizedFontSize;\n  if (pointRegex.test(fontSize)) {\n    const matchedParts = fontSize.match(pointRegex);\n\n    normalizedFontSize = pointToHIP(matchedParts[1]);\n  } else if (fontSize) {\n    // assuming it is already in HIP\n    normalizedFontSize = fontSize;\n  } else {\n    normalizedFontSize = null;\n  }\n\n  return normalizedFontSize;\n};\n\nconst fixupMargins = (margins) => {\n  let normalizedMargins = {};\n  if (typeof margins === 'object' && margins !== null) {\n    Object.keys(margins).forEach((key) => {\n      if (pixelRegex.test(margins[key])) {\n        const matchedParts = margins[key].match(pixelRegex);\n        normalizedMargins[key] = pixelToTWIP(matchedParts[1]);\n      } else if (cmRegex.test(margins[key])) {\n        const matchedParts = margins[key].match(cmRegex);\n        normalizedMargins[key] = cmToTWIP(matchedParts[1]);\n      } else if (inchRegex.test(margins[key])) {\n        const matchedParts = margins[key].match(inchRegex);\n        normalizedMargins[key] = inchToTWIP(matchedParts[1]);\n      } else if (margins[key]) {\n        normalizedMargins[key] = margins[key];\n      } else {\n        // incase value is something like 0\n        normalizedMargins[key] = defaultDocumentOptions.margins[key];\n      }\n    });\n  } else {\n    // eslint-disable-next-line no-param-reassign\n    normalizedMargins = null;\n  }\n\n  return normalizedMargins;\n};\n\nconst normalizeDocumentOptions = (documentOptions) => {\n  const normalizedDocumentOptions = { ...documentOptions };\n  Object.keys(documentOptions).forEach((key) => {\n    // eslint-disable-next-line default-case\n    switch (key) {\n      case 'margins':\n        normalizedDocumentOptions.margins = fixupMargins(documentOptions[key]);\n        break;\n      case 'fontSize':\n      case 'complexScriptFontSize':\n        normalizedDocumentOptions[key] = fixupFontSize(documentOptions[key]);\n        break;\n    }\n  });\n\n  return normalizedDocumentOptions;\n};\n\n// Ref: https://en.wikipedia.org/wiki/Office_Open_XML_file_formats\n// http://officeopenxml.com/anatomyofOOXML.php\n// eslint-disable-next-line import/prefer-default-export\nexport function addFilesToContainer(\n  zip,\n  htmlString,\n  suppliedDocumentOptions,\n  headerHTMLString,\n  footerHTMLString\n) {\n  const normalizedDocumentOptions = normalizeDocumentOptions(suppliedDocumentOptions);\n  const documentOptions = mergeOptions(defaultDocumentOptions, normalizedDocumentOptions);\n\n  if (documentOptions.header && !headerHTMLString) {\n    // eslint-disable-next-line no-param-reassign\n    headerHTMLString = '<p></p>';\n  }\n  if (documentOptions.footer && !footerHTMLString) {\n    // eslint-disable-next-line no-param-reassign\n    footerHTMLString = '<p></p>';\n  }\n\n  const docxDocument = new DocxDocument({ zip, htmlString, ...documentOptions });\n  // Conversion to Word XML happens here\n  docxDocument.documentXML = renderDocumentFile(docxDocument);\n\n  zip\n    .folder('_rels')\n    .file(\n      '.rels',\n      create({ encoding: 'UTF-8', standalone: true }, relsXML).toString({ prettyPrint: true }),\n      { createFolders: false }\n    );\n\n  zip.folder('docProps').file('core.xml', docxDocument.generateCoreXML(), {\n    createFolders: false,\n  });\n\n  if (docxDocument.header && headerHTMLString) {\n    const vTree = convertHTML(headerHTMLString);\n\n    docxDocument.relationshipFilename = 'header1';\n    const { headerId, headerXML } = docxDocument.generateHeaderXML(vTree);\n    docxDocument.relationshipFilename = 'document';\n\n    const relationshipId = docxDocument.createDocumentRelationships(\n      docxDocument.relationshipFilename,\n      'header',\n      `header${headerId}.xml`,\n      'Internal'\n    );\n\n    zip.folder('word').file(`header${headerId}.xml`, headerXML.toString({ prettyPrint: true }), {\n      createFolders: false,\n    });\n\n    docxDocument.headerObjects.push({ headerId, relationshipId, type: docxDocument.headerType });\n  }\n  if (docxDocument.footer && footerHTMLString) {\n    const vTree = convertHTML(footerHTMLString);\n\n    docxDocument.relationshipFilename = 'footer1';\n    const { footerId, footerXML } = docxDocument.generateFooterXML(vTree);\n    docxDocument.relationshipFilename = 'document';\n\n    const relationshipId = docxDocument.createDocumentRelationships(\n      docxDocument.relationshipFilename,\n      'footer',\n      `footer${footerId}.xml`,\n      'Internal'\n    );\n\n    zip.folder('word').file(`footer${footerId}.xml`, footerXML.toString({ prettyPrint: true }), {\n      createFolders: false,\n    });\n\n    docxDocument.footerObjects.push({ footerId, relationshipId, type: docxDocument.footerType });\n  }\n\n  zip\n    .folder('word')\n    .file('document.xml', docxDocument.generateDocumentXML(), {\n      createFolders: false,\n    })\n    .file('fontTable.xml', docxDocument.generateFontTableXML(), {\n      createFolders: false,\n    })\n    .file('styles.xml', docxDocument.generateStylesXML(), {\n      createFolders: false,\n    })\n    .file('numbering.xml', docxDocument.generateNumberingXML(), {\n      createFolders: false,\n    })\n    .file('settings.xml', docxDocument.generateSettingsXML(), {\n      createFolders: false,\n    })\n    .file('webSettings.xml', docxDocument.generateWebSettingsXML(), {\n      createFolders: false,\n    });\n\n  const relationshipXMLs = docxDocument.generateRelsXML();\n  if (relationshipXMLs && Array.isArray(relationshipXMLs)) {\n    relationshipXMLs.forEach(({ fileName, xmlString }) => {\n      zip.folder('word').folder('_rels').file(`${fileName}.xml.rels`, xmlString, {\n        createFolders: false,\n      });\n    });\n  }\n\n  zip.file('[Content_Types].xml', docxDocument.generateContentTypesXML(), { createFolders: false });\n\n  return zip;\n}\n","/* eslint-disable no-param-reassign */\nimport JSZip from 'jszip';\nimport { addFilesToContainer } from './src/html-to-docx';\n\nconst { minify } = require('html-minifier');\n\nconst minifyHTMLString = (htmlString) => {\n  if (typeof htmlString === 'string' || htmlString instanceof String) {\n    try {\n      const minifiedHTMLString = minify(htmlString, {\n        caseSensitive: true,\n        collapseWhitespace: true,\n        html5: false,\n        keepClosingSlash: true,\n      });\n\n      return minifiedHTMLString;\n    } catch (error) {\n      return null;\n    }\n  } else {\n    return null;\n  }\n};\n\nasync function generateContainer(\n  htmlString,\n  headerHTMLString,\n  documentOptions = {},\n  footerHTMLString\n) {\n  const zip = new JSZip();\n\n  let contentHTML = htmlString;\n  let headerHTML = headerHTMLString;\n  let footerHTML = footerHTMLString;\n  if (htmlString) {\n    contentHTML = minifyHTMLString(contentHTML);\n  }\n  if (headerHTMLString) {\n    headerHTML = minifyHTMLString(headerHTML);\n  }\n  if (footerHTMLString) {\n    footerHTML = minifyHTMLString(footerHTML);\n  }\n\n  addFilesToContainer(zip, contentHTML, documentOptions, headerHTML, footerHTML);\n\n  const buffer = await zip.generateAsync({ type: 'arraybuffer' });\n  if (Object.prototype.hasOwnProperty.call(global, 'Blob')) {\n    // eslint-disable-next-line no-undef\n    return new Blob([buffer], {\n      type: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    });\n  }\n  if (Object.prototype.hasOwnProperty.call(global, 'Buffer')) {\n    return Buffer.from(new Uint8Array(buffer));\n  }\n  throw new Error(\n    'Add blob support using a polyfill eg https://github.com/bjornstar/blob-polyfill'\n  );\n}\n\nexport default generateContainer;\n"],"names":["namespaces","rgbRegex","hslRegex","hexRegex","hex3Regex","rgbToHex","red","green","blue","map","x","parseInt","toString","length","join","defaultHeadingSizesInPixel","h1","h2","h3","h4","h5","h6","pixelRegex","percentageRegex","pointRegex","cmRegex","inchRegex","pixelToEMU","pixelValue","Math","round","EMUToTWIP","EMUValue","pointToTWIP","pointValue","pointToHIP","pixelToTWIP","pixelToHIP","TWIPValue","inchToTWIP","inchValue","inchToPoint","pixelToPoint","HIPValue","pointToEIP","PointValue","isVNode","require","isVText","colorNames","VText","fixupColorCode","colorCodeString","Object","prototype","hasOwnProperty","call","toLowerCase","test","matchedParts","match","hue","saturation","luminosity","hue2rgb","p","q","t","hex","hslToHex","hex3ToHex","buildShading","colorCode","fragment","namespaceAlias","w","ele","att","up","buildVertAlign","type","buildBold","buildItalics","buildUnderline","buildBorder","borderSide","borderSize","borderSpacing","borderColor","borderStroke","buildTextElement","text","txt","buildRunProperties","attributes","runPropertiesFragment","constructor","keys","forEach","key","boldFragment","import","italicsFragment","underlineFragment","colorFragment","shadingFragment","fontSizeFragment","fontSize","hyperlinkStyleFragment","buildRunStyleFragment","buildTextFormatting","vNode","tagName","color","buildHighlight","buildRun","runFragment","includes","textArray","vNodes","tempVNode","shift","push","formattingFragment","children","slice","concat","combinedString","textFragment","inlineOrAnchored","otherAttributes","imageFragment","buildDrawing","lineBreakFragment","buildLineBreak","fixupLineHeight","lineHeight","isNaN","fixupFontSize","fontSizeString","buildRunOrRuns","runFragments","index","childVNode","modifiedAttributes","properties","style","backgroundColor","buildRunOrHyperLink","docxDocumentInstance","relationshipId","createDocumentRelationships","relationshipFilename","href","hyperlinkFragment","r","hyperlink","Array","isArray","buildHorizontalAlignment","horizontalAlignment","buildParagraphProperties","paragraphPropertiesFragment","levelId","numberingId","numberingPropertiesFragment","String","buildNumberingProperties","numbering","horizontalAlignmentFragment","textAlign","display","paragraphBorderFragment","bordersObject","top","size","spacing","left","bottom","right","borderName","borderFragment","buildParagraphBorder","indentationFragment","buildIndentation","indentation","spacingFragment","lineSpacing","beforeSpacing","afterSpacing","buildSpacing","computeImageDimensions","maximumWidth","originalWidth","originalHeight","aspectRatio","maximumWidthInEMU","modifiedHeight","modifiedWidth","originalWidthInEMU","originalHeightInEMU","width","percentageValue","height","buildParagraph","paragraphFragment","verticalAlign","strong","runOrHyperlinkFragments","iteratorIndex","runOrHyperlinkFragment","buildTableCellProperties","tableCellPropertiesFragment","verticalAlignmentFragment","verticalAlignment","buildVerticalAlignment","gridSpanFragment","spanValue","colSpan","tableCellBorderFragment","tableCellBorder","tableCellBordersFragment","stroke","borders","border","buildTableCellBorders","fixupTableCellBorder","cssBorderParser","buildTableCell","tableCellFragment","buildImage","grandChildVNode","buildTableRowProperties","tableRowPropertiesFragment","tableRowHeightFragment","tableRowHeight","rowCantSplit","cantSplitFragment","buildTableRow","tableRowFragment","rowHeightString","fixupRowHeight","undefined","tableColumns","filter","columnWidth","availableDocumentSpace","buildTableGridCol","gridWidth","buildTableGrid","tableGridFragment","gridColumns","tableGridColFragment","buildCellMargin","side","margin","buildTableProperties","tablePropertiesFragment","tableBordersFragment","tableBorder","buildTableBorders","tableCellSpacingFragment","cellSpacing","buildTableCellSpacing","tableCellSpacing","tableWidthFragment","tableWidth","tableCellMarginFragment","tableCellMarFragment","marginFragment","buildTableCellMargins","alignmentFragment","borderString","split","toUpperCase","buildTable","tableFragment","tableAttributes","tableStyles","tableBorders","tableCellBorders","minimumWidth","borderStrike","cssSize","cssStroke","cssColor","insideV","insideH","lastIndex","min","max","buildGraphicFrameTransform","graphicFrameTransformFragment","a","offsetFragment","extentsFragment","buildExtents","buildShapeProperties","shapeProperties","pic","presetGeometryFragment","buildStretch","stretchFragment","fillRectFragment","buildBinaryLargeImageOrPictureFill","binaryLargeImageOrPictureFillFragment","binaryLargeImageOrPictureFragment","buildBinaryLargeImageOrPicture","srcRectFragment","buildNonVisualPictureProperties","pictureId","pictureNameWithExtension","pictureDescription","nonVisualPicturePropertiesFragment","nonVisualDrawingPropertiesFragment","buildNonVisualDrawingProperties","nonVisualPictureDrawingPropertiesFragment","buildNonVisualPictureDrawingProperties","buildGraphicData","graphicType","graphicDataFragment","pictureFragment","id","fileNameWithExtension","description","binaryLargeImageOrPictureFill","buildPicture","buildGraphic","graphicFragment","buildDrawingObjectNonVisualProperties","pictureName","wp","buildEffectExtentFragment","buildExtent","buildAnchoredDrawing","anchoredDrawingFragment","simplePosFragment","positionHFragment","positionVFragment","extentFragment","effectExtentFragment","wrapSquareFragment","drawingObjectNonVisualPropertiesFragment","drawingFragment","inlineOrAnchoredDrawingFragment","inlineDrawingFragment","buildInlineDrawing","VNode","escape","sizeOf","convertHTML","response","createMediaFile","decodeURIComponent","src","error","zip","folder","file","Buffer","from","fileContent","createFolders","documentRelsId","imageBuffer","imageProperties","xmlBuilder.buildParagraph","findXMLEquivalent","xmlFragment","class","xmlBuilder.fixupLineHeight","headingFragment","xmlBuilder.buildTable","tableRowCantSplit","emptyParagraphFragment","listElements","vNodeObjects","node","level","tempVNodeObject","reduce","accumulator","paragraphVNode","buildList","createNumbering","listElement","linebreakFragment","convertVTreeToXML","vTree","xmlBuilder.buildTextElement","documentRelsXML","relsXML","fontTableXML","settingsXML","webSettingsXML","crypto","landscapeMargins","header","footer","gutter","portraitMargins","DocxDocument","[object Object]","htmlString","orientation","margins","title","subject","creator","keywords","lastModifiedBy","revision","createdAt","modifiedAt","headerType","footerType","font","complexScriptFontSize","table","pageNumber","skipFirstHeaderFooter","this","Date","row","cantSplit","lastNumberingId","lastMediaId","lastHeaderId","lastFooterId","stylesObjects","numberingObjects","relationships","fileName","lastRelsId","rels","mediaFiles","headerObjects","footerObjects","documentXML","generateContentTypesXML","bind","generateCoreXML","generateDocumentXML","generateSettingsXML","generateWebSettingsXML","generateStylesXML","generateFontTableXML","generateNumberingXML","generateRelsXML","generateHeaderXML","generateFooterXML","contentTypesXML","create","encoding","standalone","headerId","contentTypesFragment","defaultNamespace","root","footerId","prettyPrint","toISOString","first","headerXmlFragment","headerFragment","footerXmlFragment","footerFragment","titlePageFragment","settingsXMLString","webSettingsXMLString","fontTableXMLString","numberingXML","abstractNumberingFragments","numberingFragments","abstractNumberingFragment","value","self","findIndex","v","levelFragment","last","numberingFragment","target","targetMode","relationshipFragment","documentRelsXMLString","appendRelationships","xmlString","base64String","matches","Error","base64FileContent","fileExtension","createHash","update","randomBytes","digest","relationshipType","relationshipObject","find","relationship","headerXML","ve","o","w10","XMLFragment","footerXML","fieldSimpleFragment","defaultDocumentOptions","fixupMargins","normalizedMargins","cmValue","cmToInch","normalizeDocumentOptions","documentOptions","normalizedDocumentOptions","normalizedFontSize","addFilesToContainer","suppliedDocumentOptions","headerHTMLString","footerHTMLString","options","patch","docxDocument","relationshipXMLs","minify","minifyHTMLString","caseSensitive","collapseWhitespace","html5","keepClosingSlash","async","JSZip","contentHTML","headerHTML","footerHTML","buffer","generateAsync","global","Blob","Uint8Array"],"mappings":"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"}